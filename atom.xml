<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CuSO4D&#39;s Electrolytic Cell</title>
  
  <subtitle>乱流に巻き込まれ</subtitle>
  <link href="https://blog.depoze.xyz/atom.xml" rel="self"/>
  
  <link href="https://blog.depoze.xyz/"/>
  <updated>2023-07-10T14:40:00.419Z</updated>
  <id>https://blog.depoze.xyz/</id>
  
  <author>
    <name>CuSO4_Deposit</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>光之女皇战斗笔记</title>
    <link href="https://blog.depoze.xyz/2023/07/terraria-eol/"/>
    <id>https://blog.depoze.xyz/2023/07/terraria-eol/</id>
    <published>2023-07-10T13:32:29.000Z</published>
    <updated>2023-07-10T14:40:00.419Z</updated>
    
    <content type="html"><![CDATA[<p>长期以来，对战白光一直是矛盾老大难问题，从一定意义上讲，能否彻底解决对战白光问题，关乎调节条件，帮助负担，支持重点，尊重基本纲领，关乎提倡行动，是统一思想的重中之重。因此，解决对战白光问题，是贯穿始终之举。</p><h2 id="以实效之飞翼-展对战白光之宏图"><a href="#以实效之飞翼-展对战白光之宏图" class="headerlink" title="以实效之飞翼 展对战白光之宏图"></a>以实效之飞翼 展对战白光之宏图</h2><p>根据倾向表明，要想对战白光，就必须发挥运行，我们应该清醒地看到，我国正处于结构调整期、产业转型期，经济发展面临挑战，人均资源相对不足，进一步发展还面临着一些突出的问题和矛盾。从我们发展的战略全局看，走普遍增加道路，调整主体结构，转变能力方式，缓解办法瓶颈制约，加快方针升级，促进需求，维护环节利益。进入新阶段，对战白光面临着新的机遇和挑战。按照部署和要求，全面贯彻落实科学发展观，求真务实，开拓创新，扎实工作，为构建和谐社会服务，为指导工程，为考验创新，优化敏锐性，综上所述，我们应该求真务实，积极推进对战白光工作制度化，建立体系，积极推进对战白光工作正常化，规范办文，积极推进对战白光工作程序化，强化责任，积极推进对战白光工作有序化，注重质量，积极推进对战白光服务规范化，统筹兼顾，积极推进对战白光工作正常化。</p><h2 id="以钉钉子精神-打赢对战白光攻坚战"><a href="#以钉钉子精神-打赢对战白光攻坚战" class="headerlink" title="以钉钉子精神 打赢对战白光攻坚战"></a>以钉钉子精神 打赢对战白光攻坚战</h2><p><a href="https://terraria.wiki.gg/wiki/Empress_of_Light">白光的攻击模式</a>：</p><h4 id="第一阶段"><a href="#第一阶段" class="headerlink" title="第一阶段"></a>第一阶段</h4><p>当女皇生成时，她会悬停数秒，然后发动第一轮攻击：</p><ol><li>七彩矢</li><li>猛冲攻击</li><li>太阳舞</li><li>猛冲攻击</li><li>永恒彩虹</li><li>七彩矢</li><li>猛冲攻击</li><li>空灵长枪</li><li>猛冲攻击</li><li>永恒彩虹</li></ol><p>在进入第二阶段前，都以以上为一个周期进行无限次数的循环。</p><h4 id="第二阶段"><a href="#第二阶段" class="headerlink" title="第二阶段"></a>第二阶段</h4><p>当光之女皇的生命值低于一半时，她先会消失一秒钟，然后在进行新一组攻击前重新出现在玩家预计位置的上方，攻击间隔相比第一阶段要更短：</p><ol><li>空灵长枪 2</li><li>七彩矢</li><li>猛冲攻击</li><li>由于处于暴怒状态，她会在进行冲刺攻击后释放一次瞄准玩家本身而不是预判位置的空灵长枪。</li><li>永恒彩虹</li><li>七彩矢</li><li>太阳舞</li><li>空灵长枪</li><li>猛冲攻击</li><li>七彩矢 2</li></ol><p>在她被击败前，都以以上为一个周期进行无限次数的循环。</p><p>除了第二阶段第6个的七彩矢，其他的七彩矢均可以通过先水平飞行再竖直抬升越过光女头顶来躲避。</p><p>整个第一阶段整体上向右移动；二阶段光女开始攻击后则整体向左移动。</p><p>第一阶段的1,2,3,4，处理七彩矢时向右飞行，注意要和光女有一定的水平距离再抬升，否则容易撞到；太阳舞会释放三组光线， 每次释放一个新光线就在光线还不造成伤害时向左上方移动一个格位；太阳舞结束时可以再打短暂的一个时间，然后向其左下方掉落以躲避光女向左的冲击。</p><p>第一阶段的5,6,7，冲击后光女会在玩家左侧，这时稍微加速水平向右移动远离永恒彩虹。如果还没到二阶段，光女将释放七彩矢，使用和上面相同的办法躲避七彩矢和猛冲。记得控制光女猛冲的方向来控制金额技能结束时她与玩家的相对位置。</p><p>第一阶段的8,9,10，如果还没有进入二阶段，此时光女会释放空灵长枪。控制好运动的方向先水平再向下再向左，每次转弯的时机是刚好在长枪射出前，一定不要乱晃移动方向，尽量集火；光女猛冲时向下掉落躲避，使得光女在玩家左侧，然后向右水平移动远离永恒彩虹。</p><p>如果还没有进入二阶段，则进行上面的循环，准备躲避七彩矢。</p><p>如果进入了二阶段（光女血量不足一半，消失一秒），则在这时尽量水平快速向右移动，为接下来的向左移动尽量准备空间，等待第一次空灵长枪2。这时也要调整自己的高度，在不要进入太空的前提下尽量高。</p><p>第二阶段的1，这时正在水平向右移动，如果出现了长枪轨迹，立即开始竖直下落躲避前两组长枪，然后开始水平向左躲避后四组长枪，移动的方向大致和长枪的中间轨迹垂直。</p><p>第二阶段的2,3，和上面的七彩矢处理方法相同，绕过光女头顶并使得其向右冲撞以保持冲刺后她在玩家右侧。</p><p>第二阶段的4，和上面处理方式类似，这里可以向回飞行因为后方没有永恒彩虹，但结束后最好要保持光女在右侧。</p><p>第二阶段的5,6,7，这里的七彩矢不可以和之前一样处理，因为光女会在玩家试图向上移动和绕过其头顶时释放太阳舞。这里七彩矢释放后要先向左下移动集火，然后向右下快速移动来绕开七彩矢，然后恢复向左飞行的状态；此时光女应当在释放太阳舞，注意玩家的高度不要在向左飞行时撞到太阳舞的下缘；</p><p>第二阶段的89：飞行很短时间后就会出现空灵长枪轨迹，先水平集火然后向左上移动躲避和集火，然后回到原来的水平轨道躲避；在光女快要冲撞时抬升或掉落躲避冲撞均可。</p><p>第二阶段10,1：七彩矢2追踪性能较强，如果这时没有及时打死光女，那么此时光女也会释放空灵长枪2。这时就需要在躲避长枪的时候顺便躲避七彩矢。方法是先水平集火七彩矢2，然后它接近时竖直向上起飞躲避前两组长枪，向右越过光女头顶然后水平飞行躲避后四组长枪，这个操作每次转弯后要尽量利用翅膀的加速，来躲避七彩矢的追踪。</p><p>如果光女还没死，结束后继续二阶段循环。</p><h2 id="细节决定成败-需多积光女统计数据之功"><a href="#细节决定成败-需多积光女统计数据之功" class="headerlink" title="细节决定成败 需多积光女统计数据之功"></a>细节决定成败 需多积光女统计数据之功</h2><p>23.07.07，使用了全套石后、夜光后、月前装备（外星法杖+万花筒+阴森套+双足翼龙翅膀）完成纯召唤师白光，第一阶段光女只会释放到5.永恒彩虹就会残血进入二阶段，二阶段将刚好进行一轮，释放七彩矢2后光女死亡。平均dps大约1700，鞭子够得到时可达到2200。</p><p>实现时练习共消耗210只七彩草蛉。</p><p>可以找到160个墓碑记载被击杀时死亡的记录（因为有一些练习是夜光所以没有死亡得到墓碑）：</p><p>凶手是永不消逝的彩虹：██░░░░░░░░░░░░░░░░░░ 18 &#x2F; 160</p><p>凶手是空灵长枪：████░░░░░░░░░░░░░░░░ 32 &#x2F; 160</p><p>凶手是太阳舞：████░░░░░░░░░░░░░░░░ 31 &#x2F; 160</p><p>凶手是光女（冲撞）：██░░░░░░░░░░░░░░░░░░ 23 &#x2F; 160</p><p>凶手是七彩矢：█████░░░░░░░░░░░░░░░ 46 &#x2F; 160</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;长期以来，对战白光一直是矛盾老大难问题，从一定意义上讲，能否彻底解决对战白光问题，关乎调节条件，帮助负担，支持重点，尊重基本纲领，关乎提倡行动，是统一思想的重中之重。因此，解决对战白光问题，是贯穿始终之举。&lt;/p&gt;
&lt;h2 id=&quot;以实效之飞翼-展对战白光之宏图&quot;&gt;&lt;a h</summary>
      
    
    
    
    
    <category term="Terraria" scheme="https://blog.depoze.xyz/tags/Terraria/"/>
    
  </entry>
  
  <entry>
    <title>Pro Git Notes</title>
    <link href="https://blog.depoze.xyz/2023/06/Pro-Git-Notes/"/>
    <id>https://blog.depoze.xyz/2023/06/Pro-Git-Notes/</id>
    <published>2023-06-08T01:34:07.000Z</published>
    <updated>2023-06-11T15:27:27.170Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Fundamentals"><a href="#Fundamentals" class="headerlink" title="Fundamentals"></a>Fundamentals</h1><h2 id="Snapshots-not-differences"><a href="#Snapshots-not-differences" class="headerlink" title="Snapshots, not differences"></a>Snapshots, not differences</h2><p>Git thinks about its data as a stream of <em>snapshots</em>, not a base file with a stream of changes. Each commit creates a full snapshot.</p><h2 id="Git-generally-only-Adds-Data"><a href="#Git-generally-only-Adds-Data" class="headerlink" title="Git generally only Adds Data"></a>Git generally only Adds Data</h2><p>Nearly all of operations in Git only <em>add</em> data to the database. It’s hard to erase some data.</p><h2 id="Git-Has-Integrity"><a href="#Git-Has-Integrity" class="headerlink" title="Git Has Integrity"></a>Git Has Integrity</h2><p>Everything in Git is checksumed (<img src="/" alt="using ">SHA-1) and referred to by its hash.</p><h2 id="The-Three-States"><a href="#The-Three-States" class="headerlink" title="The Three States"></a>The Three States</h2><p>Git is a mini file system. The tracked file can be in 3 states: <em>modified</em>, <em>staged</em>, and <em>committed</em>.</p><ul><li><p><em>Modified</em> means the file has changed but not commited to the database. Git only knows it changed. Using <code>git add</code> will make it <em>staged</em>.</p></li><li><p><em>Staged</em> means you have marked a modified file in its <strong>current</strong> version to go into the next commit snapshot. In this time the current version of file is stored in <em>stage area</em>. Using <code>git commit</code> will make it <em>committed</em>.</p></li><li><p><em>Committed</em> means the data has been stored in the database and have not been modified since last commit.</p></li></ul><h2 id="Branch-is-a-pointer"><a href="#Branch-is-a-pointer" class="headerlink" title="Branch is a pointer"></a>Branch is a pointer</h2><p>Branching is a “killer feature” of git. Git encourages workflows that branch and merge often. Then what is a branch?</p><p>When creating commits, you generally creates <em>blob</em> objects (content of a version of a file) and <em>commit</em> objects (containing a pointer to the snapshot, author’s info and pointers to the parent(s) of this commit). A commit object have zero parents when it is init commit, one parent when normal committing, and multiple parents when merging from 2+ branches. Thus, the commits form a tree, each node points to its parent(s).</p><p>A branch is simply a lightweight movable pointer to one of the commits. The special pointer <code>HEAD</code> points to the branch you are currently on.</p><p>A branch is nothing but a simple file containing the 40 character hash of its pointing commit and a newline char. That is, a 41-byte file.</p><h3 id="Merge-strategies"><a href="#Merge-strategies" class="headerlink" title="Merge strategies"></a>Merge strategies</h3><p>When you try to merge one commit with a commit that can be reached by following the first commit’s history, Git simplifies things by moving the pointer forward because there’re no divergent work to merge. This is called <strong>fast-forward</strong>.</p><p>When your commit has diverged from some older point, that is, the commit on the branch you’re on isn’t a direct ancestor of the branch you’re merging in, Git does a three-way merge, using the two snapshots pointed to by the branch tips and the common ancestor of the two. Git will create a new snapshot that results from the three-way merge and automatically creates a commit (a merge commit with multiple parents) that points to it. This is called <strong>recursive</strong>. (You may have to resolve conflicts manually.)</p><h1 id="Quickref"><a href="#Quickref" class="headerlink" title="Quickref"></a>Quickref</h1><h2 id="Short-status"><a href="#Short-status" class="headerlink" title="Short status"></a>Short status</h2><p><code>git status -s</code> or <code>git status --short</code> gives a short version of <code>git status</code>.</p><h2 id="gitignore"><a href="#gitignore" class="headerlink" title=".gitignore"></a>.gitignore</h2><h2 id="View-Staged-and-Unstaged-Changes"><a href="#View-Staged-and-Unstaged-Changes" class="headerlink" title="View Staged and Unstaged Changes"></a>View Staged and Unstaged Changes</h2><p>To see the modified but not staged files, use <code>git diff</code>.</p><p>To see the staged but not committed files, use <code>git diff --staged</code> or <code>git diff --cached</code>. (<code>--cached</code> and <code>--staged</code> are synonyms)</p><h2 id="Get-a-more-explicit-reminder-of-changes-when-committting"><a href="#Get-a-more-explicit-reminder-of-changes-when-committting" class="headerlink" title="Get a more explicit reminder of changes when committting"></a>Get a more explicit reminder of changes when committting</h2><p>Use <code>git commit -v</code> will puts the diff in the editor so you can see exactly what will be committed.</p><h2 id="Skipping-the-staging-process"><a href="#Skipping-the-staging-process" class="headerlink" title="Skipping the staging process"></a>Skipping the staging process</h2><p><strong>This is not recommended since unwanted changed may be committed.</strong></p><p>Use <code>git commit -a</code>. Git will automatically stage every tracked file before committing. That is, skipping the <code>git add</code>.</p><h2 id="Removing-files"><a href="#Removing-files" class="headerlink" title="Removing files"></a>Removing files</h2><p><code>git rm</code> will remove the file from <strong>both working tree and staging area.</strong></p><p><code>git rm --cached</code> will remove the file only from staging area.</p><h2 id="View-History"><a href="#View-History" class="headerlink" title="View History"></a>View History</h2><p>For code review, use <code>git log -p -2</code>  to see the last 2 commit history, with patch output (diff). </p><p>For an more abbreviated version, use <code>--stat</code>.</p><p><code>--pretty=</code> can receive a lot of options. such as <code>oneline</code>, <code>short</code>, <code>full</code>, <code>fuller</code> or even <code>format:&quot;&lt;format description&gt;&quot;</code>.</p><p><code>git log --graph</code> shows an ASCII graph of branch and merging history.</p><p>Use <code>git log --since=2.weeks</code> or <code>git log --until=2008-01-15</code> to limit output using dates.</p><p>Use <code>git log --grep</code> to show only commits that contains given string.</p><h2 id="Undoing-things"><a href="#Undoing-things" class="headerlink" title="Undoing things"></a>Undoing things</h2><p>This is the few areas in Git that do not add data. Be careful.</p><h3 id="Uncommit"><a href="#Uncommit" class="headerlink" title="Uncommit"></a>Uncommit</h3><p>When you commit too early and forget to add some files, or mess up the commit message, you want to redo the commit, use <code>git commit --amend</code>.</p><p><strong>Only amend commits that are still local and not been pushed somewhere. Amending previously pushed commits and force pushing the branch will cause problems for your collaborators.</strong></p><h3 id="Unstage"><a href="#Unstage" class="headerlink" title="Unstage"></a>Unstage</h3><p>Use <code>git reset HEAD &lt;file&gt;</code> or <code>git restore --staged &lt;file&gt;</code>(recommended, introduced in git 2.23.0) to unstage a file.</p><h3 id="Unmodify"><a href="#Unmodify" class="headerlink" title="Unmodify"></a>Unmodify</h3><p><strong>This is a dangerous command. Don’t use it unless you absolutely know that you don’t want the unsaved changes.</strong></p><p>Use <code>git checkout -- &lt;file&gt;</code>  or <code>git restore &lt;file&gt;</code> (recommended, introduced in git 2.23.0) to discard changes in working directory (and replace it with the last staged&#x2F;committed version).</p><h2 id="Working-with-remotes"><a href="#Working-with-remotes" class="headerlink" title="Working with remotes"></a>Working with remotes</h2><p><code>git remote -v</code> shows the URLs and shortnames of remotes.</p><p><code>git remote add &lt;shortname&gt; &lt;URL&gt;</code> to add remote.</p><p><code>git fetch</code>  goes out to the remote and downloads all the data from that remote that you don’t have yet, but it doesn’t automatically merges it with any of your work or modify what you are currently working on. You have to merge it manually.</p><p>If your current branch is set to track a remote branch, <code>git pull</code> will fetch and automatically merge the remote branch into your current branch.</p><p><code>git remote show</code> will tell you which branch is automatically pushed to, and which remote branches you don’t yet have, which branches you have have been removed from the server.</p><h2 id="Tagging"><a href="#Tagging" class="headerlink" title="Tagging"></a>Tagging</h2><p>Git have a tag feature. People often use tags to mark release points.</p><p>Use <code>git tag</code> (or with optional <code>-l</code> or <code>--list</code>) to list the existing tags (in alphabetical order).</p><p>Use <code>git tag -l &quot;v1.8.5*&quot;</code> to list the 1.8.5 series.</p><p>Use <code>git tag -a &lt;tag name&gt; -m &lt;tag message&gt;</code> to create an annotated tag. The tag data along with the commit can be shown using <code>git show &lt;tag name&gt;</code>.</p><p>Use <code>git tag &lt;tag name&gt;</code> to create a light-weight tag.</p><p>Use <code>git tag -a &lt;tag name&gt; &lt;commit hash&gt;</code> to tag a former commit.</p><p>By default, <code>git push</code> doesn’t transfer tags to remotes. Use <code>git push origin &lt;tag name&gt;</code> to push a tag.  <code>git push --tags</code> to push all tags. <code>git push --follow-tags</code> to push only annotated tags.</p><p>Use <code>git tag -d</code> to delete tags.</p><p>Use <code>git checkout &lt;tag name&gt;</code> to check out tag, and here you will enter “detached HEAD” state.</p><h2 id="Alias"><a href="#Alias" class="headerlink" title="Alias"></a>Alias</h2><p>Use <code>git config --global alias.unstage &quot;reset HEAD --&quot;</code> will make the following commands equivalent:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git unstage fileA</span><br><span class="line">$ git reset HEAD -- fileA</span><br></pre></td></tr></table></figure><h2 id="Branching"><a href="#Branching" class="headerlink" title="Branching"></a>Branching</h2><p><code>git switch &lt;branch&gt;</code> to switch, <code>git switch -c &lt;branch&gt;</code> to create and switch.</p><p>When you switch branches in git, files in your working directory will change. Git will replace them as what they like in that branch. If Git cannot do it cleanly, it will not let you switch at all.</p><p>To show the last commit on each branch, use <code>git branch -v</code>.</p><p>To show the tracking branches and ahead&#x2F;behind info, use <code>git branch -vv</code>. Notice this command does not reach out to the servers. It just tells you info since the last time you fetched.</p><p><code>--merged</code> and <code>--no-merged</code> can be provided as param to filter branches. Do not delete no-merged branches.</p><p>Let a branch track some remote branch: <code>git branch -u &lt;remote name&gt;/&lt;branch name&gt;</code> or full version: <code>git branch --set-upstream-to &lt;remote name&gt;/&lt;branch name&gt;</code>.</p><p>When you have a tracking branch set up, you can reference its upstream branch with <code>@&#123;upstream&#125;</code> or <code>@&#123;u&#125;</code> shorthand. e.g. <code>git merge @&#123;u&#125;</code>.</p><p>Delete a remote branch using <code>git push &lt;remote name&gt; --delete &lt;branch name&gt;</code>.</p><p>Rename: <code>git branch --move &lt;original branch name&gt; &lt;new branch name&gt;</code>.</p><h3 id="See-diverge-history"><a href="#See-diverge-history" class="headerlink" title="See diverge history"></a>See diverge history</h3><p><code>git log --oneline --decorate --graph --all</code> will print the history of commits, show where your branch pointers are and how the history has diverged.</p><h2 id="Share-your-Work"><a href="#Share-your-Work" class="headerlink" title="Share your Work"></a>Share your Work</h2><p><code>git push &lt;remote name&gt; &lt;local branch name&gt;:&lt;remote branch name&gt;</code> .</p><h2 id="Rebasing"><a href="#Rebasing" class="headerlink" title="Rebasing"></a>Rebasing</h2><hr><p>To be continued..</p><p>19% ███░░░░░░░░░░░░░░░░░ 100%</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Fundamentals&quot;&gt;&lt;a href=&quot;#Fundamentals&quot; class=&quot;headerlink&quot; title=&quot;Fundamentals&quot;&gt;&lt;/a&gt;Fundamentals&lt;/h1&gt;&lt;h2 id=&quot;Snapshots-not-differences</summary>
      
    
    
    
    
    <category term="Git" scheme="https://blog.depoze.xyz/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>[转载]使用Robocopy命令</title>
    <link href="https://blog.depoze.xyz/2023/05/Robocopy-in-Windows/"/>
    <id>https://blog.depoze.xyz/2023/05/Robocopy-in-Windows/</id>
    <published>2023-05-31T02:14:39.000Z</published>
    <updated>2023-06-08T15:35:50.088Z</updated>
    
    <content type="html"><![CDATA[<p>source: <a href="http://www.ddsofts.com/">www.ddsofts.com</a> (已无法访问)</p><p><a href="https://www.cnblogs.com/xinyuxin912/p/3181564.html">[转载]使用RoboCopy 命令</a> </p><h2 id="转载-使用Robocopy命令"><a href="#转载-使用Robocopy命令" class="headerlink" title="[转载]使用Robocopy命令"></a>[转载]使用Robocopy命令</h2><p>经常进行文件管理操作的朋友们，不满意于Windows系统内置的复制功能，因为它太龟速了。于是大家就使用FastCopy、TeraCopy之类的软件来加速复制，但是你是否知道Windows 7已经内置快速复制的功能？</p><p>这项功能就是RoboCopy，它是一个命令行的目录复制命令，自从Windows NT 4.0 开始就成为windows<br>资源工具包的一部分，然后在Windows Vista、Windows 7和 Windows Server<br>2008采用作为标准的功能。Windows<br>7的此项功能也得到升级——已经可以支持多线程了，这就意味着可以大大提升复制速度。而且该功能可以创建两个文件结构完全的镜像副本而不复制任何不需要的重复文件，同时还允许您保留所有相关文件信息，包括日期和时间戳、安全访问控制列表（ACL)）等等。下面先看看这条命令的用法吧：</p><p><strong>命令语法</strong>  <code>ROBOCOPY source destination [file [file]…] [options]</code></p><p>源：源目录(驱动器:\路径或\服务器\共享\路径)<br>目标：目标目录(驱动器:\路径或\服务器\共享\路径)<br>文件：要复制的文件(名称&#x2F;通配符: 默认为 “<em>.</em>“)</p><p><strong>复制选项</strong></p><p>&#x2F;S：复制子目录，但不复制空的子目录。<br>&#x2F;E：复制子目录，包括空的子目录。<br>&#x2F;LEV:n：仅复制源目录树的前 n 层。<br>&#x2F;Z：在可重新启动模式下复制文件。<br>&#x2F;B：在备份模式下复制文件。<br>&#x2F;ZB：使用可重新启动模式；如果拒绝访问，请使用备份模式。<br>&#x2F;EFSRAW：在 EFS RAW 模式下复制所有加密的文件。<br>&#x2F;COPY:复制标记:: 要复制的文件内容(默认为 &#x2F;COPY:DAT)。(复制标记: D&#x3D;数据，A&#x3D;属性，T&#x3D;时间戳)。(S&#x3D;安全&#x3D;NTFS ACL，O&#x3D;所有者信息，U&#x3D;审核信息)。<br>&#x2F;DCOPY:T：复制目录时间戳。<br>&#x2F;SEC：复制具有安全性的文件(等同于 &#x2F;COPY:DATS)。<br>&#x2F;COPYALL：复制所有文件信息(等同于 &#x2F;COPY:DATSOU)。<br>&#x2F;NOCOPY：不复制任何文件信息(与 &#x2F;PURGE 一起使用生效)。<br>&#x2F;SECFIX：修复所有文件的文件安全性，即使是跳过的文件。<br>&#x2F;TIMFIX：修复所有文件的文件时间，即使是跳过的文件。<br>&#x2F;PURGE：删除源中不再存在的目标文件&#x2F;目录。<br>&#x2F;MIR：镜像目录树(等同于 &#x2F;E 和 &#x2F;PURGE)。<br>&#x2F;MOV：移动文件(复制后从源中删除)。<br>&#x2F;MOVE：移动文件和目录(复制后从源中删除)。<br>&#x2F;A+:[RASHCNET]：将给定的属性添加到复制文件。<br>&#x2F;A-:[RASHCNET]：从复制文件中删除给定的属性。<br>&#x2F;CREATE：仅创建目录树和长度为零的文件。<br>&#x2F;FAT：仅使用 8.3 FAT 文件名创建目标文件。<br>&#x2F;256：关闭超长路径(&gt; 256 字符)支持。<br>&#x2F;MON:n：监视源；发现多于 n 个更改时再次运行。<br>&#x2F;MOT:m：监视源；如果更改，在 m 分钟时间内再次运行。<br>&#x2F;RH:hhmm-hhmm：运行小时数 – 可以启动新副本的时间。<br>&#x2F;PF：以每个文件(而不是每个步骤)为基础检查运行小时数。<br>&#x2F;IPG:n：程序包间的间距(ms)，以释放低速线路上的带宽。<br>&#x2F;SL：对照目标复制符号链接。<br>&#x2F;MT[:n]：使用 n 个线程进行多线程复制(默认值为 8)。n 必须至少为 1，但不得大于 128。该选项与 &#x2F;IPG 和 &#x2F;EFSRAW 选项不兼容。使用 &#x2F;LOG 选项重定向输出以便获得最佳性能。</p><p><strong>文件选择选项</strong></p><p>&#x2F;A：仅复制具有存档属性集的文件。<br>&#x2F;M：仅复制具有存档属性的文件并重置存档属性。<br>&#x2F;IA:[RASHCNETO]：仅包含具有任意给定属性集的文件。<br>&#x2F;XA:[RASHCNETO]：排除具有任意给定属性集的文件。<br>&#x2F;XF 文件[文件]…：排除与给定名称&#x2F;路径&#x2F;通配符匹配的文件。<br>&#x2F;XD 目录[目录]…：排除与给定名称&#x2F;路径匹配的目录。<br>&#x2F;XC：排除已更改的文件。<br>&#x2F;XN：排除较新的文件。<br>&#x2F;XO：排除较旧的文件。<br>&#x2F;XX：排除多余的文件和目录。<br>&#x2F;XL：排除孤立的文件和目录。<br>&#x2F;IS：包含相同文件。<br>&#x2F;IT：包含已调整的文件。<br>&#x2F;MAX:n：最大的文件大小 – 排除大于 n 字节的文件。<br>&#x2F;MIN:n：最小的文件大小 – 排除小于 n 字节的文件。<br>&#x2F;MAXAGE:n：最长的文件存在时间 – 排除早于 n 天&#x2F;日期的文件。<br>&#x2F;MINAGE:n：最短的文件存在时间 – 排除晚于 n 天&#x2F;日期的文件。<br>&#x2F;MAXLAD:n：最大的最后访问日期 – 排除自 n 以来未使用的文件。<br>&#x2F;MINLAD:n：最小的最后访问日期 – 排除自 n 以来使用的文件。(If n &lt; 1900 then n &#x3D; n days, else n &#x3D; YYYYMMDD date)。<br>&#x2F;XJ：排除接合点。(默认情况下通常包括)。<br>&#x2F;FFT：假设 FAT 文件时间(2 秒粒度)。<br>&#x2F;DST：弥补 1 小时的 DST 时间差。<br>&#x2F;XJD：排除目录的接合点。<br>&#x2F;XJF：排除文件的接合点。</p><p><strong>重试选项</strong></p><p>&#x2F;R:n：失败副本的重试次数: 默认为 1 百万。<br>&#x2F;W:n：两次重试间的等待时间: 默认为 30 秒。<br>&#x2F;REG：将注册表中的 &#x2F;R:n 和 &#x2F;W:n 保存为默认设置。<br>&#x2F;TBD：等待定义共享名称(重试错误 67)。</p><p><strong>日志记录选项</strong></p><p>&#x2F;L：仅列出 – 不复制、添加时间戳或删除任何文件。<br>&#x2F;X：报告所有多余的文件，而不只是选中的文件。<br>&#x2F;V：生成详细输出，同时显示跳过的文件。<br>&#x2F;TS：在输出中包含源文件的时间戳。<br>&#x2F;FP：在输出中包含文件的完整路径名称。<br>&#x2F;BYTES：以字节打印大小。<br>&#x2F;NS：无大小 – 不记录文件大小。<br>&#x2F;NC：无类别 – 不记录文件类别。<br>&#x2F;NFL：无文件列表 – 不记录文件名。<br>&#x2F;NDL：无目录列表 – 不记录目录名称。<br>&#x2F;NP：无进度 – 不显示已复制的百分比。<br>&#x2F;ETA：显示复制文件的预期到达时间。<br>&#x2F;LOG:文件：将状态输出到日志文件(覆盖现有日志)。<br>&#x2F;LOG+:文件：将状态输出到日志文件(附加到现有日志中)。<br>&#x2F;UNILOG:文件：以 UNICODE 方式将状态输出到日志文件(覆盖现有日志)。<br>&#x2F;UNILOG+:文件：以 UNICODE 方式将状态输出到日志文件(附加到现有日志中)。<br>&#x2F;TEE：输出到控制台窗口和日志文件。<br>&#x2F;NJH：没有作业标头。<br>&#x2F;NJS：没有作业摘要。<br>&#x2F;UNICODE：以 UNICODE 方式输出状态。</p><p><strong>作业选项</strong></p><p>&#x2F;JOB:作业名称：从命名的作业文件中提取参数。<br>&#x2F;SAVE:作业名称：将参数保存到命名的作业文件<br>&#x2F;QUIT：处理命令行后退出(以查看参数)。<br>&#x2F;NOSD：未指定源目录。<br>&#x2F;NODD：未指定目标目录。<br>&#x2F;IF：包含以下文件。</p><p>这么多的命令我不会用怎么办？你可以到官网下载GUI，它提供交互界面使得使用简化不少.</p><p>【复制测试】</p><p>我将一共达7.9G的《阿凡达》高清电影文件，通过Robocopy、系统内置的复制功能和Terecopy三项分别复制到相同的目的地，复制过程中基本没有进行其他系统操作，得出复制完成所需要的时间并比较</p><p>1、通过Robocopy命令复制文件，使用最大线程128，花费的时间为6分02秒</p><p>2、使用系统内置的文件复制功能，使用秒表计时显示时间为6分22秒</p><p>3、使用Terecopy复制，显示使用5分32秒</p><p><strong>测试速度大小结果</strong>：Terecopy &gt; Robocopy命令 &gt; 内置复制功能，可见Robocopy与专业的复制软件在速度上有一定的差距，而且易用性比较差。但是在没有安装其他复制软件的情况下，要想快速复制大量的文件，Robocopy命令还是一个不错的选择。</p><hr><p>—————-【例子】——————-<br><strong>实例一：文件，想怎么复制就怎么复制</strong><br>　　<strong>[实现效果]</strong><br>　　随时将源文件夹中的纯文本（TXT）、Word文档（DOC）还有BMP、TIF图像文件复制到目标文件夹中  ，这是在“资源管理器”中直接拖放所做不到的。</p><p>        <strong>[简单命令]</strong>  </p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">robocopy d:\work e:\back *.txt *.doc *.bmp *.tif /s</span><br></pre></td></tr></table></figure><p>        <strong>[参数讲解]</strong><br>　　将d:\work文件下的TXT、DOC、BMP、TIF复制到e:\back文件夹，其他文件则不复制。&#x2F;s是表示包括<br>除空文件下的所有子目录，如果没有则仅复制d:\work下的文件而不包括子目录。<br>　　<strong>[举一反三]</strong><br>　　（1）如果要将文件夹下的所有文件包括空文件夹全部复制到目标文件夹，命令为：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">robocopy d:\work e:\back /e</span><br></pre></td></tr></table></figure><p>&#x2F;e表示复制所有子目录包括空文件夹。<br>　　（2）如果只想复制两个层级内的文件（再下的层级里的文件则不拷贝），输入命令：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">robocopy d:\work e:\back /e /lev:<span class="number">2</span>  </span><br></pre></td></tr></table></figure><p>        &#x2F;lev:2表示复制的层级，比如指定层级后d:\work\soft（二级）下的文件会被复制，而<br>d:\work\soft\office（***）下的文件则不被复制。<br><strong>实例二：垃圾文件不复制</strong><br>　　<strong>[实现效果]</strong></p><p>        在备份数据时，不可避免会将类似于*.bak、*.tmp的垃圾文件也复制到目标文件夹，用Robocopy可以将我们经常碰到的垃圾文件在拷贝时就清理出家门，从而生成一个干干净净的文件夹。<br>　　<strong>[简单命令]</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">robocopy d:\work e:\back /e /xf *.tmp *.bak  　　</span><br></pre></td></tr></table></figure><p><strong>[参数讲解]</strong><br>　　&#x2F;xf为指定不执行复制操作的文件类型，后面的文件名支持通配符。如果参数为&#x2F;xd，则表示排除后  面指定的文件夹。<br><strong>实例三：大文件 我不要</strong><br>　　<strong>[实现效果]</strong><br>　　复制的时候，为了节省时间，需要将一些大文件暂时不拷贝，等有空闲时间时，再执行复制操作不迟。<br>　　<strong>[简单命令]</strong>  </p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">robocopy d:\work e:\back /e /max:<span class="number">6000000</span>  </span><br></pre></td></tr></table></figure><p>　　<strong>[参数讲解]</strong><br>　　仅复制不大于6000000bytes的文件，&#x2F;max:后直接接数值，数值单位为byte。如果是&#x2F;min:1000，则  复制不小于1000bytes的文件。两个参数可以同时使用，界定复制文件大小的范围。<br><strong>实例四：只要这一周修改的文件</strong><br>　　<strong>[实现效果]</strong><br>　　这一周处理了哪些文档？编辑了那些文件？将这些修改了的文档复制到一个文件夹下，再好好回味一下。本例就是要将d:\work中最近七天内新建或修改了的TXT、DOC、XLS、PPT等文档，复制到e:\look  目录下。<br>　　<strong>[简单命令]</strong>  </p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">robocopy d:\work e:\look /s *.txt *.doc *.xls *.ppt /maxage:<span class="number">7</span>  </span><br></pre></td></tr></table></figure><p><strong>[参数讲解]</strong><br>　　&#x2F;maxage:表示最远修改时间的，修改时间比这个还要旧的文件将不会被复制。&#x2F;maxage:后可接数字  ，也可以接日期，数字小于1900时表示天数，否则就得用YYYYMMDD来表示具体的日期，如&#x2F;maxage:20040210表示2004年2月10日后被修改的文件才允许复制。与之相对应的参数是&#x2F;minage，表示最近修改时间，比这个时间新的文件将不被复制。<br>　　<strong>[举一反三]</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">robocopy d:\work e:\look /s *.txt *.doc *.xls *.ppt /maxage:<span class="number">7</span> /minage:<span class="number">1</span></span><br></pre></td></tr></table></figure><p>　　则表示近七天内除今天外修改的文件才允许被复制。<br>　　与修改时间相对的还有最近访问时间，&#x2F;maxage指最远访问时间，比这个时间老的文件将不被复制。  &#x2F;minage是指最近访问时间，比这个时间新的文件将不被复制。<br><strong>实例五：我的文档排排站</strong><br>　　<strong>[实现效果]</strong><br>　　上例中复制时，所有的文档都会带来本身的路径信息，文档是会将其所存放的文件夹也复制过来。  这给我们的翻阅查看带来很多不便，得单击多层文件夹才能看到文件，能不能将所有的文档直接复制到  一个文件夹下呢？这个需要用XXCOPY来实现。<br>   　<strong>[简单命令]</strong>　 </p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxcopy d:\work e:\look /s /<span class="keyword">in</span>*.txt /<span class="keyword">in</span>*.doc /sg /yy /da:<span class="number">2004</span><span class="literal">-02-02</span> /DB:<span class="number">2004</span><span class="literal">-02-10</span>/DA:<span class="number">1997</span><span class="literal">-01-01</span>  </span><br></pre></td></tr></table></figure><p>　　<strong>[参数讲解]</strong><br>　　此命令将d:\work中从2004年2月2日到2月10生成的 TXT、DOC文件全部直接复制到e:\look目录下，不新建子文件夹，打开e:\look就能看到所有文件。XXCOPY和Robocopy的语法参数还是有较大差异的，表示指定文件类型时，XXCOPY会用&#x2F;in*.*，表示日期时&#x2F;da为在指定时间后，&#x2F;db为在指定时间前，日期的表示为YYYY-MM-DD。<br>　　另外，&#x2F;sg表示复制文件到同一文件夹，&#x2F;yy表示在所有要求用户应答的地方都自动认为是Yes，在执行过程中不需要用户干预。<br><strong>实例六：完全克隆</strong><br>　　<strong>[实现效果]</strong><br>　　我们一般采取的复制方式默认是增量复制，即根据文件的大小、修改时间将源文件夹里的内容向目标文件夹复制，久而久之，目标文件夹里就可能存在大量源件夹里早已经删除且无用的文件和文件夹。如果要让备份完全相同，即拷贝时删除在目标文件夹里存在但源文件夹里并没有的文件。<br>　　<strong>[简单命令]</strong>  </p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">robocopy d:\work e:\look /mir  </span><br></pre></td></tr></table></figure><p>　　<strong>[参数讲解]</strong><br>　　&#x2F;mir的作用等同于&#x2F;purge &#x2F;e，&#x2F;purge表示清理目标文件夹有而源文件夹里没有的文件（夹）。通过这个命令，能保证源文件夹和目标文件夹结构与文件完全相同。这在创建镜像备份时，非常有用。<br><strong>实例七：移动文件</strong><br>　　<strong>[实现效果]</strong><br>　　我们前面讲的都是复制，如果我们要将文件夹移动到目标文件夹，如何操作呢？<br>　　<strong>[简单命令]</strong>  </p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">robocopy d:\work e:\look /<span class="built_in">move</span> /e</span><br></pre></td></tr></table></figure><p><strong>[参数讲解]</strong><br>　　其中，&#x2F;move表示移动。<br><strong>实例八：我只要文件夹骨架</strong><br>　　<strong>[实现效果]</strong><br>　　笔者的工作需要周期性地新建和整理大量的文件夹，每次的文件夹结构一样，只是文件不尽相同。如果是以前，就得一个一个简单重复去制作，而现在就不需要了。Robocopy和XXCOPY可以让你轻松实现复制文件夹结构。<br>　　<strong>[简单命令]</strong>  </p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxcopy d:\work e:\mystruct /t /yy /dl3</span><br></pre></td></tr></table></figure><p>        <strong>[参数讲解]</strong><br>　　将d:\work的三层文件夹结构复制到e:\mystruct中。其中&#x2F;t表示创建文件夹结构，&#x2F;dl3表示复制的  文件夹结构为***，数字可以自行输入，如果没有此参数，默认建立整个文件夹结构。<br>　　Robocopy创建文件夹相对要麻烦一些，&#x2F;create参数不仅要创建结构，还要创建文件夹下所有文件的0字节文件，并非真正的结构，我们只好剑走偏锋了。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">robocopy d:\work e:\mystruct /e /lev:<span class="number">3</span> /minage:<span class="number">19000101</span>  </span><br></pre></td></tr></table></figure><p>为Robocopy指定一个不可能创建文件的时间，因为有参数&#x2F;e 的作用，虽然没有文件符合要求（你机器里没有早于1900年1月1日的文件），但Robocopy还是会忠实地创建文件夹，这样就达到了生成文件夹结构的目的。另外，&#x2F;lev:3表示复制文件夹的层级，同样可以自行输入。<br><strong>实例九：隐藏文件我不要</strong><br>　　<strong>[实现效果]</strong><br>　　在默认状态下，隐藏文件是并不显示的，但在复制的过程中，它还会随着文件夹一起被复制。可不可以将这些隐藏文件排除在复制范围之外呢？<br>　　<strong>[简单命令]</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">robocopy d:\work e:\back /e /xa:<span class="built_in">h</span></span><br></pre></td></tr></table></figure><p>　　<strong>[参数讲解]</strong><br>　　Robocopy支持对属性进行操作。上面的命令将复制源文件夹中全部文件，但全部具有隐藏属性的文件将不会被复制。&#x2F;xa:h，表示将具有隐藏属性的排除出复制范围，与之相对应的是&#x2F;ia，表示包括只对拥有指定属性的执行操作。属性有R：只读，A：存档，S：系统，H：隐藏等几种供选择。<br>　　<strong>[举一反三]</strong><br>　　（1）此外，Robocopy还有&#x2F;a+、&#x2F;a-等参数对文件属性进行操作，分别表示在文件被拷贝后为文件添加、去除某属性。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">robocopy d:\work e:\back /ia:rs</span><br></pre></td></tr></table></figure><p>　　表示只复制具有只读和系统属性的文件。<br>　　（2）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">robocopy c: d: /<span class="literal">-a</span>:rsh</span><br></pre></td></tr></table></figure><p>　　表示将文件拷贝到D盘后，将拷贝生成的文件的只读、系统、隐藏属性去掉，以方便查看和修改。<br><strong>实例十：NTFS权限跟着走</strong><br>　　<strong>[实现效果]</strong><br>　　在使用Windows 2000、Windows XP时，在多用户使用一台电脑时或管理服务器时，经常要为文件夹指定用户访问和修改的权限（如图1，需要分区为NTFS）。不过，用一般的复制方式无法保留我们设置的权限，这在服务器备份时意味着我们得重新设置用户权限。不过，Robocopy可以让我们在复制文件的时候，将属性、用户权限、所有者都可以一并复制到目标文件夹中。  </p><p>备份双友邻精彩5例－Robocopy和xxcopy全掌握<br>　　<strong>[简单命令]</strong>  </p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">robocopy d:\work e:\back /e /copyall </span><br></pre></td></tr></table></figure><p>        <strong>[参数讲解]</strong><br>　　&#x2F;copyall等于&#x2F;copy:datsou，表示将所有源文件夹的信息复制到目标文件夹中，其中D：文件数据，  A：文件属性，T：时间信息，S：权限信息，O：所有者信息，U：审核信息。<br>　　<strong>[举一反三]</strong><br>　　如果源文件夹的权限被修改，需要同样更新目标文件夹的权限时，我们不必再重复复制，只需输入</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">robocopy d:\work e:\back /is /<span class="built_in">copy</span>:sou</span><br></pre></td></tr></table></figure><p>　　如果没有&#x2F;copy参数，默认为&#x2F;copy:dat，没有后面三项的信息。<br><strong>实例十一：集中备份到文件服务器</strong><br>　　<strong>[实现效果]</strong><br>　　希望每天能够把相应数据备份到文件服务器上，以免数据丢失。<br>　　<strong>[简单命令]</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">robocopy d:\work \ctips_serverarticlesshare /e /copyall</span><br></pre></td></tr></table></figure><p>　　<strong>[参数讲解]</strong><br>　　从中可以看出，robocopy完全支持文件服务器共享文件夹数据的拷贝。<br>　　<strong>[举一反三]</strong><br>　　（1）如果我们创建了一个环境变量，如定义%databack%\ctips_serverarticles\back，那只要输入相应的命令：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">robocopy d:\work %databack% /e /copyall</span><br></pre></td></tr></table></figure><p>即可把d:\work下的文件全部备份到 \ctips_serverarticles\back下。当然，如果\ctips_serverarticles\back空间不够时，只要更换环境变量的值到其他文件夹，如\ctips_serverarticles ewback，上述命令无需更改就可以反数据拷贝到新<br>的文件夹中。<br>　　（2）如果你只想把数据备份到共享文件夹中以你的机器名为名字的共享文件夹中，使用xxcopy会更方便：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxcopy d:\work \ctips_serverarticles/<span class="variable">$HOST</span><span class="variable">$</span> /e /yy </span><br></pre></td></tr></table></figure><p>其中&#x2F;$HOST$表示你的机器名，如你的机器名为CTIPS_SYJ，那会把d:\work文件夹下的文件拷贝到\ctips_serverarticles\CTIPS_SYJ文件夹下。如果你的机器名为CTIPS_MLB，那执行上述命令后就可以把d:\work文件夹下的文件拷贝到\ctips_serverarticles\CTIPS_MLB文件夹下。由于同局域网内的机器名字不会相同，执行上述命令后就可以保证数据不会被拷贝到同一文件夹下。<br><strong>实例十二：一动就备份</strong><br>　　<strong>[实现效果]</strong><br>　　有些工作内容非常重要，需要时时刻刻注意备份，可是我们哪里有这么好记性和耐性呢？这事，还是交给Robocopy来做吧。Robocopy能时时监视要备份的文件夹，只要文件夹修改到一定时间和程序，Robocopy就会立即开始备份。它会一直监视文件夹，除非用户自己终止。<br>　　<strong>[简单命令]</strong>  </p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">robocopy d:\work e:\back /e /copyall /mot:<span class="number">1</span> /mon:<span class="number">2</span></span><br></pre></td></tr></table></figure><p>　　<strong>[参数讲解]</strong><br>　　上述命令表示复制文件夹所有信息到目标文件夹并进行监视。执行此命令后，命令提示符窗口如图2所示。一旦时间过了一分钟，并且源文件夹至少有或2处以上的修改Robocopy就会自动启动另一个进程，执行上述备份操作。Robocopy能监视源文件夹结构、文件和文件夹名称、大小、最后修改时间，在这里，甚至连属性和权限等信息被修改时，Robocopy也会记为修改次数。<br>备份双友邻精彩5例－Robocopy和xxcopy全掌握<br>　　&#x2F;mot后接的是时间（分钟），是指Robocopy执行操作的最短时间；&#x2F;mon后接的是最少文件修改个数。在监视过程中，会自动记录时间和修改的次数，只有同时符合以上两个条件时，Robocopy才开始执行，执行完成后，这两个数据会自动清零，并重新开始监视文件夹，除非用户关闭命令提示符窗口或按下Ctrl+Break键。<br>　　<strong>[举一反三]</strong><br>　　如果你要开机就监视并备份相应文件夹，则可以把上述命令放到“启动”组中。<br><strong>实例十三：不到时间不备份</strong><br>　　<strong>[实现效果]</strong><br>　　复制的过程总会占用系统资源，如果能设置在自己不在电脑边上的时候开始复制备份，就会方便得多。比如，每天5:50下班，希望下班后，到达6点时，Robocopy自动开始备份相应数据。<br>　　<strong>[简单命令]</strong>  </p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">robocopy d:\work e:\back /e /rh:<span class="number">1800</span><span class="literal">-1830</span>  </span><br></pre></td></tr></table></figure><p>        <strong>[举一反三]</strong><br>　　运行后，复制操作将会等待至指定时间开始（如图3）。其中，RH格式为&#x2F;RH:hhmm-hhmm，指定Robocopy开始的时间段，在这个时间段外，拷贝会被暂停。时间为24小时格式，4个数字长，从0000到2359，而且两个数字不能相同。<br>备份双友邻精彩5例－Robocopy和xxcopy全掌握<br><strong>实例十四：计划任务备份</strong><br>　　以上的到时间备份、监视文件夹备份方式，每次重启系统会都会要重新执行以上命令，还远远不够智能，如果能和Windows的计划任务配合，所有问题就迎刃而解了。以我们要在每天10:00自动调用Robocopy开始监视备份文件夹为例，说一说计划任务与Robocopy的携手。<br>　　第一步：新建BAT文件<br>新建一个批处理文件autobak.bat，输入如下命令  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">robocopy d:\work e:\back  /e /copyall  /mot:1 /mon:2</span><br></pre></td></tr></table></figure><p>　　第二步：创建计划任务<br>选择“开始→设置→控制面板”，双击“任务计划”图标。把autobak.bat批处理文件拖放到“任务计划”窗口，然后双击新生成的autobak.bat图标，在弹出窗口中设置其属性。<br>　　第三步：设置开始时间<br>切换到“日程安排”标签，单击“任务计划”下拉列表框，从中选择“每天”，“开始时间”设置为<br>10:00，单击“高级”可以设置起止的日期（如图4）。<br>　　通过上述设置后，到了设置的时间，机器就会自动备份执行批处理文件，自动备份并监视文件夹。<br>备份双友邻精彩5例－Robocopy和xxcopy全掌握<br><strong>实例十五：清理文件也拿手</strong><br>　　除了一般的复制功能，XXCOPY还有文件清理功能，可以将不需要的文件快速清理出硬盘。以下命令会清除文件和文件夹，请先建立测试文件夹掌握其操作后再对文件夹进行操作。<br>1.清除所有无用文件  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxcopy d:\work*.tmp /s /h /yy /rs  </span><br></pre></td></tr></table></figure><p>&#x2F;rs表示不复制而直接从源文件夹中删除指定文件，&#x2F;h表示指定隐藏和系统文件。<br>2.清除文件夹</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxcopy c: emp /rmdir /db:2002-01-01 /yy</span><br></pre></td></tr></table></figure><p>删除c: emp中在2002年1月1日前的修改的文件夹。<br>3.删除空文件夹  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxcopy c: emp /rmdir /sz:0 /yy</span><br></pre></td></tr></table></figure><p>删除c: emp下所有空文件夹，&#x2F;sz:0指定大小为0的文件（夹）。<br>4.删除0字节文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxcopy c: emp*.* /sz:0 /s /h /yy /rs  </span><br></pre></td></tr></table></figure><p>通过以上四种方式的组合，我们可以轻松实现对文件及文件夹的整理工作。<br>最后，还有一几个小技巧告诉你，希望能有利于你更好地使用XXCOPY和Robocopy。<br>★将命令变成任务<br>在Robocopy加上“&#x2F;save:任务名”可以将当前操作记录为任务文件，通过“&#x2F;job:任务名”就可方便调用，不需要再输入一长串的命令了。此任务文件可以用纯文本编辑器（如记事本）来编辑。<br>★将复制备份过程录下来<br>默认情况下，Robocopy的操作过程只是在命令提示符中显示，我们可以让它把操作过程输出为TXT文件，加上“&#x2F;log:文件名.txt”即可。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;source: &lt;a href=&quot;http://www.ddsofts.com/&quot;&gt;www.ddsofts.com&lt;/a&gt; (已无法访问)&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/xinyuxin912/p/3181564.html&quot;</summary>
      
    
    
    
    
    <category term="Windows" scheme="https://blog.depoze.xyz/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>Terraria text color</title>
    <link href="https://blog.depoze.xyz/2023/05/Terraria-text-color/"/>
    <id>https://blog.depoze.xyz/2023/05/Terraria-text-color/</id>
    <published>2023-05-20T07:31:51.000Z</published>
    <updated>2023-05-20T08:12:40.030Z</updated>
    
    <content type="html"><![CDATA[<p>In terraria, announcement-box-syntax can be used to display text in different colors. This post records some color codes of my common use. They may not be accurate since they are obtained using the colorpicker.</p><h2 id="Announcement-Box-Syntax"><a href="#Announcement-Box-Syntax" class="headerlink" title="Announcement Box Syntax"></a>Announcement Box Syntax</h2><p>To specify a color, use <code>[c/&lt;color code&gt;:&lt;text&gt;]</code>.</p><p>For example, <code>[c/FFFF00:114514!]</code> will be displayed as </p><p style="color:#FFFF00">114514!</p><p>To display an item, use <code>[i/&lt;attribute&gt;:&lt;ID&gt;]</code>, where &lt;ID&gt; is the item id and &lt;attrbute&gt; can be in the following syntax:</p><ul><li><p><code>s&lt;number&gt;</code>, <code>&lt;number&gt;</code> is the stack number.</p></li><li><p><code>p&lt;id&gt;</code>, <code>&lt;id&gt;</code> is an id of modifier.</p></li></ul><p>There are also syntax displaying player names, achievements and controller buttons.</p><h2 id="Rarity-color"><a href="#Rarity-color" class="headerlink" title="Rarity color"></a>Rarity color</h2><p style="color:#787878">Grey: #787878</p><p style="color:#8F8FFF">Blue: #8F8FFF</p><p style="color:#96FF96">Green: #96FF96</p><p style="color:#F7C291">Orange: #F7C291</p><p style="color:#FF9696">Light Red: #FF9696</p><p style="color:#FD95FD">Pink: #FD95FD</p><h2 id="Event-color"><a href="#Event-color" class="headerlink" title="Event color"></a>Event color</h2><p style="color:#32FF82">#32FF82: The Blood Moon is rising...</p><p style="color:#AF4BFF">#AF4BFF: The old one's army is approaching!</p><p style="color:#E11919">#E11919: Player was slain...</p><p style="color:#FF1919">#FF1919: NPC was slain...</p><p style="color:#FF00A0">#FF00A0: Looks like xxx is throwing a party</p><p style="color:#327DFF">#327DFF: NPC has arrived!</p><p style="color:#FFF014">#FFF014: Spawn point set!</p><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p><a href="https://terraria.wiki.gg/wiki/Status_messages">Status messages - Official Terraria Wiki</a></p><p><a href="https://terraria.wiki.gg/wiki/Chat#Color">Chat - Official Terraria Wiki</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;In terraria, announcement-box-syntax can be used to display text in different colors. This post records some color codes of my common use</summary>
      
    
    
    
    
    <category term="Terraria" scheme="https://blog.depoze.xyz/tags/Terraria/"/>
    
  </entry>
  
  <entry>
    <title>record some music theory in case I could understand</title>
    <link href="https://blog.depoze.xyz/2023/05/music-theory/"/>
    <id>https://blog.depoze.xyz/2023/05/music-theory/</id>
    <published>2023-05-17T13:41:02.000Z</published>
    <updated>2023-05-20T16:23:53.372Z</updated>
    
    <content type="html"><![CDATA[<h1 id="中央音乐学院-基本乐理-付妮-2009-08"><a href="#中央音乐学院-基本乐理-付妮-2009-08" class="headerlink" title="中央音乐学院 基本乐理 - 付妮 2009.08"></a>中央音乐学院 基本乐理 - 付妮 2009.08</h1><p>BV1WE411A7yA</p><h2 id="记谱法的基本知识"><a href="#记谱法的基本知识" class="headerlink" title="记谱法的基本知识"></a>记谱法的基本知识</h2><p>常见的记谱错误：“戴帽”，“穿鞋”</p><p>音名、唱名和note的对应：</p><table><thead><tr><th>音名</th><th>C</th><th>D</th><th>E</th><th>F</th><th>G</th><th>A</th><th>B</th></tr></thead><tbody><tr><td>唱名</td><td>do</td><td>re</td><td>mi</td><td>fa</td><td>sol</td><td>la</td><td>si</td></tr></tbody></table><p>高音谱号（G谱号）：从第二线开始画半圆切于第三线和第一线，向上超过第五线后返回在第四线交叉。 高音谱号确认了第二线的音符为小字一组$g^1$ ($G4$)，下加一线的音符为Middle C.</p><p>低音谱号（F谱号）：从第四线开始画半圆切于第五线，向下到第二线结束。在第三间和第四间加点。低音谱号确认了第四线的音符为小字组$f$ ($F3$)，上加一线的音符为Middle C.</p><p>C谱号：C谱号确认了中间开口对应的谱线的音符为Middle C.</p><p>音的分组：Middle C &#x3D; 小字一组 $c^1$ ＝ ハ1 &#x3D; $C4$. 向右直到$c^5$。向左为小字组、大字组、大字一组，直到$A_2$。</p><p>音符的写法：</p><ol><li><p>符干长度通常为八度，如果在上下加二线以外则适当延长符干至第三线；</p></li><li><p>音符高于第三线，符干向下，在音符左侧，反之符干向上，在音符右侧。第三线随意；</p></li><li><p>同时演奏不同音高的音符：共用符干；</p></li><li><p>如果一个音符发生在另一个音符的时值内，反转它的符干；</p></li><li><p>大谱表中上下音符发生的时间需要对齐；</p></li><li><p>不同声部中音符尽管同时发生，也将符干分开。</p></li></ol><p>附点的写法：</p><ol><li><p>如果音符在线上，附点写在其右上方的间上；</p></li><li><p>如果音符在间上，写在它自己右侧的间上。</p></li></ol><p>符尾连接的写法：</p><ol><li><p>以整体的音变化方向为变化方向；</p></li><li><p>符尾应当避免过于倾斜；</p></li><li><p>多条符尾平行书写；</p></li><li><p>有歌词时符尾可能不连接；</p></li><li><p>大谱表中高低声部共同构成旋律时可能共用符尾；</p></li><li><p>按句子连接符尾。这可能会使得符尾穿过小节线。</p></li></ol><h2 id="节奏与节拍"><a href="#节奏与节拍" class="headerlink" title="节奏与节拍"></a>节奏与节拍</h2><p>拍号：每小节应当包含的拍数 &#x2F; 单位拍的类型。</p><p>拍号转换时使用双纵线。</p><p>4&#x2F;4拍：第一拍开始的是强拍，其他称为弱起。</p><p>以单纯音符为单位拍的称单拍子(3&#x2F;4, 4&#x2F;4)，以附点音符为单位拍的称复拍子(6&#x2F;8, 6&#x2F;9, 12&#x2F;8)，以单拍子组合形成的称混合拍子(5&#x2F;8 &#x3D; 2&#x2F;8 + 3&#x2F;8)。</p><p>6&#x2F;8拍是以附点四分音做为单位拍，每个小节有两拍，类似地12&#x2F;16拍是以附点八分音为单位拍，每小节有两拍。</p><p>节奏组合需要根据拍号详细处理。</p><h2 id="音阶"><a href="#音阶" class="headerlink" title="音阶"></a>音阶</h2><h3 id="自然大调"><a href="#自然大调" class="headerlink" title="自然大调"></a>自然大调</h3><p>自然大调音阶从$C4$开始：</p><table><thead><tr><th>音级标记</th><th>I</th><th>II</th><th>III</th><th>IV</th><th>V</th><th>VI</th><th>VII</th></tr></thead><tbody><tr><td>音名</td><td>C</td><td>D</td><td>E</td><td>F</td><td>G</td><td>A</td><td>B</td></tr><tr><td>音级名称</td><td>主音</td><td>上主音</td><td>中音</td><td>下属音</td><td>属音</td><td>下中音</td><td>导音</td></tr></tbody></table><p>五种变音记号：重升、升、还原、降、重降。</p><p>升调号系列音阶的生成：将当前的属音作为主音，重新按照”全全半全全全半“的方法记录为音阶。被升调的音按顺序分别是fa-do-sol-re-la-mi-si，从它们的每一个开始向上找一个半音就可以找到对应的调号：G-D-A-E-B-#F-#C。</p><p>降调号系列音阶的生成：将当前的下属音作为主音，重新按照”全全半全全全半“的方法记录为音阶。被降调的音按顺序分别是si-mi-la-re-sol-do-fa。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;中央音乐学院-基本乐理-付妮-2009-08&quot;&gt;&lt;a href=&quot;#中央音乐学院-基本乐理-付妮-2009-08&quot; class=&quot;headerlink&quot; title=&quot;中央音乐学院 基本乐理 - 付妮 2009.08&quot;&gt;&lt;/a&gt;中央音乐学院 基本乐理 - 付妮 2</summary>
      
    
    
    
    
    <category term="Music Theory" scheme="https://blog.depoze.xyz/tags/Music-Theory/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 142: Linked List Cycle II</title>
    <link href="https://blog.depoze.xyz/2023/04/Leetcode-142-Linked-List-Cycle-II/"/>
    <id>https://blog.depoze.xyz/2023/04/Leetcode-142-Linked-List-Cycle-II/</id>
    <published>2023-04-26T02:52:52.000Z</published>
    <updated>2023-04-28T13:36:00.401Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><p>Given the <code>head</code> of a linked list, return <em>the node where the cycle begins. If there is no cycle, return</em> <code>null</code>.</p><p>There is a cycle in a linked list if there is some node in the list that can be reached again by continuously following the <code>next</code> pointer. Internally, <code>pos</code> is used to denote the index of the node that tail’s <code>next</code> pointer is connected to (<strong>0-indexed</strong>). It is <code>-1</code> if there is no cycle. <strong>Note that</strong> <code>pos</code> <strong>is not passed as a parameter</strong>.</p><p><strong>Do not modify</strong> the linked list.</p><p>Example 1: </p><p><strong>Input:</strong> head &#x3D; [3,2,0,-4], pos &#x3D; 1<br><strong>Output:</strong> tail connects to node index 1<br><strong>Explanation:</strong> There is a cycle in the linked list, where tail connects to the second node.</p><p>Example 2:</p><p><strong>Input:</strong> head &#x3D; [1], pos &#x3D; -1<br><strong>Output:</strong> no cycle<br><strong>Explanation:</strong> There is no cycle in the linked list.</p><h2 id="My-Solution"><a href="#My-Solution" class="headerlink" title="My Solution"></a>My Solution</h2><p>I have explored this problem 2 yrs ago. <a href="https://blog.depoze.xyz/2021/09/cycle-containing-and-intersection-properties-of-linked-list/">Link: 单链表的含环和相交性质探究过程记录</a></p><p>In that post I mostly focused on the correctness of two-pointer algorithm, but did not explain well on how to solve this problem. So I write another post here to explain the solution of this problem.</p><p><img src="/../images/2023/Linklist-2pointers.svg"></p><p>(Color in this image: #0E9E69 Green Haze)</p><p>Let 2 pointers <code>fp</code> and <code>sp</code> point to <code>head</code>. In each iteration,  <code>sp</code> moves ahead 1 step one time while <code>fp</code> moves ahead 2. Stop the loop when <code>fp</code> and <code>sp</code> are at the same node. <code>s</code> denotes the final position of the slower pointer (also the final position of the faster), and <code>f_0</code> denotes the positon of the faster pointer when the slower pointer has just enter the circle. $L_c$ denotes the length of circle. $L_f,\ L_s$ denote the total length the faster and the slower goes. Other lengths’ notations are in the figure.</p><p>We have the following equations:</p><p>$$<br>L_f &#x3D; 2L_s.<br>$$</p><p>since at every iteration, <code>fp</code> moves 2 steps and <code>sp</code> moves 1.</p><p>$$<br>L_s &#x3D; L_0 + L_{fs}.<br>$$</p><p>since we define the distance between <code>s</code> and the node where cycle begins as $L_{fs}$.</p><p>$$<br>L_s &#x3D; L_f - L_s &#x3D; nL_c.<br>$$</p><p>The 1st equal sign holds because $L_f &#x3D; 2L_s$. The 2nd equal sign holds because <code>fp</code> just moves several more cycles than <code>sp</code> - they start from the same node and stops from the same node.</p><p>Alg:</p><ol><li><p>Use fast-and-slow pointers to traverse the linklist from <code>head</code>. Record the node where <code>fp</code> and <code>sp</code> meets as <code>s</code>. We also have $L_f$ and $L_s$.</p></li><li><p>Use fast-and-slow pointers to traverse the linklist, starting from <code>s</code>. Record the distance  <code>sp</code> goes, it should be $L_c$, since <code>fp</code> moves 1 step relative to <code>sp</code>. so we can solve $n &#x3D; \frac{L_s}{L_c}$.</p></li><li><p>Let a pointer <code>p</code> starts from <code>head</code> and goes $(n - 1)L_c$ steps. Since $L_s &#x3D; L_0 + L_{fs} &#x3D; nL_c$, distance between <code>p</code> and the node where the cycle begins is $L_c - L_{fs}$. Let a pointer <code>q</code> points to $s$. The distance between <code>q</code> and the node where the cycle begins is also $L_c - L_{fs}$.</p></li><li><p>Let <code>p</code> and <code>q</code> moves at the same speed of 1. The node where they meet should be where the cycle begins.</p></li></ol><h2 id="My-Implementation-in-C"><a href="#My-Implementation-in-C" class="headerlink" title="My Implementation (in C)"></a>My Implementation (in C)</h2><p><a href="https://codeberg.org/CuSO4Deposit/MyLeetCode/src/branch/main/src/142_Linked-List-Cycle-II/first.c">https://codeberg.org/CuSO4Deposit/MyLeetCode/src/branch/main/src/142_Linked-List-Cycle-II/first.c</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * struct ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     struct ListNode *next;</span></span><br><span class="line"><span class="comment"> * &#125;;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> ListNode* <span class="title function_">fsTraverse</span><span class="params">(<span class="keyword">struct</span> ListNode* <span class="built_in">list</span>, <span class="type">int</span>* n)</span>&#123;</span><br><span class="line">    <span class="comment">// return the node where fast and slow pointer meets</span></span><br><span class="line">    <span class="comment">// (*n) records the # of steps the slow pointer goes</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">ListNode</span>* <span class="title">f</span> =</span> <span class="built_in">list</span>;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">ListNode</span>* <span class="title">s</span> =</span> <span class="built_in">list</span>;</span><br><span class="line">    *n = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (f == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        f = f-&gt;next;</span><br><span class="line">        <span class="keyword">if</span> (f == <span class="literal">NULL</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        s = s-&gt;next;</span><br><span class="line">        (*n)++;</span><br><span class="line">        f = f-&gt;next;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (f == s)</span><br><span class="line">            <span class="keyword">return</span> f;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> ListNode *<span class="title function_">detectCycle</span><span class="params">(<span class="keyword">struct</span> ListNode *head)</span> &#123;</span><br><span class="line">    <span class="type">int</span> Ls = <span class="number">0</span>; </span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">ListNode</span>* <span class="title">meet</span> =</span> fsTraverse(head, &amp;Ls);</span><br><span class="line">    <span class="keyword">if</span> (meet == <span class="literal">NULL</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="type">int</span> Lc = <span class="number">0</span>;</span><br><span class="line">    fsTraverse(meet, &amp;Lc); <span class="comment">// Lc is the length of the circle.</span></span><br><span class="line">    <span class="type">int</span> n = Ls / Lc;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">ListNode</span>* <span class="title">p</span> =</span> head;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; (n - <span class="number">1</span>) * Lc; i++) &#123;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (p != meet)&#123;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">        meet = meet-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Problem&quot;&gt;&lt;a href=&quot;#Problem&quot; class=&quot;headerlink&quot; title=&quot;Problem&quot;&gt;&lt;/a&gt;Problem&lt;/h2&gt;&lt;p&gt;Given the &lt;code&gt;head&lt;/code&gt; of a linked list, retu</summary>
      
    
    
    
    
    <category term="C" scheme="https://blog.depoze.xyz/tags/C/"/>
    
    <category term="Pointer" scheme="https://blog.depoze.xyz/tags/Pointer/"/>
    
    <category term="Leetcode" scheme="https://blog.depoze.xyz/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Configure Maubot</title>
    <link href="https://blog.depoze.xyz/2023/04/configure-maubot/"/>
    <id>https://blog.depoze.xyz/2023/04/configure-maubot/</id>
    <published>2023-04-06T08:50:06.000Z</published>
    <updated>2023-05-18T06:48:53.311Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/maubot/maubot">Maubot</a> 是一款基于插件的Matrix-Bot SDK。</p><p>它的说明文档写得并不是很好，也没有给出一个合理的顺序安装过程，事实上在我安装时需要在文档的各节反复跳跃，因此我在此记录一个合理的配置流程。</p><h2 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h2><p>通过pip安装maubot。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ python3 -m venv maubotVenv</span><br><span class="line">$ source ./maubotVenv/bin/activate</span><br><span class="line">$ pip install --upgrade maubot</span><br></pre></td></tr></table></figure><p>添加必要的文件和目录，否则会报错</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ vim config.yaml</span><br><span class="line">$ mkdir plugins, trash, logs</span><br></pre></td></tr></table></figure><p>config.yaml似乎怎么写都可以（但是不写就会报错），我参考了<a href="https://github.com/maubot/maubot/blob/master/examples/config/base-config.yaml">maubot&#x2F;base-config.yaml at master · maubot&#x2F;maubot · GitHub</a>，但事实上它好像并不是给这里用的，而是给插件用的。总之过一会运行起来之后会覆盖它生成含有表项的yaml。</p><h2 id="运行以生成可填写的config"><a href="#运行以生成可填写的config" class="headerlink" title="运行以生成可填写的config"></a>运行以生成可填写的config</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ python3 -m maubot</span><br></pre></td></tr></table></figure><p>它会在29316端口运行一个web界面。进入会发现需要登录，而此时还没有配置credential。不过现在按<code>&lt;C-C&gt;</code>停止运行，打开config.yaml就会看到很多配置项。</p><h2 id="配置nginx"><a href="#配置nginx" class="headerlink" title="配置nginx"></a>配置nginx</h2><p>如果在config.yaml更改了路径，则填写对应的新路径。没有https的可以改为listen 80.</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># nginx.conf</span></span><br><span class="line"></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">443</span>;</span><br><span class="line">    ...</span><br><span class="line">    <span class="section">location</span> /_matrix/maubot/v1/logs &#123;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://localhost:29316;</span><br><span class="line">        <span class="attribute">proxy_http_version</span> <span class="number">1</span>.<span class="number">1</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Upgrade <span class="variable">$http_upgrade</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Connection <span class="string">&quot;Upgrade&quot;</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$remote_addr</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="section">location</span> /_matrix/maubot &#123;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://localhost:29316;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$remote_addr</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>检查conf，重启nginx。</p><h2 id="添加credentials"><a href="#添加credentials" class="headerlink" title="添加credentials"></a>添加credentials</h2><p>在config.yaml中找到<code>admins</code>字段，添加<code>name: password</code>的格式。注意root不可以配置密码，在运行后，这里将会被加密（而不是明文的账号密码）。</p><p>这里的账号密码，是管理maubot这个系统（也就是29316的webapp）使用的，与matrix无关。过一会的<code>mbc login</code>，使用的也是这一套账号密码。</p><h2 id="登录、添加插件"><a href="#登录、添加插件" class="headerlink" title="登录、添加插件"></a>登录、添加插件</h2><p>再次运行，在GUI很容易找到如何上传插件。这里可以使用官方提供的<a href="https://github.com/maubot/echo">Echo</a>插件做测试。登录之后就可以上传插件。但这时还没有client和instance。<strong>每个client相当于一个登录着的matrix账号，而每个instance相当于在一个指定账号上运行着的一个插件。</strong></p><p>为了创建一个client，我们需要获取Matrix的端到端加密机制要求的access_token和device。获取需要使用maubot提供的CLI工具。</p><h2 id="在CLI获取access-token和device"><a href="#在CLI获取access-token和device" class="headerlink" title="在CLI获取access_token和device"></a>在CLI获取access_token和device</h2><p>直接在CLI登录会做不到加密，最好先搞好加密的组件：</p><p><a href="https://docs.mau.fi/maubot/usage/encryption.html">Encryption - maubot</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ pip install --upgrade maubot[encryption]</span><br><span class="line">$ pip install python-olm --extra-index-url https://gitlab.matrix.org/api/v4/projects/27/packages/pypi/simple</span><br></pre></td></tr></table></figure><p><code>mbc auth</code>是获取这两项的命令，但在这之前需要先<code>mbc login</code>登录maubot的管理账户。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ mbc login</span><br><span class="line">&lt;interactively login with credenricals in config.yaml...&gt;</span><br></pre></td></tr></table></figure><p>在<code>mbc auth</code>之前，还需要在config.yaml添加homeserver，这里的<code>&lt;your homeserver&gt;</code>是字典的键，可以任意取名，<code>url</code> 是register页面光标悬停在host server项上时显示的url。</p><p><strong>更新config.yaml后需要重启maubot才会生效。</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># config.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#...</span></span><br><span class="line"><span class="attr">homeservers:</span></span><br><span class="line">    <span class="comment">#...</span></span><br><span class="line">    <span class="string">&lt;your</span> <span class="string">homeserver&gt;:</span></span><br><span class="line">        <span class="attr">url:</span> <span class="string">...</span></span><br><span class="line">        <span class="attr">secret:</span> <span class="string">...</span> <span class="comment"># can left empty if you don&#x27;t have</span></span><br></pre></td></tr></table></figure><p>然后执行<code>mbc auth</code>，又是交互式登录。这里需要注意的是，homeserver项填写的是在<code>config.yaml</code>中配置的字典键而不是字典值。username使用全称和用户名都可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ mbc auth --update-client</span><br><span class="line">&lt;interactively login with matrix account&gt;</span><br></pre></td></tr></table></figure><p>如果不带<code>--update-client</code>，登录后屏幕上就会打印access_token和device。接下来就可以回到web页面操作手动登录。如果带了上面的参数，则web端已经配置好这个client，可以直接配置插件。</p><p>登录失败时，可以在maubot运行的窗口查看log来debug。</p><h2 id="创建client和instance-Verify-session"><a href="#创建client和instance-Verify-session" class="headerlink" title="创建client和instance. Verify session"></a>创建client和instance. Verify session</h2><p>在GUI先创建client，再指定插件和client运行instance。创建client时，display_name和avatar字段都可以设为<code>disable</code>表示不覆盖，<strong>如果留空则会使用空值覆盖原有的</strong>。</p><p>创建过client后，应当用已经登录的设备对maubot对应的session作验证。这样才能确保它可以解密端对端加密的消息。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://github.com/maubot/maubot&quot;&gt;Maubot&lt;/a&gt; 是一款基于插件的Matrix-Bot SDK。&lt;/p&gt;
&lt;p&gt;它的说明文档写得并不是很好，也没有给出一个合理的顺序安装过程，事实上在我安装时需要在文档的各节反复跳跃，</summary>
      
    
    
    
    
    <category term="Bot" scheme="https://blog.depoze.xyz/tags/Bot/"/>
    
    <category term="MatrixChat" scheme="https://blog.depoze.xyz/tags/MatrixChat/"/>
    
  </entry>
  
  <entry>
    <title>the limitation of the sum of an integral</title>
    <link href="https://blog.depoze.xyz/2023/04/the-limitation-of-the-sum-of-an-integral/"/>
    <id>https://blog.depoze.xyz/2023/04/the-limitation-of-the-sum-of-an-integral/</id>
    <published>2023-04-04T14:51:16.000Z</published>
    <updated>2023-04-06T15:13:01.907Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Question"><a href="#Question" class="headerlink" title="Question"></a>Question</h2><p>Solve<br>$$<br>\lim_{n\to +\infty} \dfrac{\sqrt[n]{2} - 1}{\sqrt[n]{2n + 1}} (\sum_{i &#x3D; 1} ^n [\int_1 ^{(2 i - 1) &#x2F; 2n} e^{-y^2} dy]).<br>$$</p><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>First we know<br>$$<br>\lim_{n\to +\infty} \sqrt[n]{2n + 1} &#x3D; 1.<br>$$<br>And<br>$$<br>\lim_{n\to +\infty} \sqrt[n]{2} - 1 \sim \dfrac{\log 2}{n}.<br>$$<br>The fraction introduced a $1&#x2F;n$. Consider the sum over n, it seems Stolz Theorem may be useful.<br>But the item in the sequence has an $n$, which means each item has a component of the length of the sequence.<br>This $n$ let the items in two sums cannot be cancelled (shows below), then Stolz can’t solve this.<br>$$<br>\sum_{i &#x3D; 1} ^n [\int_1 ^{(2 i - 1) &#x2F; 2n} e^{-y^2} dy] - \sum_{i &#x3D; 1} ^{n - 1} [\int_1 ^{(2 i - 1) &#x2F; 2(n - 1)} e^{-y^2} dy] \text{  (Cannot cancel)}<br>$$<br>But consider a sum multiplies $1&#x2F;n$, it associates with the definition of integral.<br>That is, take $f(x) &#x3D; \int_1 ^x e^{-y^2} dy$, we have:<br>$$<br>\lim_{n\to +\infty} \dfrac{1}{n} \sum_{i &#x3D; 1} ^n [\int_1 ^{(2 i - 1) &#x2F; 2n} e^{-y^2} dy] &#x3D; \lim_{n\to +\infty} \dfrac{1}{n} \sum_{i &#x3D; 1} ^n f(\dfrac{2i - 1}{n}).<br>$$<br>Then the limitation is the definition of $\int_0 ^1 f(x) dx$. We have what we want as<br>$$<br>\log 2 \cdot \int_0 ^1 f(x) dx &#x3D; \log 2 \cdot \int_0 ^1 [\int_1 ^x e^{-y^2} dy] dx.<br>$$<br>Exchange the order of integral:<br>$$<br>… &#x3D; -\log 2 \cdot \int_0 ^1 \int_0 ^y e^{-y^2} dx dy &#x3D; -\log 2 \cdot \int_0 ^1 ye^{-y^2} dy.<br>$$<br>Then the answer is:<br>$$<br>\text{Limitation} &#x3D; \dfrac{\log 2}{2}(\dfrac{1}{e} - 1).<br>$$</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Question&quot;&gt;&lt;a href=&quot;#Question&quot; class=&quot;headerlink&quot; title=&quot;Question&quot;&gt;&lt;/a&gt;Question&lt;/h2&gt;&lt;p&gt;Solve&lt;br&gt;$$&lt;br&gt;\lim_{n\to +\infty} \dfrac{\sqr</summary>
      
    
    
    
    
    <category term="Math&amp;Sci" scheme="https://blog.depoze.xyz/tags/Math-Sci/"/>
    
  </entry>
  
  <entry>
    <title>Machine Learning Quickref</title>
    <link href="https://blog.depoze.xyz/2023/03/MachineLearningNotes/"/>
    <id>https://blog.depoze.xyz/2023/03/MachineLearningNotes/</id>
    <published>2023-03-27T09:41:13.000Z</published>
    <updated>2023-04-28T01:24:55.953Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Matplotlib"><a href="#Matplotlib" class="headerlink" title="Matplotlib"></a>Matplotlib</h1><p>Recommend using OO-style:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">draw_image</span>(<span class="params">data: <span class="built_in">dict</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    data = &#123;&quot;data1&quot;: [x0, y00, y01], &quot;data2&quot;: [x1, y10, y11],</span></span><br><span class="line"><span class="string">            &quot;param&quot;: &#123;&quot;structure&quot;, &quot;lr&quot;, &quot;activation&quot;&#125;</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    fig, axs = plt.subplots(nrows=<span class="number">1</span>, ncols=<span class="number">3</span>, layout=<span class="string">&quot;tight&quot;</span>, figsize=[<span class="number">9.6</span>, <span class="number">4.8</span>])</span><br><span class="line">    axs[<span class="number">0</span>].plot(data[<span class="string">&quot;data1&quot;</span>][<span class="number">0</span>], data[<span class="string">&quot;data1&quot;</span>][<span class="number">1</span>], label=<span class="string">&quot;target&quot;</span>)</span><br><span class="line">    axs[<span class="number">0</span>].plot(data[<span class="string">&quot;data1&quot;</span>][<span class="number">0</span>], data[<span class="string">&quot;data1&quot;</span>][<span class="number">2</span>], label=<span class="string">&quot;model&quot;</span>)</span><br><span class="line">    axs[<span class="number">0</span>].set_xlabel(<span class="string">&quot;x&quot;</span>)</span><br><span class="line">    axs[<span class="number">0</span>].set_ylabel(<span class="string">&quot;y = f(x)&quot;</span>)</span><br><span class="line">    axs[<span class="number">0</span>].set_title(<span class="string">&quot;Fitting&quot;</span>)</span><br><span class="line">    axs[<span class="number">0</span>].legend()</span><br><span class="line">    ...</span><br><span class="line">    fig.suptitle(<span class="string">f&#x27;structure: <span class="subst">&#123;data[<span class="string">&quot;param&quot;</span>][<span class="string">&quot;structure&quot;</span>]&#125;</span>\</span></span><br><span class="line"><span class="string">            lr: <span class="subst">&#123;data[<span class="string">&quot;param&quot;</span>][<span class="string">&quot;lr&quot;</span>]&#125;</span>\</span></span><br><span class="line"><span class="string">            activation: <span class="subst">&#123;data[<span class="string">&quot;param&quot;</span>][<span class="string">&quot;activation&quot;</span>]&#125;</span>&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    fig.savefig(<span class="string">&#x27;./figure/figure.png&#x27;</span>)</span><br><span class="line">    plt.show()</span><br></pre></td></tr></table></figure><p>When operating on images, image input and ndarray input are both supported:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> matplotlib.images <span class="keyword">import</span> imread</span><br><span class="line"><span class="comment">#...</span></span><br><span class="line">axs[<span class="number">0</span>].imshow(imread(<span class="string">&#x27;a.png&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="comment">#...</span></span><br><span class="line">axs[<span class="number">1</span>].imshow(np.asarray(Image.<span class="built_in">open</span>(<span class="string">&#x27;a.png&#x27;</span>)))</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h1 id="PyTorch"><a href="#PyTorch" class="headerlink" title="PyTorch"></a>PyTorch</h1><p><a href="https://pytorch.org/tutorials/beginner/basics/">Learn the Basics — PyTorch Tutorials 2.0.0+cu117 documentation</a></p><h2 id="Device"><a href="#Device" class="headerlink" title="Device"></a>Device</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">device = <span class="string">&quot;cuda&quot;</span> <span class="keyword">if</span> torch.cude.is_available() <span class="keyword">else</span> <span class="string">&quot;cpu&quot;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Device: <span class="subst">&#123;device&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">tensor = tensor.to(device)</span><br><span class="line">model = model.to(device)</span><br></pre></td></tr></table></figure><h2 id="Tensors"><a href="#Tensors" class="headerlink" title="Tensors"></a>Tensors</h2><p><a href="https://pytorch.org/docs/stable/tensors.html">torch.Tensor - PyTorch 2.0 documentation</a></p><h3 id="Create-tensors"><a href="#Create-tensors" class="headerlink" title="Create tensors"></a>Create tensors</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">shape = (<span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">tensorr = torch.rand(shape)</span><br><span class="line">tensor0 = torch.zeros(shape)</span><br><span class="line">tensor1 = torch.ones(shape)</span><br><span class="line">tensorn = torch.from_numpy(np.array([...]))</span><br></pre></td></tr></table></figure><h3 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h3><p><code>tensor.shape</code></p><p><code>tensor.dtype</code></p><p><code>tensor.device</code></p><p><code>tensor.require_grad</code></p><h3 id="Methods"><a href="#Methods" class="headerlink" title="Methods"></a>Methods</h3><p><a href="https://pytorch.org/docs/stable/generated/torch.Tensor.detach.html?highlight=detach#torch.Tensor.detach">torch.Tensor.detach()</a>: returns a tensor sharing same storage with original tensor but never requiring grad (so that can be convert to normal datatypes if on cpu)</p><p><a href="https://pytorch.org/docs/stable/generated/torch.Tensor.item.html?highlight=item#torch.Tensor.item">torch.Tensor.item()</a>: works when only one element in tensor</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tensor = Tensor([<span class="number">12.0</span>])</span><br><span class="line"><span class="built_in">print</span>(tensort.item(), <span class="built_in">type</span>(tensor.item())</span><br><span class="line"></span><br><span class="line"><span class="comment"># 12.0 &lt;class &#x27;float&#x27;&gt;</span></span><br></pre></td></tr></table></figure><p><a href="https://pytorch.org/docs/stable/generated/torch.Tensor.tolist.html#torch.Tensor.tolist">torch.Tensor.tolist()</a></p><p>Add “_“ suffix to operations means inplace operations. Example: <code>tensor.add_()</code>.</p><h2 id="Datasets-amp-DataLoaders"><a href="#Datasets-amp-DataLoaders" class="headerlink" title="Datasets &amp; DataLoaders"></a>Datasets &amp; DataLoaders</h2><p>primitives: </p><p><code>torch.utils.data.DataLoader</code>: wraps an iterable around <code>Dataset</code></p><p><code>torch.utils.data.Dataset</code>: samples and labels</p><h3 id="Load-FashionMNIST"><a href="#Load-FashionMNIST" class="headerlink" title="Load FashionMNIST"></a>Load FashionMNIST</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> Dataset</span><br><span class="line"><span class="keyword">from</span> torchvision <span class="keyword">import</span> datasets</span><br><span class="line"><span class="keyword">from</span> torchvision.transforms <span class="keyword">import</span> ToTensor</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">training_data = datasets.FashionMNIST(</span><br><span class="line">    root=<span class="string">&quot;data&quot;</span>,    <span class="comment"># path to data</span></span><br><span class="line">    train=<span class="literal">True</span>,    <span class="comment"># specify training/test dataset </span></span><br><span class="line">    download=<span class="literal">True</span>,    <span class="comment"># if not available at root, whether download from internet</span></span><br><span class="line">    transform=ToTensor()</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">test_data = datasets.FashionMNIST(</span><br><span class="line">    root=<span class="string">&quot;data&quot;</span>,</span><br><span class="line">    train=<span class="literal">False</span>,</span><br><span class="line">    download=<span class="literal">True</span>,</span><br><span class="line">    transform=ToTensor()</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>We can index <code>Datasets</code> manually like a list: <code>training_data[index]</code>.<br>We use <code>matplotlib</code> to visualize some samples in our training data.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">labels_map = &#123;</span><br><span class="line">    <span class="number">0</span>: <span class="string">&quot;T-Shirt&quot;</span>,</span><br><span class="line">    <span class="number">1</span>: <span class="string">&quot;Trouser&quot;</span>,</span><br><span class="line">    <span class="number">2</span>: <span class="string">&quot;Pullover&quot;</span>,</span><br><span class="line">    <span class="number">3</span>: <span class="string">&quot;Dress&quot;</span>,</span><br><span class="line">    <span class="number">4</span>: <span class="string">&quot;Coat&quot;</span>,</span><br><span class="line">    <span class="number">5</span>: <span class="string">&quot;Sandal&quot;</span>,</span><br><span class="line">    <span class="number">6</span>: <span class="string">&quot;Shirt&quot;</span>,</span><br><span class="line">    <span class="number">7</span>: <span class="string">&quot;Sneaker&quot;</span>,</span><br><span class="line">    <span class="number">8</span>: <span class="string">&quot;Bag&quot;</span>,</span><br><span class="line">    <span class="number">9</span>: <span class="string">&quot;Ankle Boot&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line">sample_idx = torch.randint(<span class="built_in">len</span>(training_data), size=(<span class="number">1</span>,)).item()</span><br><span class="line">img, label = training_data[sample_idx]</span><br><span class="line">plt.title(labels_map[label])</span><br></pre></td></tr></table></figure><h3 id="Wrap-my-data-to-dataset"><a href="#Wrap-my-data-to-dataset" class="headerlink" title="Wrap my data to dataset"></a>Wrap my data to dataset</h3><p>PyTorch has 2 kinds of dataset: <code>map</code> and <code>iterate</code>. We focus on the first kind.</p><p>All datasets should subclass <code>torch.utils.data.Dataset</code>.</p><p>All datasets should overwrite <code>__getitem()__</code>, and optionally overwrite <code>__len__()</code>.</p><p>My data should have: a file containing the map each data’s filename to its label; a data directory.</p><p>A sample dataset:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> Dataset</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">from</span> pathlib <span class="keyword">import</span> Path</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyDataset</span>(<span class="title class_ inherited__">Dataset</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, annotation_file=<span class="string">&quot;./dataset/label.csv&quot;</span>,\</span></span><br><span class="line"><span class="params">            data_dir=<span class="string">&quot;./dataset/data/&quot;</span>, transform=<span class="literal">None</span>, target_transform=<span class="literal">None</span></span>):</span><br><span class="line">        self.labels = pd.read_csv(annotation_file)</span><br><span class="line">        self.data_dir = data_dir</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__getitem__</span>(<span class="params">self, index</span>):</span><br><span class="line">        path = Path(self.<span class="built_in">dir</span>) + Path(self.labels.iloc[index, <span class="number">0</span>])</span><br><span class="line">        item = read_item(path)  <span class="comment"># read_item() TODO</span></span><br><span class="line">        label = self.labels.iloc[index, <span class="number">1</span>]</span><br><span class="line">        <span class="keyword">if</span> self.transform:</span><br><span class="line">            item = self.transform(item)</span><br><span class="line">        <span class="keyword">if</span> self.target_transform:</span><br><span class="line">            label = self.target_transform(label)</span><br><span class="line">        <span class="keyword">return</span> item, label</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__len__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">len</span>(self.labels)</span><br></pre></td></tr></table></figure><h3 id="Useful-APIs"><a href="#Useful-APIs" class="headerlink" title="Useful APIs"></a>Useful APIs</h3><p><a href="https://pytorch.org/vision/stable/generated/torchvision.datasets.ImageFolder.html?highlight=imagefolder#torchvision.datasets.ImageFolder">torch.utils.data.ImageFolder</a></p><p><a href="https://pytorch.org/docs/stable/data.html?highlight=random_split#torch.utils.data.random_split">torch.utils.data.random_split()</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Matplotlib&quot;&gt;&lt;a href=&quot;#Matplotlib&quot; class=&quot;headerlink&quot; title=&quot;Matplotlib&quot;&gt;&lt;/a&gt;Matplotlib&lt;/h1&gt;&lt;p&gt;Recommend using OO-style:&lt;/p&gt;
&lt;figure </summary>
      
    
    
    
    
    <category term="Machine Learning" scheme="https://blog.depoze.xyz/tags/Machine-Learning/"/>
    
    <category term="AI" scheme="https://blog.depoze.xyz/tags/AI/"/>
    
    <category term="Python" scheme="https://blog.depoze.xyz/tags/Python/"/>
    
    <category term="NumPy" scheme="https://blog.depoze.xyz/tags/NumPy/"/>
    
  </entry>
  
  <entry>
    <title>Change font in cactus theme</title>
    <link href="https://blog.depoze.xyz/2023/03/change-font-in-cactus-theme/"/>
    <id>https://blog.depoze.xyz/2023/03/change-font-in-cactus-theme/</id>
    <published>2023-03-25T13:33:00.000Z</published>
    <updated>2023-04-06T17:13:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Modify <code>themes/cactus/source/layout/_partial/header.ejs</code>.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- styles --&gt;</span><br><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.bootcdn.net/ajax/libs/lxgw-wenkai-webfont/1.6.0/style.min.css&quot; /&gt;</span><br><span class="line">&lt;%- css(&#x27;css/style&#x27;) %&gt;</span><br></pre></td></tr></table></figure><p><a href="https://github.com/chawyehsu/lxgw-wenkai-webfont">https://github.com/chawyehsu/lxgw-wenkai-webfont</a></p><p>Modify <code>_variables.styl</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">//</span> <span class="string">Fonts</span></span><br><span class="line"><span class="string">$font-family-body</span> <span class="string">=</span> <span class="string">&quot;Menlo&quot;</span><span class="string">,</span> <span class="string">&quot;Meslo LG&quot;</span><span class="string">,</span> <span class="string">&quot;LXGW WenKai&quot;</span><span class="string">,</span> <span class="string">monospace</span></span><br><span class="line"><span class="string">$font-family-mono</span> <span class="string">=</span> <span class="string">&quot;Menlo&quot;</span><span class="string">,</span> <span class="string">&quot;Meslo LG&quot;</span><span class="string">,</span> <span class="string">&quot;LXGW WenKai Mono&quot;</span><span class="string">,</span> <span class="string">monospace</span></span><br><span class="line"><span class="string">$font-size</span> <span class="string">=</span> <span class="string">14px</span></span><br><span class="line"><span class="string">...</span></span><br></pre></td></tr></table></figure><h2 id="Deprecated"><a href="#Deprecated" class="headerlink" title="Deprecated"></a>Deprecated</h2><p><strong>Deprecated because ttf file is too big for users to load from this source. Use a CDN is better.</strong></p><p><a href="https://github.com/probberechts/hexo-theme-cactus/issues/311">how to change the font size ? · Issue #311 · probberechts&#x2F;hexo-theme-cactus · GitHub</a></p><p>Move font file to <code>themes/cactus/source/font/&lt;filename&gt;</code>. In my case &lt;filename&gt;&#x3D;”LXGWWenKaiMono-Regular.ttf”.</p><p>Modify <code>_fonts.styl</code>:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># themes/cactus/source/css/_fonts.styl</span></span><br><span class="line"></span><br><span class="line"><span class="string">...</span></span><br><span class="line"><span class="string">@font-face</span></span><br><span class="line">  <span class="attr">font-style:</span> <span class="string">normal</span></span><br><span class="line">  <span class="attr">font-family:</span> <span class="string">&quot;lxgw&quot;</span></span><br><span class="line">  <span class="attr">src:</span> <span class="string">url(&quot;../font/LXGWWenKaiMono-Regular.ttf&quot;)</span> <span class="string">format(&quot;truetype&quot;)</span></span><br></pre></td></tr></table></figure><p>Modify <code>_variables.styl</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">//</span> <span class="string">Fonts</span></span><br><span class="line"><span class="string">$font-family-body</span> <span class="string">=</span> <span class="string">&quot;Menlo&quot;</span><span class="string">,</span> <span class="string">&quot;Meslo LG&quot;</span><span class="string">,</span> <span class="string">&quot;lxgw&quot;</span><span class="string">,</span> <span class="string">monospace</span></span><br><span class="line"><span class="string">$font-family-mono</span> <span class="string">=</span> <span class="string">&quot;Menlo&quot;</span><span class="string">,</span> <span class="string">&quot;Meslo LG&quot;</span><span class="string">,</span> <span class="string">&quot;lxgw&quot;</span><span class="string">,</span> <span class="string">monospace</span></span><br><span class="line"><span class="string">$font-size</span> <span class="string">=</span> <span class="string">14px</span></span><br><span class="line"><span class="string">...</span></span><br></pre></td></tr></table></figure><p>Reload website, fonts will load in left-to-right order.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Modify &lt;code&gt;themes/cactus/source/layout/_partial/header.ejs&lt;/code&gt;.&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter</summary>
      
    
    
    
    
    <category term="Hexo" scheme="https://blog.depoze.xyz/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Setup VPN via WireGuard</title>
    <link href="https://blog.depoze.xyz/2023/01/Setup%20VPN%20via%20wireguard/"/>
    <id>https://blog.depoze.xyz/2023/01/Setup%20VPN%20via%20wireguard/</id>
    <published>2023-01-31T18:05:00.000Z</published>
    <updated>2023-02-10T18:21:48.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li><p><a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-wireguard-on-ubuntu-20-04">How To Set Up WireGuard on Ubuntu 20.04 | DigitalOcean</a></p></li><li><p><a href="https://www.wireguardconfig.com/">https://www.wireguardconfig.com/</a></p></li><li><p><a href="https://ultimatesecurity.pro/post/wireguard/#:~:text=Delete%20the%20WireGuard%20interface%20During%20your%20tests%20you,wg.%20Let%E2%80%99s%20execute%20once%20again%20the%20command%20wg.">Secure Communication with a WireGuard VPN &amp;middot; Ultimate Security Professional Blog</a></p></li></ul><h2 id="TL-DR"><a href="#TL-DR" class="headerlink" title="TL;DR"></a>TL;DR</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"># server.conf</span><br><span class="line">[Interface]</span><br><span class="line">Address = 10.6.0.1/24</span><br><span class="line">PostUp = ufw route allow in on wg0 out on eth0</span><br><span class="line">PostUp = iptables -A FORWARD -i %i -j ACCEPT; iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE</span><br><span class="line">PreDown = ufw route delete allow in on wg0 out on eth0</span><br><span class="line">PreDown = iptables -D FORWARD -i %i -j ACCEPT; iptables -t nat -D POSTROUTING -o eth0 -j MASQUERADE</span><br><span class="line">ListenPort = 51820</span><br><span class="line">PrivateKey = &lt;server generated private key&gt;</span><br><span class="line"></span><br><span class="line">[Peer]</span><br><span class="line">PublicKey = &lt;client1 generated public key&gt;</span><br><span class="line">AllowedIPs = 10.6.0.2/32</span><br><span class="line"></span><br><span class="line">[Peer]</span><br><span class="line">PublicKey = &lt;client2 generated public key&gt;</span><br><span class="line">AllowedIPs = 10.6.0.3/32</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># client1.conf</span><br><span class="line">[Interface]</span><br><span class="line">PrivateKey = &lt;client1 generated private key&gt;</span><br><span class="line">Address = 10.6.0.2/24</span><br><span class="line">DNS = 208.67.222.222</span><br><span class="line"></span><br><span class="line">[Peer]</span><br><span class="line">PublicKey = &lt;server generated public key&gt;</span><br><span class="line">AllowedIPs = 0.0.0.0/0</span><br><span class="line">Endpoint = &lt;server_ip&gt;:51820</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># client2.conf</span><br><span class="line">[Interface]</span><br><span class="line">PrivateKey = &lt;client2 generated private key&gt;</span><br><span class="line">Address = 10.6.0.3/24</span><br><span class="line">DNS = 208.67.222.222</span><br><span class="line"></span><br><span class="line">[Peer]</span><br><span class="line">PublicKey = &lt;server generated public key&gt;</span><br><span class="line">AllowedIPs = 0.0.0.0/0</span><br><span class="line">Endpoint = &lt;server_ip&gt;:51820</span><br></pre></td></tr></table></figure><ul><li><p>Server side</p><ul><li><p>Interface Address can be randomly picked</p></li><li><p>Peer AllowedIPs should be correspondent to client side, with mask <code>/32</code></p></li></ul></li><li><p>Client sides</p><ul><li><p>Interface Address is in the subnet of server side interface address</p></li><li><p>Interface Addresses of different clients must not intersect</p></li><li><p>Interface Address has mask <code>/24</code>.</p></li></ul></li></ul><h2 id="Step-1-—-Installing-WireGuard-and-Generating-a-Key-Pair"><a href="#Step-1-—-Installing-WireGuard-and-Generating-a-Key-Pair" class="headerlink" title="Step 1 — Installing WireGuard and Generating a Key Pair"></a>Step 1 — Installing WireGuard and Generating a Key Pair</h2><p>The first step in this tutorial is to install WireGuard on your<br>server. To start off, update your WireGuard Server’s package index and<br>install WireGuard using the following commands. You may be prompted to<br>provide your sudo user’s password if this is the first time you’re using<br> <code>sudo</code> in this session:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install wireguard</span><br></pre></td></tr></table></figure><p>Now that you have WireGuard installed, the next step is to generate a<br>private and public keypair for the server. You’ll use the built-in <code>wg genkey</code> and <code>wg pubkey</code> commands to create the keys, and then add the private key to WireGuard’s configuration file.</p><p>You will also need to change the permissions on the key that you just created using the <code>chmod</code> command, since by default the file is readable by any user on your server.</p><p>Create the private key for WireGuard and change its permissions using the following commands:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wg genkey | sudo tee /etc/wireguard/private.key</span><br><span class="line">sudo chmod go= /etc/wireguard/private.key</span><br></pre></td></tr></table></figure><p>The <code>sudo chmod go=...</code> command removes any permissions on the file for users and groups other than the root user to ensure that only it can access the private key.</p><p>You should receive a single line of <code>base64</code> encoded output, which is the private key. A copy of the output is also stored in the <code>/etc/wireguard/private.key</code> file for future reference by the <code>tee</code> portion of the command. Carefully make a note of the private key that is output since you’ll need to add it to WireGuard’s configuration file<br>later in this section.</p><p>The next step is to create the corresponding public key, which is<br>derived from the private key. Use the following command to create the<br>public key file:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cat /etc/wireguard/private.key | wg pubkey | sudo tee /etc/wireguard/public.key</span><br></pre></td></tr></table></figure><p>This command consists of three individual commands that are chained together using the <code>|</code> (pipe) operator:</p><ul><li><code>sudo cat /etc/wireguard/private.key</code>: this command reads the private key file and outputs it to the <a href="https://www.digitalocean.com/community/tutorials/an-introduction-to-linux-i-o-redirection#standard-output">standard output</a> stream.</li><li><code>wg pubkey</code>: the second command takes the output from the first command as its <a href="https://www.digitalocean.com/community/tutorials/an-introduction-to-linux-i-o-redirection#standard-input">standard input</a> and processes it to generate a public key.</li><li><code>sudo tee /etc/wireguard/public.key</code>: the final command takes the output of the public key generation command and redirects it into the file named <code>/etc/wireguard/public.key</code>.</li></ul><p>When you run the command you will again receive a single line of <code>base64</code> encoded output, which is the public key for your WireGuard Server. Copy it somewhere for reference, since you will need to distribute the public key to any peer that connects to the server.</p><h3 id="Step-2-a-—-Choosing-an-IPv4-Range"><a href="#Step-2-a-—-Choosing-an-IPv4-Range" class="headerlink" title="Step 2(a) — Choosing an IPv4 Range"></a>Step 2(a) — Choosing an IPv4 Range</h3><p>10.8.0.1&#x2F;24 for example</p><h3 id="Step-2-b-—-Choosing-an-IPv6-Range"><a href="#Step-2-b-—-Choosing-an-IPv6-Range" class="headerlink" title="Step 2(b) — Choosing an IPv6 Range"></a>Step 2(b) — Choosing an IPv6 Range</h3><p>This server doesn’t have an ipv6 address.</p><p>Generate method: <a href="https://www.rfc-editor.org/rfc/rfc4193#section-3">RFC 4193</a></p><h2 id="Step-3-—-Creating-a-WireGuard-Server-Configuration"><a href="#Step-3-—-Creating-a-WireGuard-Server-Configuration" class="headerlink" title="Step 3 — Creating a WireGuard Server Configuration"></a>Step 3 — Creating a WireGuard Server Configuration</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/wireguard/wg0.conf</span><br></pre></td></tr></table></figure><p>Add the following lines to the file, substituting your private key in place of the highlighted <code>base64_encoded_private_key_goes_here</code> value, and the IP address(es) on the <code>Address</code> line. You can also change the <code>ListenPort</code> line if you would like WireGuard to be available on a different port:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># /etc/wireguard/wg0.conf</span><br><span class="line">[Interface]</span><br><span class="line">PrivateKey = base64_encoded_private_key_goes_here</span><br><span class="line">Address = 10.8.0.1/24</span><br><span class="line">ListenPort = 51820</span><br><span class="line"># SaveConfig = true</span><br></pre></td></tr></table></figure><p>The <code>SaveConfig</code> line ensures that when a WireGuard interface is shutdown, any changes will get saved to the configuration file.</p><p><strong>When using multi peers, disable SaveConfig in case when some peer is not connected to the tunnel, wg deletes its corresponding public key.</strong></p><p>Save and close the <code>/etc/wireguard/wg0.conf</code> file.</p><h2 id="Step-4-—-Adjusting-the-WireGuard-Server’s-Network-Configuration"><a href="#Step-4-—-Adjusting-the-WireGuard-Server’s-Network-Configuration" class="headerlink" title="Step 4 — Adjusting the WireGuard Server’s Network Configuration"></a>Step 4 — Adjusting the WireGuard Server’s Network Configuration</h2><p>If you are using WireGuard to connect a peer to the WireGuard Server in order to access services on the <strong>server only</strong>, then you do not need to complete this section. If you would like to route your WireGuard Peer’s Internet traffic through the WireGuard<br>Server then you will need to configure IP forwarding by following this section of the tutorial.</p><p>To configure forwarding, open the <code>/etc/sysctl.conf</code> file using <code>vim</code> or your preferred editor:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/sysctl.conf</span><br></pre></td></tr></table></figure><p>If you are using IPv4 with WireGuard, add the following line at the bottom of the file:</p><p>&#x2F;etc&#x2F;sysctl.conf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net.ipv4.ip_forward=1</span><br></pre></td></tr></table></figure><p>If you are using IPv6 with WireGuard, add this line at the bottom of the file:</p><p>&#x2F;etc&#x2F;sysctl.conf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net.ipv6.conf.all.forwarding=1</span><br></pre></td></tr></table></figure><p>If you are using both IPv4 and IPv6, ensure that you include both lines. Save and close the file when you are finished.</p><p>To read the file and load the new values for your current terminal session, run:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sysctl -p</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Outputnet.ipv6.conf.all.forwarding = 1</span><br><span class="line">net.ipv4.ip_forward = 1</span><br></pre></td></tr></table></figure><p>Now your WireGuard Server will be able to forward incoming traffic from the virtual VPN ethernet device to others on the server, and from there to the public Internet. Using this configuration will allow you to route all web traffic from your WireGuard Peer via your server’s IP address, and your client’s public IP address will be effectively hidden.</p><p>However, before traffic can be routed via your server correctly, you will need to configure some firewall rules. These rules will ensure that traffic to and from your WireGuard Server and Peers flows properly.</p><h2 id="Step-5-—-Configuring-the-WireGuard-Server’s-Firewall"><a href="#Step-5-—-Configuring-the-WireGuard-Server’s-Firewall" class="headerlink" title="Step 5 — Configuring the WireGuard Server’s Firewall"></a>Step 5 — Configuring the WireGuard Server’s Firewall</h2><p>In this section you will edit the WireGuard Server’s configuration to add firewall rules that will ensure traffic to and from the server and clients is routed correctly. As with the previous section, skip this step if you are only using your WireGuard VPN for a machine to machine connection to access resources that are restricted to your VPN.</p><p>To allow WireGuard VPN traffic through the Server’s firewall, you’ll need to enable masquerading, which is an iptables concept that provides on-the-fly dynamic network address translation (NAT) to correctly route client connections.</p><p>First find the public network interface of your WireGuard Server using the <code>ip route</code> sub-command:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip route list default</span><br></pre></td></tr></table></figure><p>The public interface is the string found within this command’s output that follows the word “dev”. For example, this result shows the interface named <code>eth0</code>, which is highlighted below:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">default via 107.173.xx.yy dev eth0 onlink</span><br></pre></td></tr></table></figure><p>Note your device’s name since you will add it to the <code>iptables</code> rules in the next step.</p><p>To add firewall rules to your WireGuard Server, open the <code>/etc/wireguard/wg0.conf</code> file with <code>vim</code> or your preferred editor again.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/wireguard/wg0.conf</span><br></pre></td></tr></table></figure><p><strong>The configuration of DigitalOcean doesn’t work for me, this is the modified version that works:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PostUp = ufw route allow in on wg0 out on eth0</span><br><span class="line">PostUp = iptables -A FORWARD -i %i -j ACCEPT; iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE</span><br><span class="line">PreDown = ufw route delete allow in on wg0 out on eth0</span><br><span class="line">PreDown = iptables -D FORWARD -i %i -j ACCEPT; iptables -t nat -D POSTROUTING -o eth0 -j MASQUERADE</span><br></pre></td></tr></table></figure><p>The <code>PostUp</code> lines will run when the WireGuard Server starts the virtual VPN tunnel. In the example here, it will add three <code>ufw</code> and <code>iptables</code> rules:</p><ul><li><code>ufw route allow in on wg0 out on eth0</code> - This rule will allow forwarding IPv4 and IPv6 traffic that comes in on the <code>wg0</code> VPN interface to the <code>eth0</code> network interface on the server. It works in conjunction with the <code>net.ipv4.ip_forward</code> and <code>net.ipv6.conf.all.forwarding</code> sysctl values that you configured in the previous section.</li><li><code>iptables -t nat -I POSTROUTING -o eth0 -j MASQUERADE</code> - This rule configures masquerading, and rewrites IPv4 traffic that comes in on the <code>wg0</code> VPN interface to make it appear like it originates directly from the WireGuard Server’s public IPv4 address.</li><li><code>ip6tables -t nat -I POSTROUTING -o eth0 -j MASQUERADE</code> - This rule configures masquerading, and rewrites IPv6 traffic that comes in on the <code>wg0</code> VPN interface to make it appear like it originates directly from the WireGuard Server’s public IPv6 address.</li></ul><p>The <code>PreDown</code> rules run when the WireGuard Server stops the virtual VPN tunnel. These rules are the inverse of the <code>PostUp</code> rules, and function to undo the forwarding and masquerading rules for the VPN interface when the VPN is stopped.</p><p>In both cases, edit the configuration to include or exclude the IPv4 and IPv6 rules that are appropriate for your VPN. For example, if you are just using IPv4, then you can exclude the lines with the <code>ip6tables</code> commands.</p><p>Conversely, if you are only using IPv6, then edit the configuration to only include the <code>ip6tables</code> commands. The <code>ufw</code> lines should exist for any combination of IPv4 and IPv6 networks. Save and close the file when you are finished.</p><p>The last part of configuring the firewall on your WireGuard Server is to allow traffic to and from the WireGuard UDP port itself. If you did not change the port in the server’s <code>/etc/wireguard/wg0.conf</code> file, the port that you will open is <code>51820</code>. If you chose a different port when editing the configuration be sure to substitute it in the following UFW command.</p><p>In case you forgot to open the SSH port when following the prerequisite tutorial, add it here too:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw allow 51820/udp</span><br><span class="line">sudo ufw allow OpenSSH</span><br></pre></td></tr></table></figure><p><strong>Note</strong>: If you are using a different firewall or have customized your UFW configuration, you may need to add additional firewall rules. For example, if you decide to tunnel all of your network traffic over the VPN connection, you will need to ensure that port <code>53</code> traffic is allowed for DNS requests, and ports like <code>80</code> and <code>443</code> for HTTP and HTTPS traffic respectively. If there are other protocols that you are using over the VPN then you will need to add rules for them as well.</p><p>After adding those rules, disable and re-enable UFW to restart it and load the changes from all of the files you’ve modified:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw disable</span><br><span class="line">sudo ufw enable</span><br></pre></td></tr></table></figure><h2 id="Step-6-—-Starting-the-WireGuard-Server"><a href="#Step-6-—-Starting-the-WireGuard-Server" class="headerlink" title="Step 6 — Starting the WireGuard Server"></a>Step 6 — Starting the WireGuard Server</h2><p>WireGuard can be configured to run as a <code>systemd</code> service using its built-in <code>wg-quick</code> script. While you could manually use the <code>wg</code> command to create the tunnel every time you want to use the VPN, doing so is a manual process that becomes repetitive and error prone. Instead, you can use <code>systemctl</code> to manage the tunnel with the help of the <code>wg-quick</code> script.</p><p>Using a <code>systemd</code> service means that you can configure WireGuard to start up at boot so that you can connect to your VPN at any time as long as the server is running. To do this, enable the <code>wg-quick</code> service for the <code>wg0</code> tunnel that you’ve defined by adding it to <code>systemctl</code>:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl enable wg-quick@wg0.service</span><br></pre></td></tr></table></figure><p>Notice that the command specifies the name of the tunnel <code>wg0</code> device name as a part of the service name. This name maps to the <code>/etc/wireguard/wg0.conf</code> configuration file. This approach to naming means that you can create as many separate VPN tunnels as you would like using your server.</p><p>For example, you could have a tunnel device and name of <code>prod</code> and its configuration file would be <code>/etc/wireguard/prod.conf</code>. Each tunnel configuration can contain different IPv4, IPv6, and client firewall settings. In this way you can support multiple different peer connections, each with their own unique IP addresses and routing rules.</p><p>Now start the service:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start wg-quick@wg0.service</span><br></pre></td></tr></table></figure><p>Double check that the WireGuard service is active with the following command. You should see <code>active (running)</code> in the output:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl status wg-quick@wg0.service</span><br></pre></td></tr></table></figure><h2 id="Step-7-—-Configuring-a-WireGuard-Peer"><a href="#Step-7-—-Configuring-a-WireGuard-Peer" class="headerlink" title="Step 7 — Configuring a WireGuard Peer"></a>Step 7 — Configuring a WireGuard Peer</h2><p>Configuring a WireGuard peer is similar to setting up the WireGuard<br>Server. Once you have the client software installed, you’ll generate a<br>public and private key pair, decide on an IP address or addresses for<br>the peer, define a configuration file for the peer, and then start the<br>tunnel using the <code>wg-quick</code> script.</p><p>You can add as many peers as you like to your VPN by generating a key<br> pair and configuration using the following steps. If you add multiple<br>peers to the VPN be sure to keep track of their private IP addresses to<br>prevent collisions.</p><p>To configure the WireGuard Peer, ensure that you have the WireGuard package installed using the following <code>apt</code> commands. On the WireGuard peer run:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install wireguard</span><br></pre></td></tr></table></figure><h3 id="Creating-the-WireGuard-Peer’s-Key-Pair"><a href="#Creating-the-WireGuard-Peer’s-Key-Pair" class="headerlink" title="Creating the WireGuard Peer’s Key Pair"></a>Creating the WireGuard Peer’s Key Pair</h3><p>Next, you’ll need to generate the key pair on the peer using the same steps as you used on the server. From your local machine or remote server that will serve as peer, proceed and create the private key for the peer using the following commands:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wg genkey | sudo tee /etc/wireguard/private.key</span><br><span class="line">sudo chmod go= /etc/wireguard/private.key</span><br></pre></td></tr></table></figure><p>Again you will receive a single line of <code>base64</code> encoded output, which is the private key. A copy of the output is also stored in the <code>/etc/wireguard/private.key</code>. Carefully make a note of the private key that is output since you’ll need to add it to WireGuard’s configuration file later in this section.</p><p>Next use the following command to create the public key file:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cat /etc/wireguard/private.key | wg pubkey | sudo tee /etc/wireguard/public.key</span><br></pre></td></tr></table></figure><p>You will again receive a single line of <code>base64</code> encoded output, which is the public key for your WireGuard Peer. Copy it somewhere for reference, since you will need to distribute the public key to the WireGuard Server in order to establish an encrypted<br>connection.</p><h3 id="Creating-the-WireGuard-Peer’s-Configuration-File"><a href="#Creating-the-WireGuard-Peer’s-Configuration-File" class="headerlink" title="Creating the WireGuard Peer’s Configuration File"></a>Creating the WireGuard Peer’s Configuration File</h3><p>Now that you have a key pair, you can create a configuration file for<br> the peer that contains all the information that it needs to establish a<br> connection to the WireGuard Server.</p><p>You will need a few pieces of information for the configuration file:</p><ul><li><p>The <code>base64</code> encoded private key that you generated on the peer.</p></li><li><p>The IPv4 and IPv6 address ranges that you defined on the WireGuard Server.</p></li><li><p>The <code>base64</code> encoded public key from the WireGuard Server.</p></li><li><p>The public IP address and port number of the WireGuard Server.<br>Usually this will be the IPv4 address, but if your server has an IPv6<br>address and your client machine has an IPv6 connection to the internet<br>you can use this instead of IPv4.</p></li></ul><p>With all this information at hand, open a new <code>/etc/wireguard/wg0.conf</code> file on the WireGuard Peer machine using <code>vim</code> or your preferred editor:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/wireguard/wg0.conf</span><br></pre></td></tr></table></figure><p>Add the following lines to the file, substituting in the various data into the highlighted sections as required:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[Interface]</span><br><span class="line">PrivateKey = base64_encoded_peer_private_key_goes_here</span><br><span class="line">Address = 10.8.0.2/24</span><br><span class="line"></span><br><span class="line">[Peer]</span><br><span class="line">PublicKey = U9uE2kb/nrrzsEU58GD3pKFU3TLYDMCbetIsnV8eeFE=</span><br><span class="line">AllowedIPs = 10.8.0.0/24</span><br><span class="line">Endpoint = 203.0.113.1:51820</span><br></pre></td></tr></table></figure><p>Notice how the first <code>Address</code> line uses an IPv4 address from the <code>10.8.0.0/24</code> subnet that you chose earlier. This IP address can be anything in the subnet as long as it is different from the server’s IP. Incrementing addresses by 1 each time you add a peer is generally the easiest way to allocate IPs.</p><p>Likewise, notice how the second <code>Address</code> line uses an IPv6 address from the subnet that you generated earlier, and increments the server’s address by one. Again, any IP in the range is valid if you decide to use a different address.</p><p>The other notable part of the file is the last <code>AllowedIPs</code> line. These two IPv4 and IPv6 ranges instruct the peer to only send traffic over the VPN if the destination system has an IP address in either range. Using the <code>AllowedIPs</code> directive, you can restrict the VPN on the peer to only connect to other peers and services on the VPN, or you can configure the setting to tunnel all traffic over the VPN and use the WireGuard Server as a gateway.</p><p>If you are only using IPv4, then omit the trailing <code>fd0d:86fa:c3bc::/64</code> range (including the <code>,</code> comma). Conversely, if you are only using IPv6, then only include the <code>fd0d:86fa:c3bc::/64</code> prefix and leave out the <code>10.8.0.0/24</code> IPv4 range.</p><p>In both cases, if you would like to send all your peer’s traffic over the VPN and use the WireGuard Server as a gateway for all traffic, then you can use <code>0.0.0.0/0</code>, which represents the entire IPv4 address space, and <code>::/0</code> for the entire IPv6 address space.</p><h3 id="Optional-Configuring-a-Peer-to-Route-All-Traffic-Over-the-Tunnel"><a href="#Optional-Configuring-a-Peer-to-Route-All-Traffic-Over-the-Tunnel" class="headerlink" title="(Optional) Configuring a Peer to Route All Traffic Over the Tunnel"></a>(Optional) Configuring a Peer to Route All Traffic Over the Tunnel</h3><p><strong>I did not configure this but it still works.</strong></p><p>If you have opted to route all of the peer’s traffic over the tunnel using the <code>0.0.0.0/0</code> or <code>::/0</code> routes and the peer is a remote system, then you will need to complete<br>the steps in this section. If your peer is a local system then it is<br>best to skip this section.</p><p>For remote peers that you access via SSH or some other protocol using<br> a public IP address, you will need to add some extra rules to the<br>peer’s <code>wg0.conf</code> file. These rules will ensure that you can<br>still connect to the system from outside of the tunnel when it is<br>connected. Otherwise, when the tunnel is established, all traffic that<br>would normally be handled on the public network interface will not be<br>routed correctly to bypass the <code>wg0</code> tunnel interface, leading to an inaccessible remote system.</p><p>First, you’ll need to determine the IP address that the system uses as its default gateway. Run the following <code>ip route</code> command:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip route list table main default</span><br></pre></td></tr></table></figure><p>You will receive output like the following:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">default via 203.0.113.1 dev eth0 proto static</span><br></pre></td></tr></table></figure><p>Note the gateway’s highlighted IP address <code>203.0.113.1</code> for later use, and device <code>eth0</code>. Your device name may be different. If so, substitute it in place of <code>eth0</code> in the following commands.</p><p>Next find the public IP for the system by examining the device with the <code>ip address show</code> command:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip -brief address show eth0</span><br></pre></td></tr></table></figure><p>You will receive output like the following:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Outputeth0             UP             203.0.113.5/20 10.20.30.40/16 2604:a880:400:d1::3d3:6001/64 fe80::68d5:beff:feff:974c/64</span><br></pre></td></tr></table></figure><p>In this example output, the highlighted <code>203.0.113.5</code> IP (without the trailing <code>/20</code>) is the public address that is assigned to the <code>eth0</code> device that you’ll need to add to the WireGuard configuration.</p><p>Now open the WireGuard Peer’s <code>/etc/wireguard/wg0.conf</code> file with <code>nano</code> or your preferred editor.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/wireguard/wg0.conf</span><br></pre></td></tr></table></figure><p>Before the <code>[Peer]</code> line, add the following 4 lines:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">PostUp = ip rule add table 200 from 203.0.113.5</span><br><span class="line">PostUp = ip route add table 200 default via 203.0.113.1</span><br><span class="line">PreDown = ip rule delete table 200 from 203.0.113.5</span><br><span class="line">PreDown = ip route delete table 200 default via 203.0.113.1</span><br><span class="line"></span><br><span class="line">[Peer]</span><br><span class="line">. . .</span><br></pre></td></tr></table></figure><p>These lines will create a custom routing rule, and add a custom route<br> to ensure that public traffic to the system uses the default gateway.</p><ul><li><code>PostUp = ip rule add table 200 from 203.0.113.5</code> - This command creates a rule that checks for any routing entries in the table numbered <code>200</code> when the IP matches the system’s public <code>203.0.113.5</code> address.</li><li><code>PostUp = ip route add table 200 default via 203.0.113.1</code> - This command ensures that any traffic being processed by the <code>200</code> table will use the <code>203.0.113.1</code> gateway for routing, instead of the WireGuard interface.</li></ul><p>The <code>PreDown</code> lines remove the custom rule and route when the tunnel is shutdown.</p><p>Note: The table number <code>200</code> is arbitrary when constructing these rules. You can use a value between 2 and 252, or you can use a custom name by adding a label to the <code>/etc/iproute2/rt_tables</code> file and then referring to the name instead of the numeric value.</p><p>For more information about how routing tables work in Linux visit the <a href="http://linux-ip.net/html/routing-tables.html">Routing Tables Section</a> of the <a href="http://linux-ip.net/html/index.html">Guide to IP Layer Network Administration with Linux</a>.</p><p>If you are routing all the peer’s traffic over the VPN, ensure that you have configured the correct <code>sysctl</code> and <code>iptables</code> rules on the WireGuard Server in <a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-wireguard-on-ubuntu-20-04#step-4-%E2%80%94-adjusting-the-wireguard-server-39-s-network-configuration">Step 4 — Adjusting the WireGuard Server’s Network Configuration</a> and <a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-wireguard-on-ubuntu-20-04#step-5-%E2%80%94-configuring-the-wireguard-server%E2%80%99s-firewall">Step 5 — Configuring the WireGuard Server’s Firewall</a>.</p><h3 id="Optional-Configuring-the-WireGuard-Peer’s-DNS-Resolvers"><a href="#Optional-Configuring-the-WireGuard-Peer’s-DNS-Resolvers" class="headerlink" title="(Optional) Configuring the WireGuard Peer’s DNS Resolvers"></a>(Optional) Configuring the WireGuard Peer’s DNS Resolvers</h3><p><strong>I use OpenDNS(208.67.222.222) as DNS server because resolvectl dns didn’t give a valid output.</strong></p><p>If you are using the WireGuard Server as a VPN gateway for all your peer’s traffic, you will need to add a line to the <code>[Interface]</code> section that specifies DNS resolvers. If you do not add this setting,<br>then your DNS requests may not be secured by the VPN, or they might be<br>revealed to your Internet Service Provider or other third parties.</p><p>If you are only using WireGuard to access resources on the VPN<br>network or in a peer-to-peer configuration then you can skip this<br>section.</p><p>To add DNS resolvers to your peer’s configuration, first determine<br>which DNS servers your WireGuard Server is using. Run the following<br>command on the <strong>WireGuard Server</strong>, substituting in your ethernet device name in place of <code>eth0</code> if it is different from this example:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">resolvectl dns eth0</span><br></pre></td></tr></table></figure><p>You should receive output like the following:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">OutputLink 2 (eth0): 67.207.67.2 67.207.67.3 2001:4860:4860::8844 2001:4860:4860::8888</span><br></pre></td></tr></table></figure><p>The IP addresses that are output are the DNS resolvers that the<br>server is using. You can choose to use any or all of them, or only IPv4<br>or IPv6 depending on your needs. Make a note of the resolvers that you<br>will use.</p><p>Next you will need to add your chosen resolvers to the WireGuard Peer’s configuration file. Back on the <strong>WireGuard Peer</strong>, open <code>/etc/wireguard/wg0.conf</code> file using <code>nano</code> or your preferred editor:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/wireguard/wg0.conf</span><br></pre></td></tr></table></figure><p>Before the <code>[Peer]</code> line, add the following:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">DNS = 67.207.67.2 2001:4860:4860::8844</span><br><span class="line"></span><br><span class="line">[Peer]</span><br><span class="line">. . .</span><br></pre></td></tr></table></figure><p>Again, depending on your preference or requirements for IPv4 and IPv6, you can edit the list according to your needs.</p><p>Once you are connected to the VPN in the following step, you can<br>check that you are sending DNS queries over the VPN by using a site like<br> <a href="https://www.dnsleaktest.com/">DNS leak test.com</a>.</p><p>You can also check that your peer is using the configured resolvers with the <code>resolvectl dns</code> command like you ran on the server. You should receive output like the<br>following, showing the DNS resolvers that you configured for the VPN<br>tunnel:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">OutputGlobal: 67.207.67.2 67.207.67.3</span><br><span class="line">. . .</span><br></pre></td></tr></table></figure><p>With all of these DNS resolver settings in place, you are now ready to add the peer’s public key to the server, and then start the WireGuard tunnel on the peer.</p><h2 id="Step-8-—-Adding-the-Peer’s-Public-Key-to-the-WireGuard-Server"><a href="#Step-8-—-Adding-the-Peer’s-Public-Key-to-the-WireGuard-Server" class="headerlink" title="Step 8 — Adding the Peer’s Public Key to the WireGuard Server"></a>Step 8 — Adding the Peer’s Public Key to the WireGuard Server</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo wg set wg0 peer &lt;client publickey&gt; allowed-ips 10.5.0.2,fd0d:86fa:c3bc::2</span><br></pre></td></tr></table></figure><p>This is OK but I think it’s better to modify the server.conf.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Reference&quot;&gt;&lt;a href=&quot;#Reference&quot; class=&quot;headerlink&quot; title=&quot;Reference&quot;&gt;&lt;/a&gt;Reference&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.digitalocean</summary>
      
    
    
    
    
    <category term="Tech" scheme="https://blog.depoze.xyz/tags/Tech/"/>
    
    <category term="WireGuard" scheme="https://blog.depoze.xyz/tags/WireGuard/"/>
    
  </entry>
  
  <entry>
    <title>Initial Server Setup</title>
    <link href="https://blog.depoze.xyz/2023/01/Initial%20Server%20Setup/"/>
    <id>https://blog.depoze.xyz/2023/01/Initial%20Server%20Setup/</id>
    <published>2023-01-31T15:40:03.000Z</published>
    <updated>2023-01-31T15:40:03.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Create-user"><a href="#Create-user" class="headerlink" title="Create user"></a>Create user</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">adduser &lt;username&gt;</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">usermod -aG sudo &lt;username&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Set-up-a-basic-firewall"><a href="#Set-up-a-basic-firewall" class="headerlink" title="Set up a basic firewall"></a>Set up a basic firewall</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo apt install ufw</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo ufw app list</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo ufw allow OpenSSH</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo ufw allow ssh</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo ufw allow <span class="string">&#x27;Nginx Full&#x27;</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo ufw <span class="built_in">enable</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo ufw status</span></span><br></pre></td></tr></table></figure><h2 id="Set-up-FTP"><a href="#Set-up-FTP" class="headerlink" title="Set up FTP"></a>Set up FTP</h2><p>to be continued..</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Create-user&quot;&gt;&lt;a href=&quot;#Create-user&quot; class=&quot;headerlink&quot; title=&quot;Create user&quot;&gt;&lt;/a&gt;Create user&lt;/h2&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;tabl</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>为小米手环配置Zepp Life的开源替代</title>
    <link href="https://blog.depoze.xyz/2023/01/Gadgetbridge/"/>
    <id>https://blog.depoze.xyz/2023/01/Gadgetbridge/</id>
    <published>2023-01-22T11:57:32.000Z</published>
    <updated>2023-01-22T12:04:35.000Z</updated>
    
    <content type="html"><![CDATA[<p> Steps: <a href="https://codeberg.org/Freeyourgadget/Gadgetbridge">https://codeberg.org/Freeyourgadget/Gadgetbridge</a></p><h2 id="下载Gadgetbridge"><a href="#下载Gadgetbridge" class="headerlink" title="下载Gadgetbridge"></a>下载Gadgetbridge</h2><p><a href="https://f-droid.org/app/nodomain.freeyourgadget.gadgetbridge">Gadgetbridge | F-Droid - Free and Open Source Android App Repository</a></p><h2 id="获取auth-key"><a href="#获取auth-key" class="headerlink" title="获取auth key"></a>获取auth key</h2><p>Steps: <a href="https://codeberg.org/Freeyourgadget/Gadgetbridge/wiki/Huami-Server-Pairing">Huami Server Pairing - Gadgetbridge - Codeberg.org</a></p><p>原来手环绑定的app如果是“小米穿戴”(com.xiaomi.wearable)，则不能返回正常的信息，可以先换用“Zepp Life”(com.xiaomi.hm.health)绑定手环。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https://codeberg.org/argrento/huami-token.git</span><br><span class="line">$ cd huami-token</span><br><span class="line">$ python3 huami_token.py --method xiaomi --bt_keys</span><br></pre></td></tr></table></figure><p>按提示操作登录，并粘贴重定向至的链接，返回了类似这样的数据。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Token: [&#x27;C3_xxxxxxxxxxxxxxxxxxx&#x27;]</span><br><span class="line">Logging in...</span><br><span class="line">Logged in! User id: 10xxxxxxx</span><br><span class="line">Getting linked wearables...</span><br><span class="line"></span><br><span class="line">╓───Device 0</span><br><span class="line">║  MAC: 11:22:33:44:55:66, active: No</span><br><span class="line">║  Key: 0x11111111111111111111111111111111</span><br><span class="line">╙────────────</span><br><span class="line"></span><br><span class="line">╓───Device 1</span><br><span class="line">║  MAC: F4:11:22:33:44:55, active: Yes</span><br><span class="line">║  Key: 0xfe000000000000000000000000000000</span><br><span class="line">╙────────────</span><br><span class="line"></span><br><span class="line">Logged out.</span><br></pre></td></tr></table></figure><p>通过设备的蓝牙地址可以确定是哪一台设备（如果只有一个设备启用中，通过active: Yes也可以），对应的“Key”即为需要的auth key。</p><h2 id="连接到Gadgetbridge"><a href="#连接到Gadgetbridge" class="headerlink" title="连接到Gadgetbridge"></a>连接到Gadgetbridge</h2><p>不要解除手环和”Zepp Life”的绑定，Kill “Zepp Life”，此后在手机的蓝牙设置中就可以看到设备”Mi Smart Band 5”。</p><p>使用 <em>Gadgetbridge</em> 搜索设备，长按搜索到的设备卡片，在弹出窗口填入对应的”Key”选项。然后返回设备卡片页，单击卡片进行配对和连接。</p><p>首页显示了这个设备卡片，说明配对成功，可以直接卸载Zepp Life啦（不可以先解绑再卸载，因为auth key是每次绑定重新生成）。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; Steps: &lt;a href=&quot;https://codeberg.org/Freeyourgadget/Gadgetbridge&quot;&gt;https://codeberg.org/Freeyourgadget/Gadgetbridge&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;下载Gad</summary>
      
    
    
    
    
    <category term="FOSS" scheme="https://blog.depoze.xyz/tags/FOSS/"/>
    
  </entry>
  
  <entry>
    <title>Pingvin Share 安装和配置</title>
    <link href="https://blog.depoze.xyz/2023/01/Pingvin-Share-install-and-configure/"/>
    <id>https://blog.depoze.xyz/2023/01/Pingvin-Share-install-and-configure/</id>
    <published>2023-01-08T17:04:00.000Z</published>
    <updated>2023-02-10T18:21:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>Pingvin Share是一个self-host文件分享平台。</p><p><a href="https://github.com/stonith404/pingvin-share">GitHub - stonith404&#x2F;pingvin-share: A self-hosted file sharing platform.</a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>下载docker-compose.yml，如果想要修改端口，需要更改左边的一个。</p><p>按官网提示使用docker：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker compose up -d</span><br></pre></td></tr></table></figure><p>安装完成，服务将默认运行在localhost:3000。</p><p>配置nginx，在http块中加一个server块：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    <span class="comment">#...</span></span><br><span class="line">    <span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">        <span class="attribute">server_name</span>    [url];</span><br><span class="line"></span><br><span class="line">        <span class="section">location</span> / &#123;</span><br><span class="line">            <span class="attribute">proxy_pass</span>    http://127.0.0.1:3000;</span><br><span class="line">            <span class="attribute">proxy_set_header</span>    Host    <span class="variable">$proxy_host</span>;</span><br><span class="line">            <span class="attribute">proxy_set_header</span>    X-Real-IP    <span class="variable">$remote_addr</span>;</span><br><span class="line">            <span class="attribute">proxy_set_header</span>    X-Forwarded-For    <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试，上线：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ nginx -t</span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf test is successful</span><br><span class="line">$ systemxtl restart nginx</span><br></pre></td></tr></table></figure><p>实地测试发现可能由于我nginx配置的问题，下载时重定向会出现[URL]&#x2F;[URL]&#x2F;share&#x2F;api&#x2F;…的情形，从而404。因此应用中app_url应设置为空，而不是[URL]。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Pingvin Share是一个self-host文件分享平台。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/stonith404/pingvin-share&quot;&gt;GitHub - stonith404&amp;#x2F;pingvin-share: A s</summary>
      
    
    
    
    
    <category term="Tech" scheme="https://blog.depoze.xyz/tags/Tech/"/>
    
    <category term="FOSS" scheme="https://blog.depoze.xyz/tags/FOSS/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu 20.04 用curl下载安装Docker-Compose</title>
    <link href="https://blog.depoze.xyz/2023/01/Ubuntu-20-04-install-Docker-Compose-using-curl/"/>
    <id>https://blog.depoze.xyz/2023/01/Ubuntu-20-04-install-Docker-Compose-using-curl/</id>
    <published>2023-01-08T16:25:00.000Z</published>
    <updated>2023-02-10T18:21:07.000Z</updated>
    
    <content type="html"><![CDATA[<p>Ubuntu维护的库中docker-compose版本过低，使用时可能会出现错误。在2023-01-08，库中维护的版本是v1.25.0，而官方发布了v2.15.0。</p><p>我尝试时的报错：</p><p>ERROR: Version in “.&#x2F;docker-compose.yml” is unsupported. You might be seeing this error because you’re using the wrong Compose file version. Either specify a supported version (e.g “2.2” or “3.3”) and place your service definitions under the services key, or omit the version key and place your service definitions at the root of the file to use version 1.</p><p>而在我的docker-compose.yml中第一行是:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3.8&quot;</span></span><br></pre></td></tr></table></figure><p>需要安装更新版本的docker-compose。</p><p>查看本机的指令集架构：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ arch</span><br><span class="line">x86_64</span><br></pre></td></tr></table></figure><p>使用curl下载：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -L &quot;https://github.com/docker/compose/releases/download/v2.15.0/docker-compose-x86_64&quot; -o /usr/bin/docker-compose</span><br></pre></td></tr></table></figure><p>其中<code>-L</code>参数表示接受重定向，<code>-o</code>指示文件名。</p><p>修改文件权限后即可正常使用：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo chmod +x /usr/bin/docker-compose</span><br><span class="line">$ docker-compose --version</span><br><span class="line">Docker Compose version v2.15.0</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Ubuntu维护的库中docker-compose版本过低，使用时可能会出现错误。在2023-01-08，库中维护的版本是v1.25.0，而官方发布了v2.15.0。&lt;/p&gt;
&lt;p&gt;我尝试时的报错：&lt;/p&gt;
&lt;p&gt;ERROR: Version in “.&amp;#x2F;dock</summary>
      
    
    
    
    
    <category term="Tech" scheme="https://blog.depoze.xyz/tags/Tech/"/>
    
  </entry>
  
  <entry>
    <title>Markdown Syntax Test</title>
    <link href="https://blog.depoze.xyz/2023/01/Markdown-Syntax-Test/"/>
    <id>https://blog.depoze.xyz/2023/01/Markdown-Syntax-Test/</id>
    <published>2023-01-08T00:00:01.000Z</published>
    <updated>2023-01-08T00:00:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>Source: <a href="https://github.com/emn178/markdown">https://github.com/emn178/markdown</a></p><p>A markdown example shows how to write a markdown file. This document integrates core syntax and extensions (GMF).</p><ul><li><a href="#block-elements">Block Elements</a><ul><li><a href="#paragraphs-and-line-breaks">Paragraphs and Line Breaks</a></li><li><a href="#headers">Headers</a></li><li><a href="#blockquotes">Blockquotes</a></li><li><a href="#lists">Lists</a></li><li><a href="#code-blocks">Code Blocks</a></li><li><a href="#horizontal-rules">Horizontal Rules</a></li><li><a href="#table">Table</a></li></ul></li><li><a href="#span-elements">Span Elements</a><ul><li><a href="#links">Links</a></li><li><a href="#emphasis">Emphasis</a></li><li><a href="#code">Code</a></li><li><a href="#images">Images</a></li><li><a href="#strikethrough">Strikethrough</a></li></ul></li><li><a href="#miscellaneous">Miscellaneous</a><ul><li><a href="#automatic-links">Automatic Links</a></li><li><a href="#backslash-escapes">Backslash Escapes</a></li></ul></li><li><a href="#inline-html">Inline HTML</a></li></ul><h2 id="Block-Elements"><a href="#Block-Elements" class="headerlink" title="Block Elements"></a>Block Elements</h2><h3 id="Paragraphs-and-Line-Breaks"><a href="#Paragraphs-and-Line-Breaks" class="headerlink" title="Paragraphs and Line Breaks"></a>Paragraphs and Line Breaks</h3><h4 id="Paragraphs"><a href="#Paragraphs" class="headerlink" title="Paragraphs"></a>Paragraphs</h4><p>HTML Tag: <code>&lt;p&gt;</code></p><p>One or more blank lines. (A blank line is a line containing nothing but <strong>spaces</strong> or <strong>tabs</strong> is considered blank.)</p><p>Code:</p><pre><code>This will be inline.This is second paragraph.</code></pre><p>Preview:</p><hr><p>This will be<br>inline.</p><p>This is second paragraph.</p><hr><h4 id="Line-Breaks"><a href="#Line-Breaks" class="headerlink" title="Line Breaks"></a>Line Breaks</h4><p>HTML Tag: <code>&lt;br /&gt;</code></p><p>End a line with <strong>two or more spaces</strong>.</p><p>Code:</p><pre><code>This will be not  inline.</code></pre><p>Preview:</p><hr><p>This will be not<br>inline.</p><hr><h3 id="Headers"><a href="#Headers" class="headerlink" title="Headers"></a>Headers</h3><p>Markdown supports two styles of headers, Setext and atx.</p><h4 id="Setext"><a href="#Setext" class="headerlink" title="Setext"></a>Setext</h4><p>HTML Tags: <code>&lt;h1&gt;</code>, <code>&lt;h2&gt;</code></p><p>“Underlined” using <strong>equal signs (&#x3D;)</strong> as <code>&lt;h1&gt;</code> and <strong>dashes (-)</strong> as <code>&lt;h2&gt;</code> in any number.</p><p>Code:</p><pre><code>This is an H1=============This is an H2-------------</code></pre><p>Preview:</p><hr><h1 id="This-is-an-H1"><a href="#This-is-an-H1" class="headerlink" title="This is an H1"></a>This is an H1</h1><h2 id="This-is-an-H2"><a href="#This-is-an-H2" class="headerlink" title="This is an H2"></a>This is an H2</h2><hr><h4 id="atx"><a href="#atx" class="headerlink" title="atx"></a>atx</h4><p>HTML Tags: <code>&lt;h1&gt;</code>, <code>&lt;h2&gt;</code>, <code>&lt;h3&gt;</code>, <code>&lt;h4&gt;</code>, <code>&lt;h5&gt;</code>, <code>&lt;h6&gt;</code></p><p>Uses 1-6 <strong>hash characters (#)</strong> at the start of the line, corresponding to <code>&lt;h1&gt;</code> - <code>&lt;h6&gt;</code>.</p><p>Code:</p><pre><code># This is an H1## This is an H2###### This is an H6</code></pre><p>Preview:</p><hr><h1 id="This-is-an-H1-1"><a href="#This-is-an-H1-1" class="headerlink" title="This is an H1"></a>This is an H1</h1><h2 id="This-is-an-H2-1"><a href="#This-is-an-H2-1" class="headerlink" title="This is an H2"></a>This is an H2</h2><h6 id="This-is-an-H6"><a href="#This-is-an-H6" class="headerlink" title="This is an H6"></a>This is an H6</h6><hr><p>Optionally, you may “close” atx-style headers. The closing hashes <strong>don’t need to match</strong> the number of hashes used to open the header.</p><p>Code:</p><pre><code># This is an H1 ### This is an H2 ##### This is an H3 ######</code></pre><p>Preview:</p><hr><h1 id="This-is-an-H1-2"><a href="#This-is-an-H1-2" class="headerlink" title="This is an H1"></a>This is an H1</h1><h2 id="This-is-an-H2-2"><a href="#This-is-an-H2-2" class="headerlink" title="This is an H2"></a>This is an H2</h2><h3 id="This-is-an-H3"><a href="#This-is-an-H3" class="headerlink" title="This is an H3"></a>This is an H3</h3><hr><h3 id="Blockquotes"><a href="#Blockquotes" class="headerlink" title="Blockquotes"></a>Blockquotes</h3><p>HTML Tag: <code>&lt;blockquote&gt;</code></p><p>Markdown uses email-style <strong>&gt;</strong> characters for blockquoting. It looks best if you hard wrap the text and put a &gt; before every line.</p><p>Code:</p><pre><code>&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,&gt; consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.&gt; Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.&gt; &gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse&gt; id sem consectetuer libero luctus adipiscing.</code></pre><p>Preview:</p><hr><blockquote><p>This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,<br>consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.<br>Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</p><p>Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse<br>id sem consectetuer libero luctus adipiscing.</p></blockquote><hr><p>Markdown allows you to be lazy and only put the &gt; before the first line of a hard-wrapped paragraph.</p><p>Code:</p><pre><code>&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisseid sem consectetuer libero luctus adipiscing.</code></pre><p>Preview:</p><hr><blockquote><p>This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,<br>consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.<br>Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</p></blockquote><blockquote><p>Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse<br>id sem consectetuer libero luctus adipiscing.</p></blockquote><hr><p>Blockquotes can be nested (i.e. a blockquote-in-a-blockquote) by adding additional levels of &gt;.</p><p>Code:</p><pre><code>&gt; This is the first level of quoting.&gt;&gt; &gt; This is nested blockquote.&gt;&gt; Back to the first level.</code></pre><p>Preview:</p><hr><blockquote><p>This is the first level of quoting.</p><blockquote><p>This is nested blockquote.</p></blockquote><p>Back to the first level.</p></blockquote><hr><p>Blockquotes can contain other Markdown elements, including headers, lists, and code blocks.</p><p>Code:</p><pre><code>&gt; ## This is a header.&gt; &gt; 1.   This is the first list item.&gt; 2.   This is the second list item.&gt; &gt; Here&#39;s some example code:&gt; &gt;     return shell_exec(&quot;echo $input | $markdown_script&quot;);</code></pre><p>Preview:</p><hr><blockquote><h2 id="This-is-a-header"><a href="#This-is-a-header" class="headerlink" title="This is a header."></a>This is a header.</h2><ol><li>This is the first list item.</li><li>This is the second list item.</li></ol><p>Here’s some example code:</p><pre><code>return shell_exec(&quot;echo $input | $markdown_script&quot;);</code></pre></blockquote><hr><h3 id="Lists"><a href="#Lists" class="headerlink" title="Lists"></a>Lists</h3><p>Markdown supports ordered (numbered) and unordered (bulleted) lists.</p><h4 id="Unordered"><a href="#Unordered" class="headerlink" title="Unordered"></a>Unordered</h4><p>HTML Tag: <code>&lt;ul&gt;</code></p><p>Unordered lists use <strong>asterisks (*)</strong>, <strong>pluses (+)</strong>, and <strong>hyphens (-)</strong>.</p><p>Code:</p><pre><code>*   Red*   Green*   Blue</code></pre><p>Preview:</p><hr><ul><li>Red</li><li>Green</li><li>Blue</li></ul><hr><p>is equivalent to:</p><p>Code:</p><pre><code>+   Red+   Green+   Blue</code></pre><p>and:</p><p>Code:</p><pre><code>-   Red-   Green-   Blue</code></pre><h4 id="Ordered"><a href="#Ordered" class="headerlink" title="Ordered"></a>Ordered</h4><p>HTML Tag: <code>&lt;ol&gt;</code></p><p>Ordered lists use numbers followed by periods:</p><p>Code:</p><pre><code>1.  Bird2.  McHale3.  Parish</code></pre><p>Preview:</p><hr><ol><li>Bird</li><li>McHale</li><li>Parish</li></ol><hr><p>It’s possible to trigger an ordered list by accident, by writing something like this:</p><p>Code:</p><pre><code>1986. What a great season.</code></pre><p>Preview:</p><hr><ol start="1986"><li>What a great season.</li></ol><hr><p>You can <strong>backslash-escape (\)</strong> the period:</p><p>Code:</p><pre><code>1986\. What a great season.</code></pre><p>Preview:</p><hr><p>1986. What a great season.</p><hr><h4 id="Indented"><a href="#Indented" class="headerlink" title="Indented"></a>Indented</h4><h5 id="Blockquote"><a href="#Blockquote" class="headerlink" title="Blockquote"></a>Blockquote</h5><p>To put a blockquote within a list item, the blockquote’s &gt; delimiters need to be indented:</p><p>Code:</p><pre><code>*   A list item with a blockquote:    &gt; This is a blockquote    &gt; inside a list item.</code></pre><p>Preview:</p><hr><ul><li><p>A list item with a blockquote:</p><blockquote><p>This is a blockquote<br>inside a list item.</p></blockquote></li></ul><hr><h5 id="Code-Block"><a href="#Code-Block" class="headerlink" title="Code Block"></a>Code Block</h5><p>To put a code block within a list item, the code block needs to be indented twice — <strong>8 spaces</strong> or <strong>two tabs</strong>:</p><p>Code:</p><pre><code>*   A list item with a code block:        &lt;code goes here&gt;</code></pre><p>Preview:</p><hr><ul><li><p>A list item with a code block:</p><pre><code>&lt;code goes here&gt;</code></pre></li></ul><hr><h5 id="Nested-List"><a href="#Nested-List" class="headerlink" title="Nested List"></a>Nested List</h5><p>Code:</p><pre><code>* A  * A1  * A2* B* C</code></pre><p>Preview:</p><hr><ul><li>A<ul><li>A1</li><li>A2</li></ul></li><li>B</li><li>C</li></ul><hr><h3 id="Code-Blocks"><a href="#Code-Blocks" class="headerlink" title="Code Blocks"></a>Code Blocks</h3><p>HTML Tag: <code>&lt;pre&gt;</code></p><p>Indent every line of the block by at least <strong>4 spaces</strong> or <strong>1 tab</strong>.</p><p>Code:</p><pre><code>This is a normal paragraph:    This is a code block.</code></pre><p>Preview:</p><hr><p>This is a normal paragraph:</p><pre><code>This is a code block.</code></pre><hr><p>A code block continues until it reaches a line that is not indented (or the end of the article).</p><p>Within a code block, <em><strong>ampersands (&amp;)</strong></em> and angle <strong>brackets (&lt; and &gt;)</strong> are automatically converted into HTML entities.</p><p>Code:</p><pre><code>    &lt;div class=&quot;footer&quot;&gt;        © 2004 Foo Corporation    &lt;/div&gt;</code></pre><p>Preview:</p><hr><pre><code>&lt;div class=&quot;footer&quot;&gt;    © 2004 Foo Corporation&lt;/div&gt;</code></pre><hr><p>Following sections Fenced Code Blocks and Syntax Highlighting are extensions, you can use the other way to write the code block.</p><h4 id="Fenced-Code-Blocks"><a href="#Fenced-Code-Blocks" class="headerlink" title="Fenced Code Blocks"></a>Fenced Code Blocks</h4><p>Just wrap your code in <code>```</code> (as shown below) and you won’t need to indent it by four spaces.</p><p>Code:</p><pre><code>Here&#39;s an example:<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function test() &#123;</span><br><span class="line">  console.log(&quot;notice the blank line before this function?&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></code></pre><p>Preview:</p><hr><p>Here’s an example:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function test() &#123;</span><br><span class="line">  console.log(&quot;notice the blank line before this function?&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="Syntax-Highlighting"><a href="#Syntax-Highlighting" class="headerlink" title="Syntax Highlighting"></a>Syntax Highlighting</h4><p>In your fenced block, add an optional language identifier and we’ll run it through syntax highlighting (<a href="https://github.com/github/linguist/blob/master/lib/linguist/languages.yml">Support Languages</a>).</p><p>Code:</p><pre><code><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="string">&#x27;redcarpet&#x27;</span></span><br><span class="line">markdown = <span class="title class_">Redcarpet</span>.new(<span class="string">&quot;Hello World!&quot;</span>)</span><br><span class="line">puts markdown.to_html</span><br></pre></td></tr></table></figure></code></pre><p>Preview:</p><hr><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="string">&#x27;redcarpet&#x27;</span></span><br><span class="line">markdown = <span class="title class_">Redcarpet</span>.new(<span class="string">&quot;Hello World!&quot;</span>)</span><br><span class="line">puts markdown.to_html</span><br></pre></td></tr></table></figure><hr><h3 id="Horizontal-Rules"><a href="#Horizontal-Rules" class="headerlink" title="Horizontal Rules"></a>Horizontal Rules</h3><p>HTML Tag: <code>&lt;hr /&gt;</code><br>Places <strong>three or more hyphens (-), asterisks (*), or underscores (_)</strong> on a line by themselves. You may use spaces between the hyphens or asterisks.</p><p>Code:</p><pre><code>* * *********- - ----------------------------------------___</code></pre><p>Preview:</p><hr><hr><hr><hr><hr><hr><hr><hr><h3 id="Table"><a href="#Table" class="headerlink" title="Table"></a>Table</h3><p>HTML Tag: <code>&lt;table&gt;</code></p><p>It’s an extension.</p><p>Separates column by <strong>pipe (|)</strong> and header by <strong>dashes (-)</strong>, and uses <strong>colon (:)</strong> for alignment.</p><p>The outer <strong>pipes (|)</strong> and alignment are optional. There are <strong>3 delimiters</strong> each cell at least for separating header.</p><p>Code:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">| Left | Center | Right |</span><br><span class="line">|:-----|:------:|------:|</span><br><span class="line">|aaa   |bbb     |ccc    |</span><br><span class="line">|ddd   |eee     |fff    |</span><br><span class="line"></span><br><span class="line"> A | B </span><br><span class="line">---|---</span><br><span class="line">123|456</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">A |B </span><br><span class="line">--|--</span><br><span class="line">12|45</span><br></pre></td></tr></table></figure><p>Preview:</p><hr><table><thead><tr><th align="left">Left</th><th align="center">Center</th><th align="right">Right</th></tr></thead><tbody><tr><td align="left">aaa</td><td align="center">bbb</td><td align="right">ccc</td></tr><tr><td align="left">ddd</td><td align="center">eee</td><td align="right">fff</td></tr></tbody></table><table><thead><tr><th>A</th><th>B</th></tr></thead><tbody><tr><td>123</td><td>456</td></tr></tbody></table><table><thead><tr><th>A</th><th>B</th></tr></thead><tbody><tr><td>12</td><td>45</td></tr></tbody></table><hr><h2 id="Span-Elements"><a href="#Span-Elements" class="headerlink" title="Span Elements"></a>Span Elements</h2><h3 id="Links"><a href="#Links" class="headerlink" title="Links"></a>Links</h3><p>HTML Tag: <code>&lt;a&gt;</code></p><p>Markdown supports two style of links: inline and reference.</p><h4 id="Inline"><a href="#Inline" class="headerlink" title="Inline"></a>Inline</h4><p>Inline link format like this: <code>[Link Text](URL &quot;Title&quot;)</code></p><p>Title is optional.</p><p>Code:</p><pre><code>This is [an example](http://example.com/ &quot;Title&quot;) inline link.[This link](http://example.net/) has no title attribute.</code></pre><p>Preview:</p><hr><p>This is <a href="http://example.com/" title="Title">an example</a> inline link.</p><p><a href="http://example.net/">This link</a> has no title attribute.</p><hr><p>If you’re referring to a local resource on the same server, you can use relative paths:</p><p>Code:</p><pre><code>See my [About](/about/) page for details. </code></pre><p>Preview:</p><hr><p>See my <a href="/about/">About</a> page for details. </p><hr><h4 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h4><p>You could predefine link references. Format like this: <code>[id]: URL &quot;Title&quot;</code></p><p>Title is also optional. And the you refer the link, format like this: <code>[Link Text][id]</code></p><p>Code:</p><pre><code>[id]: http://example.com/  &quot;Optional Title Here&quot;This is [an example][id] reference-style link.</code></pre><p>Preview:</p><hr><p>This is <a href="http://example.com/" title="Optional Title Here">an example</a> reference-style link.</p><hr><p>That is:</p><ul><li>Square brackets containing the link identifier (<strong>not case sensitive</strong>, optionally indented from the left margin using up to three spaces);</li><li>followed by a colon;</li><li>followed by one or more spaces (or tabs);</li><li>followed by the URL for the link;</li><li>The link URL may, optionally, be surrounded by angle brackets.</li><li>optionally followed by a title attribute for the link, enclosed in double or single quotes, or enclosed in parentheses.</li></ul><p>The following three link definitions are equivalent:</p><p>Code:</p><pre><code>[foo]: http://example.com/  &quot;Optional Title Here&quot;[foo]: http://example.com/  &#39;Optional Title Here&#39;[foo]: http://example.com/  (Optional Title Here)[foo]: &lt;http://example.com/&gt;  &quot;Optional Title Here&quot;</code></pre><p>Uses an empty set of square brackets, the link text itself is used as the name.</p><p>Code:</p><pre><code>[Google]: http://google.com/[Google][]</code></pre><p>Preview:</p><hr><p><a href="http://google.com/">Google</a></p><hr><h3 id="Emphasis"><a href="#Emphasis" class="headerlink" title="Emphasis"></a>Emphasis</h3><p>HTML Tags: <code>&lt;em&gt;</code>, <code>&lt;strong&gt;</code></p><p>Markdown treats <strong>asterisks (*)</strong> and <strong>underscores (_)</strong> as indicators of emphasis. <strong>One delimiter</strong> will be  <code>&lt;em&gt;</code>; *<em>double delimiters</em> will be <code>&lt;strong&gt;</code>.</p><p>Code:</p><pre><code>*single asterisks*_single underscores_**double asterisks**__double underscores__</code></pre><p>Preview:</p><hr><p><em>single asterisks</em></p><p><em>single underscores</em></p><p><strong>double asterisks</strong></p><p><strong>double underscores</strong></p><hr><p>But if you surround an * or _ with spaces, it’ll be treated as a literal asterisk or underscore.</p><p>You can backslash escape it:</p><p>Code:</p><pre><code>\*this text is surrounded by literal asterisks\*</code></pre><p>Preview:</p><hr><p>*this text is surrounded by literal asterisks*</p><hr><h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><p>HTML Tag: <code>&lt;code&gt;</code></p><p>Wraps it with <strong>backtick quotes (&#96;)</strong>.</p><p>Code:</p><pre><code>Use the `printf()` function.</code></pre><p>Preview:</p><hr><p>Use the <code>printf()</code> function.</p><hr><p>To include a literal backtick character within a code span, you can use <strong>multiple backticks</strong> as the opening and closing delimiters:</p><p>Code:</p><pre><code>``There is a literal backtick (`) here.``</code></pre><p>Preview:</p><hr><p><code>There is a literal backtick (`) here.</code></p><hr><p>The backtick delimiters surrounding a code span may include spaces — one after the opening, one before the closing. This allows you to place literal backtick characters at the beginning or end of a code span:</p><p>Code:</p><pre><code>A single backtick in a code span: `` ` ``A backtick-delimited string in a code span: `` `foo` ``</code></pre><p>Preview:</p><hr><p>A single backtick in a code span: <code>`</code></p><p>A backtick-delimited string in a code span: <code>`foo`</code></p><hr><h3 id="Images"><a href="#Images" class="headerlink" title="Images"></a>Images</h3><p>HTML Tag: <code>&lt;img /&gt;</code></p><p>Markdown uses an image syntax that is intended to resemble the syntax for links, allowing for two styles: inline and reference.</p><h4 id="Inline-1"><a href="#Inline-1" class="headerlink" title="Inline"></a>Inline</h4><p>Inline image syntax looks like this: <code>![Alt text](URL &quot;Title&quot;)</code></p><p>Title is optional.</p><p>Code:</p><pre><code>![Alt text](/path/to/img.jpg)![Alt text](/path/to/img.jpg &quot;Optional title&quot;)</code></pre><p>Preview:</p><hr><p><img src="/path/to/img.jpg" alt="Alt text"></p><p><img src="/path/to/img.jpg" alt="Alt text" title="Optional title"></p><hr><p>That is:</p><ul><li>An exclamation mark: !;</li><li>followed by a set of square brackets, containing the alt attribute text for the image;</li><li>followed by a set of parentheses, containing the URL or path to the image, and an optional title attribute enclosed in double or single quotes.</li></ul><h4 id="Reference-1"><a href="#Reference-1" class="headerlink" title="Reference"></a>Reference</h4><p>Reference-style image syntax looks like this: <code>![Alt text][id]</code></p><p>Code:</p><pre><code>[img id]: url/to/image  &quot;Optional title attribute&quot;![Alt text][img id]</code></pre><p>Preview:</p><hr><p><img src="/url/to/image" alt="Alt text" title="Optional title attribute"></p><hr><h3 id="Strikethrough"><a href="#Strikethrough" class="headerlink" title="Strikethrough"></a>Strikethrough</h3><p>HTML Tag: <code>&lt;del&gt;</code></p><p>It’s an extension.</p><p>GFM adds syntax to strikethrough text.</p><p>Code:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~~Mistaken text.~~</span><br></pre></td></tr></table></figure><p>Preview:</p><hr><p><del>Mistaken text.</del></p><hr><h2 id="Miscellaneous"><a href="#Miscellaneous" class="headerlink" title="Miscellaneous"></a>Miscellaneous</h2><h3 id="Automatic-Links"><a href="#Automatic-Links" class="headerlink" title="Automatic Links"></a>Automatic Links</h3><p>Markdown supports a shortcut style for creating “automatic” links for URLs and email addresses: simply surround the URL or email address with angle brackets. </p><p>Code:</p><pre><code>&lt;http://example.com/&gt;&lt;address@example.com&gt;</code></pre><p>Preview:</p><hr><p><a href="http://example.com/">http://example.com/</a></p><p><a href="mailto:&#x61;&#x64;&#x64;&#114;&#x65;&#115;&#x73;&#64;&#101;&#120;&#97;&#x6d;&#112;&#108;&#x65;&#x2e;&#x63;&#111;&#x6d;">&#x61;&#x64;&#x64;&#114;&#x65;&#115;&#x73;&#64;&#101;&#120;&#97;&#x6d;&#112;&#108;&#x65;&#x2e;&#x63;&#111;&#x6d;</a></p><hr><p>GFM will autolink standard URLs.</p><p>Code:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/emn178/markdown</span><br></pre></td></tr></table></figure><p>Preview:</p><hr><p><a href="https://github.com/emn178/markdown">https://github.com/emn178/markdown</a></p><hr><h3 id="Backslash-Escapes"><a href="#Backslash-Escapes" class="headerlink" title="Backslash Escapes"></a>Backslash Escapes</h3><p>Markdown allows you to use backslash escapes to generate literal characters which would otherwise have special meaning in Markdown’s formatting syntax.</p><p>Code:</p><pre><code>\*literal asterisks\*</code></pre><p>Preview:</p><hr><p>*literal asterisks*</p><hr><p>Markdown provides backslash escapes for the following characters:</p><p>Code:</p><pre><code>\   backslash`   backtick*   asterisk_   underscore&#123;&#125;  curly braces[]  square brackets()  parentheses#   hash mark+   plus sign-   minus sign (hyphen).   dot!   exclamation mark</code></pre><h2 id="Inline-HTML"><a href="#Inline-HTML" class="headerlink" title="Inline HTML"></a>Inline HTML</h2><p>For any markup that is not covered by Markdown’s syntax, you simply use HTML itself. There’s no need to preface it or delimit it to indicate that you’re switching from Markdown to HTML; you just use the tags.</p><p>Code:</p><pre><code>This is a regular paragraph.&lt;table&gt;    &lt;tr&gt;        &lt;td&gt;Foo&lt;/td&gt;    &lt;/tr&gt;&lt;/table&gt;This is another regular paragraph.</code></pre><p>Preview:</p><hr><p>This is a regular paragraph.</p><table>    <tr>        <td>Foo</td>    </tr></table><p>This is another regular paragraph.</p><hr><p>Note that Markdown formatting syntax is <strong>not processed within block-level HTML tags</strong>. </p><p>Unlike block-level HTML tags, Markdown syntax is <strong>processed within span-level tags</strong>.</p><p>Code:</p><pre><code>&lt;span&gt;**Work**&lt;/span&gt;&lt;div&gt;    **No Work**&lt;/div&gt;</code></pre><p>Preview:</p><hr><p><span><strong>Work</strong></span></p><div>  **No Work**</div>***]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Source: &lt;a href=&quot;https://github.com/emn178/markdown&quot;&gt;https://github.com/emn178/markdown&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A markdown example shows how to write </summary>
      
    
    
    
    
    <category term="test" scheme="https://blog.depoze.xyz/tags/test/"/>
    
  </entry>
  
  <entry>
    <title>Neat examples of mathematica</title>
    <link href="https://blog.depoze.xyz/2022/05/neat-examples-of-mathematica/"/>
    <id>https://blog.depoze.xyz/2022/05/neat-examples-of-mathematica/</id>
    <published>2022-05-05T14:30:05.000Z</published>
    <updated>2022-05-05T14:30:05.000Z</updated>
    
    <content type="html"><![CDATA[<p>This post will be updated from time to time as soon as any neat trick come out.</p><h2 id="Generate-an-iterated-logistic-map"><a href="#Generate-an-iterated-logistic-map" class="headerlink" title="Generate an iterated logistic map"></a>Generate an iterated logistic map</h2><p>I didn’t come out this method, it’s in the official documentation of mathematica.</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ListPlot</span><span class="punctuation">[</span><span class="built_in">Table</span><span class="punctuation">[</span><span class="built_in">Thread</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="variable">r</span><span class="operator">,</span> <span class="built_in">Nest</span><span class="punctuation">[</span><span class="variable">r</span> <span class="type">#</span> <span class="punctuation">(</span><span class="number">1</span> <span class="operator">-</span> <span class="type">#</span><span class="punctuation">)</span> <span class="operator">&amp;,</span> <span class="built_in">Range</span><span class="punctuation">[</span><span class="number">0</span><span class="operator">,</span> <span class="number">1</span><span class="operator">,</span> <span class="number">0.01</span><span class="punctuation">]</span><span class="operator">,</span> <span class="number">1000</span><span class="punctuation">]</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="variable">r</span><span class="operator">,</span> <span class="number">0</span><span class="operator">,</span> <span class="number">4</span><span class="operator">,</span> <span class="number">0.01</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p><img src="/../images/2022/logistic.png"></p><p>output</p><h2 id="Count-the-number-of-Wednesdays-on-Dec-25th-in-400-yrs"><a href="#Count-the-number-of-Wednesdays-on-Dec-25th-in-400-yrs" class="headerlink" title="Count the number of Wednesdays on Dec 25th in 400 yrs"></a><a href="https://depoze.xyz/2021/10/14/probability-of-christmas-on-wednesday/">Count the number of Wednesdays on Dec 25th in 400 yrs</a></h2><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Tally</span><span class="punctuation">[</span><span class="built_in">DayName</span> <span class="operator">/@</span> <span class="built_in">Tuples</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="built_in">Range</span><span class="punctuation">[</span><span class="number">0</span><span class="operator">,</span> <span class="number">399</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">Range</span><span class="punctuation">[</span><span class="number">12</span><span class="operator">,</span> <span class="number">12</span><span class="punctuation">]</span><span class="operator">,</span> <span class="punctuation">&#123;</span><span class="number">25</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p>Output:</p>{{Monday, 56}, {Tuesday, 58}, {Wednesday, 57}, {Thursday, 57}, {Saturday, 56}, {Sunday, 58}, {Friday, 58}}<h2 id="Find-the-kth-Chebyshev-Polynomial"><a href="#Find-the-kth-Chebyshev-Polynomial" class="headerlink" title="Find the kth Chebyshev Polynomial"></a>Find the kth Chebyshev Polynomial</h2><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Nest</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="number">2</span> <span class="variable">x</span> <span class="type">#</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">-</span> <span class="type">#</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">,</span> <span class="number">2</span> <span class="variable">x</span> <span class="punctuation">(</span><span class="number">2</span> <span class="variable">x</span> <span class="type">#</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">-</span> <span class="type">#</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">)</span> <span class="operator">-</span> <span class="type">#</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">&#125;</span> <span class="operator">&amp;,</span> <span class="punctuation">&#123;</span><span class="number">1</span><span class="operator">,</span> <span class="variable">x</span><span class="punctuation">&#125;</span><span class="operator">,</span> <span class="number">3</span><span class="punctuation">]</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">//</span> <span class="built_in">Expand</span></span><br></pre></td></tr></table></figure><p>Output:</p><p>-7 x + 56 x^3 - 112 x^5 + 64 x^7</p><p>(The 7th Chebyshev Polynomial)</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;This post will be updated from time to time as soon as any neat trick come out.&lt;/p&gt;
&lt;h2 id=&quot;Generate-an-iterated-logistic-map&quot;&gt;&lt;a href=&quot;#</summary>
      
    
    
    
    
    <category term="Math" scheme="https://blog.depoze.xyz/tags/Math/"/>
    
    <category term="Mathematica" scheme="https://blog.depoze.xyz/tags/Mathematica/"/>
    
  </entry>
  
  <entry>
    <title>Numerical Analysis - Lab</title>
    <link href="https://blog.depoze.xyz/2022/03/numeral-analysis-lab/"/>
    <id>https://blog.depoze.xyz/2022/03/numeral-analysis-lab/</id>
    <published>2022-03-28T13:54:40.000Z</published>
    <updated>2022-03-28T13:54:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>This article is migrated from Wordpress and may have lost the images in it. </p><h2 id="Index"><a href="#Index" class="headerlink" title="Index"></a>Index</h2><ul><li>Lab2 - Direct Methods for Solving Linear Equations</li><li>Lab3 - Inverse Power Method to Solve Eigenvalue</li><li>Lab4 - Jacobi Method to Solve Eigenvalue</li><li>Lab 5 - Cubic Spline Interpolation</li><li>Lab 6 - FFT &amp; IFFT]</li><li>Lab 7 - Romberg Integral</li></ul><h2 id="Lab2-Direct-Methods-for-Solving-Linear-Equations"><a href="#Lab2-Direct-Methods-for-Solving-Linear-Equations" class="headerlink" title="Lab2 - Direct Methods for Solving Linear Equations"></a>Lab2 - Direct Methods for Solving Linear Equations</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>Use C&#x2F;C++, implement the following algorithms:</p><ol><li>Gaussian Elimination</li><li>Doolittle Decomposition</li></ol><h3 id="Implement"><a href="#Implement" class="headerlink" title="Implement"></a>Implement</h3><h4 id="Predefinition-and-Useful-functions"><a href="#Predefinition-and-Useful-functions" class="headerlink" title="Predefinition and Useful functions"></a>Predefinition and Useful functions</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SUCCESS 0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FAILURE 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INPUTPATH <span class="string">&quot;./InputData.txt&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> Status;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">double</span>* Vector;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">double</span>** Matrix;</span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">PrintMatrix</span><span class="params">(<span class="type">int</span> n, Matrix A)</span></span>&#123;</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">     * ===  FUNCTION  ======================================================================</span></span><br><span class="line"><span class="comment">     *         Name:  PrintMatrix</span></span><br><span class="line"><span class="comment">     *  Description:  Print the Matrix A to the terminal. n is the Dimension of A. </span></span><br><span class="line"><span class="comment">     * =====================================================================================</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%.2lf\t&quot;</span>, A[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> SUCCESS;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">PrintVector</span><span class="params">(<span class="type">int</span> n, Vector v)</span></span>&#123;</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">     * ===  FUNCTION  ======================================================================</span></span><br><span class="line"><span class="comment">     *         Name:  PrintVector</span></span><br><span class="line"><span class="comment">     *  Description:  Print the Vector v to the terminal(in row form). n is the Dimension of v. </span></span><br><span class="line"><span class="comment">     * =====================================================================================</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.2lf\t&quot;</span>, v[i]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> SUCCESS;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h4><p>Using a file to input is the most stable way. Two key functions here: <a href="https://www.cplusplus.com/reference/string/string/getline/"><em>getline</em></a> and <a href="http://www.cplusplus.com/reference/cstdlib/strtod/"><em>strtod</em></a>.</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Status <span class="title">ReadFromInput</span><span class="params">(<span class="type">int</span>&amp; n, Matrix&amp; A, Vector&amp; b, <span class="type">bool</span> PrintResult)</span></span>&#123;</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">     * ===  FUNCTION  ======================================================================</span></span><br><span class="line"><span class="comment">     *         Name:  ReadFromInput</span></span><br><span class="line"><span class="comment">     *  Description:  Read data from input file. File Format:</span></span><br><span class="line"><span class="comment">     *                  The first line indicates n.</span></span><br><span class="line"><span class="comment">     *                  The next n line is the Matrix A, separated by space.</span></span><br><span class="line"><span class="comment">     *                  The last line is the vector b, separated by space.</span></span><br><span class="line"><span class="comment">     *                  </span></span><br><span class="line"><span class="comment">     *                  It&#x27;s recommended that the number are written in demical.</span></span><br><span class="line"><span class="comment">     *                      e.g.  Use &quot;1.0&quot;, not &quot;1&quot;.</span></span><br><span class="line"><span class="comment">     * =====================================================================================</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    ifstream inputfile;</span><br><span class="line">    inputfile.<span class="built_in">open</span>(INPUTPATH);</span><br><span class="line">    string str;</span><br><span class="line">    <span class="type">char</span>* endptr;</span><br><span class="line">    <span class="keyword">if</span>(inputfile.<span class="built_in">is_open</span>())&#123;</span><br><span class="line">        <span class="built_in">getline</span>(inputfile, str);    <span class="comment">//Reading n.</span></span><br><span class="line">        n = <span class="built_in">stoi</span>(str);</span><br><span class="line"></span><br><span class="line">        A = <span class="keyword">new</span> Vector[n];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">            A[i] = <span class="keyword">new</span> <span class="type">double</span>[n];</span><br><span class="line">        &#125;</span><br><span class="line">        b = <span class="keyword">new</span> <span class="type">double</span>[n];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123; <span class="comment">// Reading A.</span></span><br><span class="line">            <span class="built_in">getline</span>(inputfile, str);</span><br><span class="line">            <span class="type">char</span> SameAsStr[str.<span class="built_in">length</span>() + <span class="number">1</span>];   <span class="comment">//* Convert str to char* type for </span></span><br><span class="line">            <span class="built_in">strcpy</span>(SameAsStr, str.<span class="built_in">c_str</span>());     <span class="comment">//*   the strtod function.</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)&#123;</span><br><span class="line">                A[i][j] = <span class="built_in">strtod</span>(SameAsStr, &amp;endptr);</span><br><span class="line">                <span class="built_in">strcpy</span>(SameAsStr, endptr);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">getline</span>(inputfile, str);    <span class="comment">// Reading b.</span></span><br><span class="line">        <span class="type">char</span> SameAsStr[str.<span class="built_in">length</span>() + <span class="number">1</span>];   <span class="comment">//* Convert str to char* type for </span></span><br><span class="line">        <span class="built_in">strcpy</span>(SameAsStr, str.<span class="built_in">c_str</span>());     <span class="comment">//*  the strtod function.</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)&#123;</span><br><span class="line">            b[j] = <span class="built_in">strtod</span>(SameAsStr, &amp;endptr);</span><br><span class="line">            <span class="built_in">strcpy</span>(SameAsStr, endptr);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        inputfile.<span class="built_in">close</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(PrintResult)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Matrix A:\n&quot;</span>);</span><br><span class="line">            <span class="built_in">PrintMatrix</span>(n, A);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Vector b:\n&quot;</span>);</span><br><span class="line">            <span class="built_in">PrintVector</span>(n, b);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Input Error, please check.\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> FAILURE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> SUCCESS;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Solving-Triangular-Form-Equations"><a href="#Solving-Triangular-Form-Equations" class="headerlink" title="Solving Triangular-Form Equations"></a>Solving Triangular-Form Equations</h4><p>LTM Solve Algorithm and UTM Solve Algorithm is symmetric. So we just call <em>UpperSolve</em> function when implementing <em>LowerSolve</em>.</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Status <span class="title">UpperSolve</span><span class="params">(<span class="type">int</span> n, Matrix A, Vector b, Vector x)</span></span>&#123;</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">     * ===  FUNCTION  ======================================================================</span></span><br><span class="line"><span class="comment">     *         Name:  UpperSolve</span></span><br><span class="line"><span class="comment">     *  Description:  When A is an Upper Triangular Matrix, use elimination, solve Ax == b. </span></span><br><span class="line"><span class="comment">     *    Parameter:  n is D[A]. x is the solution.</span></span><br><span class="line"><span class="comment">     * =====================================================================================</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; i; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">abs</span>(A[i][j]) &gt; <span class="number">0.000001</span>)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;This Matrix is not a Upper Triangular Matrix.\n&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> FAILURE;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = n - <span class="number">1</span>; i &gt; <span class="number">-1</span>; i--)&#123;</span><br><span class="line">        <span class="keyword">if</span>(A[i][i] == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;This entry have infinity solutions.\n&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> FAILURE;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span> InPathe = b[i]; </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = n - <span class="number">1</span>; j &gt; i; j--)&#123;</span><br><span class="line">            InPathe -= A[i][j] * x[j];</span><br><span class="line">        &#125;</span><br><span class="line">        x[i] = InPathe / A[i][i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> SUCCESS;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">LowerSolve</span><span class="params">(<span class="type">int</span> n, Matrix A, Vector b, Vector x)</span></span>&#123;</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">     * ===  FUNCTION  ======================================================================</span></span><br><span class="line"><span class="comment">     *         Name:  LowerSolve</span></span><br><span class="line"><span class="comment">     *  Description:   When A is an Lower Triangular Matrix, use elimination, solve Ax == b. </span></span><br><span class="line"><span class="comment">     *    Parameter:  n is D[A]. x is the solution.</span></span><br><span class="line"><span class="comment">     * =====================================================================================</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">        Matrix TempA = <span class="keyword">new</span> Vector[n];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">            TempA[i] = <span class="keyword">new</span> <span class="type">double</span>[n];</span><br><span class="line">        &#125;</span><br><span class="line">        Vector Tempb = <span class="keyword">new</span> <span class="type">double</span>[n];</span><br><span class="line">        Vector Tempx = <span class="keyword">new</span> <span class="type">double</span>[n];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">            Tempb[i] = b[n - <span class="number">1</span> - i];</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">                TempA[i][j] = A[n - <span class="number">1</span> - i][n - <span class="number">1</span> - j];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">UpperSolve</span>(n, TempA, Tempb, Tempx))&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;This Matrix is not a Lower Triangular Matrix.\n&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> FAILURE;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">            x[i] = Tempx[n - <span class="number">1</span> - i];</span><br><span class="line">    <span class="keyword">return</span> SUCCESS;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Gaussian-Method"><a href="#Gaussian-Method" class="headerlink" title="Gaussian Method"></a>Gaussian Method</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Status <span class="title">ChoosePivot</span><span class="params">(<span class="type">int</span> n, Matrix A, Vector b, <span class="type">int</span> ProcessingColumn)</span></span>&#123;</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">     * ===  FUNCTION  ======================================================================</span></span><br><span class="line"><span class="comment">     *         Name:  ChoosePivot</span></span><br><span class="line"><span class="comment">     *  Description:  Choose the Pivot of Processing Column, do the exchange. </span></span><br><span class="line"><span class="comment">     * =====================================================================================</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">double</span> MaxAbs = <span class="built_in">abs</span>(A[ProcessingColumn][ProcessingColumn]);</span><br><span class="line">    <span class="type">int</span> MaxAbsRow = ProcessingColumn;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = ProcessingColumn + <span class="number">1</span>; i &lt; n; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">abs</span>(A[i][ProcessingColumn]) &gt; MaxAbs)&#123;</span><br><span class="line">            MaxAbs = <span class="built_in">abs</span>(A[i][ProcessingColumn]);</span><br><span class="line">            MaxAbsRow = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">double</span> temp = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)&#123;</span><br><span class="line">        temp = A[ProcessingColumn][j]; A[ProcessingColumn][j] = A[MaxAbsRow][j]; A[MaxAbsRow][j] = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    temp = b[ProcessingColumn]; b[ProcessingColumn] = b[MaxAbsRow]; b[MaxAbsRow] = temp;</span><br><span class="line">    <span class="keyword">return</span> SUCCESS;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">GaussMethod</span><span class="params">(<span class="type">int</span> n, Matrix A, Vector b, Vector x)</span></span>&#123;</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">     * ===  FUNCTION  ======================================================================</span></span><br><span class="line"><span class="comment">     *         Name:  GaussMethod</span></span><br><span class="line"><span class="comment">     *  Description:   </span></span><br><span class="line"><span class="comment">     * =====================================================================================</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> k = <span class="number">0</span>; k &lt; n; k++)&#123;</span><br><span class="line">        <span class="built_in">ChoosePivot</span>(n, A, b, k);</span><br><span class="line"></span><br><span class="line"><span class="comment">// ==== set the condition to non-zero to display eliminating process. ==========</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="number">1</span>)&#123; </span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;ChoosePivot #%d\n&quot;</span>, k);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Matrix A:\n&quot;</span>);</span><br><span class="line">            <span class="built_in">PrintMatrix</span>(n, A);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Vector b:\n&quot;</span>);</span><br><span class="line">            <span class="built_in">PrintVector</span>(n, b);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">// ================================================================================</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">abs</span>(A[k][k]) &lt; <span class="number">0.0000000001</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;This pivot can&#x27;t be den.\n&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> FAILURE;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = k + <span class="number">1</span>; i &lt; n; i++)&#123;</span><br><span class="line">            <span class="type">double</span> Coefficient = A[i][k] / A[k][k];</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = k; j &lt; n; j++)</span><br><span class="line">                A[i][j] -= Coefficient * A[k][j];</span><br><span class="line">            b[i] -= Coefficient * b[k];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Matrix After Elimination:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">PrintMatrix</span>(n, A);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Vector After Elimination:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">PrintVector</span>(n, b);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">UpperSolve</span>(n, A, b, x);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;The solution is:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">PrintVector</span>(n, x);</span><br><span class="line">    <span class="keyword">return</span> SUCCESS;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="LU-Decomposition-and-Doolittle-Method"><a href="#LU-Decomposition-and-Doolittle-Method" class="headerlink" title="LU Decomposition and Doolittle Method"></a>LU Decomposition and Doolittle Method</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Status <span class="title">LUDecomposition</span><span class="params">(<span class="type">int</span> n, Matrix A, Matrix L, Matrix U)</span></span>&#123;</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">     * ===  FUNCTION  ======================================================================</span></span><br><span class="line"><span class="comment">     *         Name:  LUDecomposition</span></span><br><span class="line"><span class="comment">     *  Description:  Do Doolittle decompose: A = LU, return via param L and U. </span></span><br><span class="line"><span class="comment">     * =====================================================================================</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; i + <span class="number">1</span>; j++)&#123;</span><br><span class="line">            L[i][j] = A[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = i + <span class="number">1</span>; j &lt; n; j++)</span><br><span class="line">            L[i][j] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; i; j++)</span><br><span class="line">            U[i][j] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = i; j&lt; n; j++)</span><br><span class="line">            U[i][j] = A[i][j];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> k = <span class="number">0</span>; k &lt; n; k++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = k; j &lt; n; j++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> r = <span class="number">0</span>; r &lt; k; r++)</span><br><span class="line">                U[k][j] -= L[k][r] * U[r][j];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = k; i &lt; n; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> r = <span class="number">0</span>; r &lt; k; r++)</span><br><span class="line">                L[i][k] -= L[i][r] * U[r][k];</span><br><span class="line">            <span class="keyword">if</span>(U[k][k] == <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;Divided by 0.\n&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> FAILURE;</span><br><span class="line">            &#125;    </span><br><span class="line">            L[i][k] /= U[k][k];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> SUCCESS;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">DoolittleMethod</span><span class="params">(<span class="type">int</span> n, Matrix A, Vector b, Vector x)</span></span>&#123;</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">     * ===  FUNCTION  ======================================================================</span></span><br><span class="line"><span class="comment">     *         Name:  DoolittleMethod</span></span><br><span class="line"><span class="comment">     *  Description:  Using DoolittleMethod to Solve Ax == b,</span></span><br><span class="line"><span class="comment">     * =====================================================================================</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    Matrix L = <span class="keyword">new</span> Vector[n];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">        L[i] = <span class="keyword">new</span> <span class="type">double</span>[n];</span><br><span class="line">    &#125;</span><br><span class="line">    Matrix U = <span class="keyword">new</span> Vector[n];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">        U[i] = <span class="keyword">new</span> <span class="type">double</span>[n];</span><br><span class="line">    &#125;</span><br><span class="line">    Vector y = <span class="keyword">new</span> <span class="type">double</span>[n];</span><br><span class="line"></span><br><span class="line">    <span class="built_in">LUDecomposition</span>(n, A, L, U);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;L:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">PrintMatrix</span>(n, L);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;U:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">PrintMatrix</span>(n, U);</span><br><span class="line">    <span class="built_in">LowerSolve</span>(n, L, b, y);</span><br><span class="line">    <span class="built_in">UpperSolve</span>(n, U, y, x);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="built_in">PrintVector</span>(n, x);</span><br><span class="line">    <span class="keyword">return</span> SUCCESS;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Calculate-Error"><a href="#Calculate-Error" class="headerlink" title="Calculate Error"></a>Calculate Error</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Status <span class="title">CalculateError</span><span class="params">(<span class="type">int</span> n, Matrix A, Vector x, Vector b)</span></span>&#123;</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">     * ===  FUNCTION  ======================================================================</span></span><br><span class="line"><span class="comment">     *         Name:  CalculateError</span></span><br><span class="line"><span class="comment">     *  Description:  Using 2-Norm to Calculate Norm(Ax - b). </span></span><br><span class="line"><span class="comment">     * =====================================================================================</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    Vector t = <span class="keyword">new</span> <span class="type">double</span>[n];   <span class="comment">//t = Ax - b.</span></span><br><span class="line">    <span class="type">double</span> Sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> k = <span class="number">0</span>; k &lt; n; k++)&#123;</span><br><span class="line">        t[k] = -b[k];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">            t[k] += A[k][j] * x[j];</span><br><span class="line">        Sum += t[k] * t[k];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">double</span> Error = <span class="built_in">sqrt</span>(Sum);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;The Error Vector is:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">PrintVector</span>(n, t);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Error = %.12lf\n&quot;</span>, Error);</span><br><span class="line">    <span class="keyword">return</span> SUCCESS;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Main-Function-Calling-the-Functions-implemented-above"><a href="#Main-Function-Calling-the-Functions-implemented-above" class="headerlink" title="Main Function - Calling the Functions implemented above"></a>Main Function - Calling the Functions implemented above</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    Matrix A = <span class="literal">NULL</span>;</span><br><span class="line">    Vector b = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">ReadFromInput</span>(n, A, b, <span class="number">1</span>);</span><br><span class="line">    Vector x = <span class="literal">NULL</span>;</span><br><span class="line">    x = <span class="keyword">new</span> <span class="type">double</span>[n];</span><br><span class="line">    <span class="keyword">switch</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="built_in">GaussMethod</span>(n, A, b, x);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="built_in">DoolittleMethod</span>(n, A, b, x);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Invalid Argument.\n&quot;</span>);</span><br><span class="line">            <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">ReadFromInput</span>(n, A, b, <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">CalculateError</span>(n, A, x, b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Result"><a href="#Result" class="headerlink" title="Result"></a>Result</h3><h4 id="Example-1"><a href="#Example-1" class="headerlink" title="Example 1"></a>Example 1</h4><p>Using Gaussian Method:</p><p>$ g++ DecompositionMethod.cpp -o De.out<br>$ .&#x2F;De.out<br>Matrix A:<br>0.11110.12500.14290.16670.2000<br>0.12500.14290.16670.20000.2500<br>0.14290.16670.20000.25000.3333<br>0.16670.20000.25000.33330.5000<br>0.20000.25000.33330.50001.0000<br>Vector b:<br>1.00001.00001.00001.00001.0000</p><p>Matrix After Elimination:<br>0.20000.25000.33330.50001.0000<br>0.0000-0.0139-0.0423-0.1111-0.3556<br>0.00000.0000-0.0024-0.0167-0.1200<br>0.00000.0000-0.00000.00080.0152<br>0.00000.00000.00000.0000-0.0007<br>Vector After Elimination:<br>1.00000.4444-0.1000-0.0190-0.0036<br>The solution is:<br>629.9978 -1119.9957 629.9972 -119.9994 5.0000</p><p>The Error Vector is:<br>-0.0000-0.00000.0000-0.0000-0.0000<br>Error &#x3D; 0.000000000000</p><p>Using Doolittle Method:</p><p>$ g++ DecompositionMethod.cpp -o De.out<br>$ .&#x2F;De.out<br>Matrix A:<br>0.11110.12500.14290.16670.2000<br>0.12500.14290.16670.20000.2500<br>0.14290.16670.20000.25000.3333<br>0.16670.20000.25000.33330.5000<br>0.20000.25000.33330.50001.0000<br>Vector b:<br>1.00001.00001.00001.00001.0000</p><p>L:<br>1.00000.00000.00000.00000.0000<br>1.12501.00000.00000.00000.0000<br>1.28572.66671.00000.00000.0000<br>1.50005.60005.25001.00000.0000<br>1.800011.200021.000012.00001.0000<br>U:<br>0.11110.12500.14290.16670.2000<br>0.00000.00220.00600.01250.0250<br>0.00000.00000.00050.00240.0095<br>0.00000.00000.00000.00080.0100<br>0.00000.00000.00000.00000.0400<br>x:<br>629.9978 -1119.9957 629.9972 -119.9994 5.0000<br>The Error Vector is:<br>-0.00000.0000-0.0000-0.00000.0000<br>Error &#x3D; 0.000000000000</p><p>We don’t have much error here…thanks to the double precision floating point type.</p><h4 id="Example-2"><a href="#Example-2" class="headerlink" title="Example 2"></a>Example 2</h4><p>Using Gaussian Method:</p><p>$ g++ DecompositionMethod.cpp -o De.out<br>$ .&#x2F;De.out<br>Matrix A:<br>7.20002.3000-4.40000.5000<br>1.30006.3000-3.50002.8000<br>5.60000.90008.1000-1.3000<br>1.50000.40003.70005.9000<br>Vector b:<br>15.10001.800016.600036.9000</p><p>Matrix After Elimination:<br>7.20002.3000-4.40000.5000<br>0.00005.8847-2.70562.7097<br>0.00000.000011.1135-1.2796<br>0.00000.00000.00006.3596<br>Vector After Elimination:<br>15.1000-0.92644.715631.7982<br>The solution is:<br>3.0000-2.00001.00005.0000<br>The Error Vector is:<br>-0.0000-0.0000-0.00000.0000<br>Error &#x3D; 0.000000000000</p><p>Using Doolittle Method:</p><p>$ g++ DecompositionMethod.cpp -o De.out<br>$ .&#x2F;De.out<br>Matrix A:<br>7.20002.3000-4.40000.5000<br>1.30006.3000-3.50002.8000<br>5.60000.90008.1000-1.3000<br>1.50000.40003.70005.9000<br>Vector b:<br>15.10001.800016.600036.9000</p><p>L:<br>1.00000.00000.00000.0000<br>0.18061.00000.00000.0000<br>0.7778-0.15111.00000.0000<br>0.2083-0.01350.41211.0000<br>U:<br>7.20002.3000-4.40000.5000<br>0.00005.8847-2.70562.7097<br>0.00000.000011.1135-1.2796<br>0.00000.00000.00006.3596<br>x:<br>3.0000-2.00001.00005.0000<br>The Error Vector is:<br>-0.0000-0.0000-0.00000.0000<br>Error &#x3D; 0.000000000000</p><h3 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h3><p>For the 1st example, when the true input are fractions, we still have some larger error because I use an file to input, and introduced function <em>strtod</em>. So I don’t even have a way to represent fractions as accurate as a double type - What I can do is just input more digits, as an approximate value.</p><p>Finally, in these two examples, our error is eliminated below $10^{-12}$. We can say our programs works well.</p><h2 id="Lab3-Inverse-Power-Method-to-Solve-Eigenvalue"><a href="#Lab3-Inverse-Power-Method-to-Solve-Eigenvalue" class="headerlink" title="Lab3 - Inverse Power Method to Solve Eigenvalue"></a>Lab3 - Inverse Power Method to Solve Eigenvalue</h2><h3 id="Description-1"><a href="#Description-1" class="headerlink" title="Description"></a>Description</h3><p>Solve the minimal eigenvalue and its eigenvector of a given matrix.</p><h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><p>Note: Lab3 referenced the code through “<em>Lab2.h</em>“</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * =====================================================================================</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       Filename:  Inverse-Power-Method.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *    Description: Use inverse power method to calculate the minimal eigenvalue.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *        Version:  1.0</span></span><br><span class="line"><span class="comment"> *        Created:  04/08/2022 02:35:07 UTC</span></span><br><span class="line"><span class="comment"> *       Revision:  none</span></span><br><span class="line"><span class="comment"> *       Compiler:  gcc</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *         Author:  CuSO4_Deposit</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * =====================================================================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;../Lab2/Lab2.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SUCCESS 0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FAILURE 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INPUTPATH <span class="string">&quot;./InputData.txt&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> Status;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">double</span>* Vector;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">double</span>** Matrix;</span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">Matrix_Multiplication</span><span class="params">(<span class="type">int</span> A_m, <span class="type">int</span> A_n, <span class="type">int</span> B_m, <span class="type">int</span> B_n, Matrix A, Matrix B, Matrix Result)</span></span>&#123;</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">     * ===  FUNCTION  ======================================================================</span></span><br><span class="line"><span class="comment">     *         Name:  Matrix_Multiplication</span></span><br><span class="line"><span class="comment">     *  Description:  Calculate the multiplication of A and B. A has m rows and n cols. </span></span><br><span class="line"><span class="comment">     * =====================================================================================</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">if</span>(A_n != B_m)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;A and B can&#x27;t multiply.\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> FAILURE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; A_m; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; B_n; j++)&#123;</span><br><span class="line">            Result[i][j] = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> k = <span class="number">0</span>; k &lt; A_n; k++)</span><br><span class="line">                Result[i][j] += A[i][k] * B[k][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> SUCCESS;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">IPM_Iteration</span><span class="params">(<span class="type">int</span> n, Matrix A, <span class="type">double</span>&amp; eigenvalue, Vector eigenvector)</span></span>&#123;</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">     * ===  FUNCTION  ======================================================================</span></span><br><span class="line"><span class="comment">     *         Name:  IPM_Iteration</span></span><br><span class="line"><span class="comment">     *  Description:  Do the iteration of inverse power method to A. </span></span><br><span class="line"><span class="comment">     * =====================================================================================</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    Vector x = <span class="keyword">new</span> <span class="type">double</span>[n];</span><br><span class="line">    <span class="comment">//double value = sqrt(double(1) / n); </span></span><br><span class="line">    <span class="type">double</span> value = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        x[i] = <span class="number">1</span>;</span><br><span class="line">    Vector x_prior = <span class="keyword">new</span> <span class="type">double</span>[n];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        x_prior[i] = value;</span><br><span class="line">    Vector temp = <span class="keyword">new</span> <span class="type">double</span>[n];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        temp[i] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    Matrix L = <span class="keyword">new</span> Vector[n];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        L[i] = <span class="keyword">new</span> <span class="type">double</span>[n];</span><br><span class="line">    Matrix U = <span class="keyword">new</span> Vector[n];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        U[i] = <span class="keyword">new</span> <span class="type">double</span>[n];</span><br><span class="line">    <span class="built_in">LUDecomposition</span>(n, A, L, U);</span><br><span class="line">    <span class="type">double</span> error = <span class="number">10</span>;</span><br><span class="line">    <span class="type">double</span> Max_prior = value;</span><br><span class="line">    <span class="type">double</span> Max = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> x_idx = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> x_prior_idx = <span class="number">0</span>;</span><br><span class="line">    <span class="type">bool</span> indexFlag = <span class="number">0</span>;</span><br><span class="line">    <span class="type">double</span> eigenvalue_prior;</span><br><span class="line">    <span class="type">int</span> iter_counter = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(error &gt; <span class="built_in">pow</span>(<span class="number">10</span>, <span class="number">-5</span>)  indexFlag == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Iteration #%d:\n&quot;</span>, ++iter_counter);</span><br><span class="line">        <span class="built_in">LowerSolve</span>(n, L, x_prior, temp); <span class="comment">// Now temp is the temp vector to solve equation.</span></span><br><span class="line">        <span class="built_in">UpperSolve</span>(n, U, temp, x);       <span class="comment">//</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;x[%d] =\n&quot;</span>, iter_counter);</span><br><span class="line">        <span class="built_in">PrintVector</span>(n, x);</span><br><span class="line">        Max = x[<span class="number">0</span>]; x_idx = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++)  <span class="comment">// Find max entry in x(not normalized)</span></span><br><span class="line">            <span class="keyword">if</span>(x[i] &gt; Max)&#123;</span><br><span class="line">                Max = x[i];</span><br><span class="line">                x_idx = i;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="comment">//error = abs(Max - Max_prior);</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Error = %lf.\n&quot;</span>, error);</span><br><span class="line">        <span class="keyword">if</span>(x_idx == x_prior_idx)</span><br><span class="line">            indexFlag = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span>    indexFlag = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)              <span class="comment">//* Update data (x -&gt; x_prior)</span></span><br><span class="line">            x_prior[i] = x[i] / Max;            <span class="comment">//*</span></span><br><span class="line">        Max_prior = Max; x_prior_idx = x_idx;   <span class="comment">//*</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Y[%d] =\n&quot;</span>, iter_counter);<span class="comment">//*</span></span><br><span class="line">        <span class="built_in">PrintVector</span>(n, x_prior);</span><br><span class="line"></span><br><span class="line">        eigenvalue_prior = eigenvalue;</span><br><span class="line">        eigenvalue = <span class="number">1</span> / x[x_idx];</span><br><span class="line">        error = <span class="built_in">abs</span>(eigenvalue - eigenvalue_prior);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Estimated EV = %lf\n&quot;</span>, eigenvalue);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        eigenvector[i] = x_prior[i];</span><br><span class="line">    <span class="keyword">return</span> SUCCESS;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    Matrix A = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">ReadFromInput</span>(n, A, <span class="number">1</span>);</span><br><span class="line">    <span class="type">double</span> EValue;</span><br><span class="line">    Vector EVector = <span class="keyword">new</span> <span class="type">double</span>[n];</span><br><span class="line">    <span class="built_in">IPM_Iteration</span>(n, A, EValue, EVector);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;EigenValue = %lf\n&quot;</span>, EValue);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;EigenVector:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">PrintVector</span>(n, EVector);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Result-1"><a href="#Result-1" class="headerlink" title="Result"></a>Result</h3><h4 id="Example-1-1"><a href="#Example-1-1" class="headerlink" title="Example 1"></a>Example 1</h4><p>Raw Output:</p><p>$ .&#x2F;Inverse-Power-Method.out<br>Matrix A:<br>0.11110.12500.14290.16670.2000<br>0.12500.14290.16670.20000.2500<br>0.14290.16670.20000.25000.3333<br>0.16670.20000.25000.33330.5000<br>0.20000.25000.33330.50001.0000</p><p>Iteration #1:<br>x[1] &#x3D;<br>629.9978-1119.9957629.9972-119.99945.0000<br>Error &#x3D; 10.000000.<br>Y[1] &#x3D;<br>1.0000-1.77781.0000-0.19050.0079<br>Estimated EV &#x3D; 0.001587</p><p>Iteration #2:<br>x[2] &#x3D;<br>260004.0147-529506.9293348753.7531-80203.06204226.2173<br>Error &#x3D; 0.001587.<br>Y[2] &#x3D;<br>0.7455-1.51831.0000-0.23000.0121<br>Estimated EV &#x3D; 0.000003</p><p>Iteration #3:<br>x[3] &#x3D;<br>226394.6541-461628.5632304559.4849-70212.33383714.5607<br>Error &#x3D; 0.001584.<br>Y[3] &#x3D;<br>0.7434-1.51571.0000-0.23050.0122<br>Estimated EV &#x3D; 0.000003<br>EigenValue &#x3D; 0.000003<br>EigenVector:<br>0.7434-1.51571.0000-0.23050.0122</p><p>Iteration # i</p><p>$X^{(i)}$</p><p>$Y^{(i)}$</p><p>$\lambda$</p><p>1</p><p>629.9978 -1119.9957 629.9972 -119.9994 5.0000</p><p>1.0000 -1.7778 1.0000 -0.1905 0.0079</p><p>0.001587</p><p>2</p><p>260004.0147 -529506.9293 348753.7531 -80203.0620 4226.2173</p><p>0.7455 -1.5183 1.0000 -0.2300 0.0121</p><p>0.000003</p><p>3</p><p>226394.6541 -461628.5632 304559.4849 -70212.3338 3714.5607</p><p>0.7434 -1.5157 1.0000 -0.2305 0.0122</p><p>0.000003</p><p>Iteration Process</p><h4 id="Example-2-1"><a href="#Example-2-1" class="headerlink" title="Example 2"></a>Example 2</h4><p>Raw Output:</p><p>$ .&#x2F;Inverse-Power-Method.out<br>Matrix A:<br>4.0000-1.00001.00003.0000<br>16.0000-2.0000-2.00005.0000<br>16.0000-3.0000-1.00007.0000<br>6.0000-4.00002.00009.0000</p><p>Iteration #1:<br>x[1] &#x3D;<br>0.00002.0000-0.00001.0000<br>Error &#x3D; 10.000000.<br>Y[1] &#x3D;<br>0.00001.0000-0.00000.5000<br>Estimated EV &#x3D; 0.500000</p><p>Iteration #2:<br>x[2] &#x3D;<br>-0.62505.6250-2.37503.5000<br>Error &#x3D; 0.500000.<br>Y[2] &#x3D;<br>-0.11111.0000-0.42220.6222<br>Estimated EV &#x3D; 0.177778</p><p>Iteration #3:<br>x[3] &#x3D;<br>-0.93338.0778-3.43335.0444<br>Error &#x3D; 0.322222.<br>Y[3] &#x3D;<br>-0.11551.0000-0.42500.6245<br>Estimated EV &#x3D; 0.123796</p><p>Iteration #4:<br>x[4] &#x3D;<br>-0.93628.0899-3.44385.0543<br>Error &#x3D; 0.053981.<br>Y[4] &#x3D;<br>-0.11571.0000-0.42570.6248<br>Estimated EV &#x3D; 0.123611</p><p>Iteration #5:<br>x[5] &#x3D;<br>-0.93678.0938-3.44555.0568<br>Error &#x3D; 0.000186.<br>Y[5] &#x3D;<br>-0.11571.0000-0.42570.6248<br>Estimated EV &#x3D; 0.123551</p><p>Iteration #6:<br>x[6] &#x3D;<br>-0.93678.0939-3.44555.0568<br>Error &#x3D; 0.000059.<br>Y[6] &#x3D;<br>-0.11571.0000-0.42570.6248<br>Estimated EV &#x3D; 0.123551<br>EigenValue &#x3D; 0.123551<br>EigenVector:<br>-0.11571.0000-0.42570.6248</p><p>Iteration # i</p><p>X^{(i)}</p><p>Y^{(i)}</p><p>$\lambda$</p><p>1</p><p>0.0000 2.0000 -0.0000 1.0000</p><p>0.0000 1.0000 -0.0000 0.5000</p><p>0.500000</p><p>2</p><p>-0.6250 5.6250 -2.3750 3.5000</p><p>-0.1111 1.0000 -0.4222 0.6222</p><p>0.177778</p><p>3</p><p>-0.9333 8.0778 -3.4333 5.0444</p><p>-0.1155 1.0000 -0.4250 0.6245</p><p>0.123796</p><p>4</p><p>-0.9362 8.0899 -3.4438 5.0543</p><p>-0.1157 1.0000 -0.4257 0.6248</p><p>0.123611</p><p>5</p><p>-0.9367 8.0938 -3.4455 5.0568</p><p>-0.1157 1.0000 -0.4257 0.6248</p><p>0.123551</p><p>6</p><p>-0.9367 8.0939 -3.4455 5.0568</p><p>-0.1157 1.0000 -0.4257 0.6248</p><p>0.123551</p><p>Iteration Process</p><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><p>The smaller the minimal eigenvalue is, the faster the iteration converges. In example 1(iterated 3 times), eigenvalue is 0.000003, much smaller than 0.123 in ex2(iterated 6 times).</p><h2 id="Lab4-Jacobi-Method-to-Solve-Eigenvalue"><a href="#Lab4-Jacobi-Method-to-Solve-Eigenvalue" class="headerlink" title="Lab4 - Jacobi Method to Solve Eigenvalue"></a>Lab4 - Jacobi Method to Solve Eigenvalue</h2><h3 id="Description-2"><a href="#Description-2" class="headerlink" title="Description"></a>Description</h3><p>Solve all eigenvalues of a given matrix, using Jacobi method.</p><h3 id="Code-1"><a href="#Code-1" class="headerlink" title="Code"></a>Code</h3><p>Note: Lab4 referenced the code through “<em>Lab2.h</em>“, it’s code is <a href="#Lab2">here</a>.</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * =====================================================================================</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       Filename:  JacobiMethod.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *    Description:  Solve n Eigenvalues of a given matrix.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *        Version:  1.0</span></span><br><span class="line"><span class="comment"> *        Created:  04/25/2022 14:41:30 UTC</span></span><br><span class="line"><span class="comment"> *       Revision:  none</span></span><br><span class="line"><span class="comment"> *       Compiler:  gcc</span></span><br><span class="line"><span class="comment"> *         Author:  CuSO4_Deposit</span></span><br><span class="line"><span class="comment"> * =====================================================================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;..\Lab2\Lab2.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SUCCESS 0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FAILURE 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INPUTPATH <span class="string">&quot;./InputData.txt&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">GenerateRandomMatrix</span><span class="params">(<span class="type">int</span> n, Matrix A)</span></span>&#123;</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">     * ===  FUNCTION  ======================================================================</span></span><br><span class="line"><span class="comment">     *         Name:  GenerateRandomMatrix</span></span><br><span class="line"><span class="comment">     *  Description:  Generate a random symmetry matrix, where each entry ranges from 0 to 1.</span></span><br><span class="line"><span class="comment">     * =====================================================================================</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="built_in">srand</span>(<span class="built_in">time</span>(<span class="number">0</span>));</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = i; j &lt; n; j++)&#123;</span><br><span class="line">            A[i][j] = <span class="built_in">rand</span>()%<span class="number">10001</span> / <span class="number">10000.0</span>;</span><br><span class="line">            A[j][i] = A[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">            </span><br><span class="line">    <span class="keyword">return</span> SUCCESS;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">CheckSymmetry</span><span class="params">(<span class="type">int</span> n, Matrix A)</span></span>&#123;</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">     * ===  FUNCTION  ======================================================================</span></span><br><span class="line"><span class="comment">     *         Name:  CheckSymmetry</span></span><br><span class="line"><span class="comment">     *  Description:  if A is symmetry, return 1, otherwise return 0.</span></span><br><span class="line"><span class="comment">     * =====================================================================================</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = i + <span class="number">1</span>; j &lt; n; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(A[i][j] != A[j][i])</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">NonDiagSquareSum</span><span class="params">(<span class="type">int</span> n, Matrix A)</span></span>&#123;</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">     * ===  FUNCTION  ======================================================================</span></span><br><span class="line"><span class="comment">     *         Name:  NonDiagSum</span></span><br><span class="line"><span class="comment">     *  Description:  return the sum of non-diagonal entries&#x27; square of A. </span></span><br><span class="line"><span class="comment">     * =====================================================================================</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">double</span> Sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = i + <span class="number">1</span>; j &lt; n; j++)</span><br><span class="line">            Sum += A[i][j] * A[i][j];</span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span> * Sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">JacobiMethod</span><span class="params">(<span class="type">int</span> n, Matrix A, Vector EigenvalueVector, <span class="type">double</span> ErrorController)</span></span>&#123;</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">     * ===  FUNCTION  ======================================================================</span></span><br><span class="line"><span class="comment">     *         Name:  JacobiMethod</span></span><br><span class="line"><span class="comment">     *  Description:  Output the n eigenvalues via &lt;EigenvalueVector&gt;</span></span><br><span class="line"><span class="comment">     * =====================================================================================</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">if</span>(!<span class="built_in">CheckSymmetry</span>(n, A))&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;The input matrix is not symmetry.\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> FAILURE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> MaxEntry_i = <span class="number">0</span>; <span class="type">int</span> MaxEntry_j = <span class="number">0</span>;</span><br><span class="line">    <span class="type">double</span> MaxEntry = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> LoopCounter = <span class="number">0</span>;</span><br><span class="line">    <span class="type">double</span> s = <span class="number">0</span>; <span class="type">double</span> t = <span class="number">0</span>;</span><br><span class="line">    <span class="type">double</span> t1 = <span class="number">0</span>; <span class="type">double</span> t2 = <span class="number">0</span>;</span><br><span class="line">    <span class="type">double</span> c = <span class="number">0</span>; <span class="type">double</span> d = <span class="number">0</span>;</span><br><span class="line">    <span class="type">double</span> api = <span class="number">0</span>; <span class="type">double</span> aqi = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">NonDiagSquareSum</span>(n, A) &gt; ErrorController)&#123;</span><br><span class="line">        MaxEntry = <span class="built_in">abs</span>(A[<span class="number">0</span>][<span class="number">1</span>]); MaxEntry_i = <span class="number">0</span>; MaxEntry_j = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(j == i)  <span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">abs</span>(A[i][j]) &gt; MaxEntry)&#123;</span><br><span class="line">                    MaxEntry_i = i;</span><br><span class="line">                    MaxEntry_j = j;</span><br><span class="line">                    MaxEntry = <span class="built_in">abs</span>(A[i][j]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        s = (A[MaxEntry_j][MaxEntry_j] - A[MaxEntry_i][MaxEntry_i]) / (<span class="number">2</span> * A[MaxEntry_i][MaxEntry_j]);</span><br><span class="line"></span><br><span class="line">        t1 = -s - <span class="built_in">sqrt</span>(s * s + <span class="number">1</span>);  t2 = -t1 - <span class="number">2</span> * s;</span><br><span class="line">        t = <span class="built_in">abs</span>(t1) &gt; <span class="built_in">abs</span>(t2) ? t2 : t1;</span><br><span class="line">        <span class="keyword">if</span>(s == <span class="number">0</span>)  t = <span class="number">1</span>;</span><br><span class="line">        c = <span class="number">1</span> / <span class="built_in">sqrt</span>(<span class="number">1</span> + t * t); d = t * c;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i == MaxEntry_i  i == MaxEntry_j)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            api = A[i][MaxEntry_i]; aqi = A[i][MaxEntry_j];</span><br><span class="line">            A[i][MaxEntry_i] = c * api - d * aqi; </span><br><span class="line">            A[MaxEntry_i][i] = A[i][MaxEntry_i];</span><br><span class="line">            A[i][MaxEntry_j] = c * aqi + d * api;</span><br><span class="line">            A[MaxEntry_j][i] = A[i][MaxEntry_j];</span><br><span class="line">        &#125;</span><br><span class="line">        A[MaxEntry_i][MaxEntry_i] -= t * A[MaxEntry_i][MaxEntry_j];</span><br><span class="line">        A[MaxEntry_j][MaxEntry_j] += t * A[MaxEntry_i][MaxEntry_j];</span><br><span class="line">        A[MaxEntry_i][MaxEntry_j] = <span class="number">0</span>;</span><br><span class="line">        A[MaxEntry_j][MaxEntry_i] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Iteration #%d\n&quot;</span>, ++LoopCounter);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Non-Diagonal Entries&#x27; Square Sum = %lf.\n&quot;</span>, <span class="built_in">NonDiagSquareSum</span>(n, A));</span><br><span class="line">        <span class="built_in">PrintMatrix</span>(n, A);</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        EigenvalueVector[i] = A[i][i];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Eigenvalues:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">PrintVector</span>(n, EigenvalueVector);</span><br><span class="line">    <span class="keyword">return</span> SUCCESS;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    Matrix A = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">ReadFromInput</span>(n, A, <span class="number">1</span>);</span><br><span class="line"><span class="comment">//    GenerateRandomMatrix(n, A);</span></span><br><span class="line">    <span class="built_in">PrintMatrix</span>(n, A);</span><br><span class="line">    Vector EigenvalueVector = <span class="keyword">new</span> <span class="type">double</span>[n];</span><br><span class="line">    <span class="built_in">JacobiMethod</span>(n, A, EigenvalueVector, <span class="number">0.000001</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Result-2"><a href="#Result-2" class="headerlink" title="Result"></a>Result</h3><h4 id="Example-1-2"><a href="#Example-1-2" class="headerlink" title="Example 1"></a>Example 1</h4><p>Raw Output:</p><p>$ .&#x2F;JacobiMethod.o<br>Matrix A:<br>1.0000    2.0000    3.0000    4.0000<br>2.0000    5.0000    6.0000    7.0000<br>3.0000    6.0000    8.0000    9.0000<br>4.0000    7.0000    9.0000    10.0000    </p><p>Iteration #1<br>Non-Diagonal Entries’ Square Sum &#x3D; 228.000000.<br>1.0000    2.0000    -0.4323    4.9813<br>2.0000    5.0000    -0.1977    9.2174<br>-0.4323    -0.1977    -0.0554    0.0000<br>4.9813    9.2174    0.0000    18.0554<br>Iteration #2<br>Non-Diagonal Entries’ Square Sum &#x3D; 58.078156.<br>1.0000    -0.5118    -0.4323    5.3433<br>-0.5118    0.2329    -0.1756    0.0000<br>-0.4323    -0.1756    -0.0554    -0.0908<br>5.3433    0.0000    -0.0908    22.8225<br>Iteration #3<br>Non-Diagonal Entries’ Square Sum &#x3D; 0.975846.<br>-0.2381    -0.4986    -0.4006    0.0000<br>-0.4986    0.2329    -0.1756    -0.1155<br>-0.4006    -0.1756    -0.0554    -0.1861<br>0.0000    -0.1155    -0.1861    24.0606<br>Iteration #4<br>Non-Diagonal Entries’ Square Sum &#x3D; 0.478622.<br>-0.5540    0.0000    -0.4324    -0.0618<br>0.0000    0.5488    0.0661    -0.0976<br>-0.4324    0.0661    -0.0554    -0.1861<br>-0.0618    -0.0976    -0.1861    24.0606<br>Iteration #5<br>Non-Diagonal Entries’ Square Sum &#x3D; 0.104665.<br>-0.8038    0.0331    0.0000    -0.1466<br>0.0331    0.5488    0.0572    -0.0976<br>0.0000    0.0572    0.1944    -0.1302<br>-0.1466    -0.0976    -0.1302    24.0606<br>Iteration #6<br>Non-Diagonal Entries’ Square Sum &#x3D; 0.061674.<br>-0.8047    0.0325    -0.0008    0.0000<br>0.0325    0.5488    0.0572    -0.0978<br>-0.0008    0.0572    0.1944    -0.1302<br>0.0000    -0.0978    -0.1302    24.0614<br>Iteration #7<br>Non-Diagonal Entries’ Square Sum &#x3D; 0.027790.<br>-0.8047    0.0325    -0.0008    0.0000<br>0.0325    0.5488    0.0567    -0.0981<br>-0.0008    0.0567    0.1937    0.0000<br>0.0000    -0.0981    0.0000    24.0621<br>Iteration #8<br>Non-Diagonal Entries’ Square Sum &#x3D; 0.008545.<br>-0.8047    0.0325    -0.0008    -0.0001<br>0.0325    0.5484    0.0567    0.0000<br>-0.0008    0.0567    0.1937    -0.0002<br>-0.0001    0.0000    -0.0002    24.0625<br>Iteration #9<br>Non-Diagonal Entries’ Square Sum &#x3D; 0.002113.<br>-0.8047    0.0320    -0.0058    -0.0001<br>0.0320    0.5573    0.0000    -0.0000<br>-0.0058    0.0000    0.1849    -0.0002<br>-0.0001    -0.0000    -0.0002    24.0625<br>Iteration #10<br>Non-Diagonal Entries’ Square Sum &#x3D; 0.000067.<br>-0.8055    0.0000    -0.0058    -0.0001<br>0.0000    0.5580    -0.0001    -0.0000<br>-0.0058    -0.0001    0.1849    -0.0002<br>-0.0001    -0.0000    -0.0002    24.0625<br>Iteration #11<br>Non-Diagonal Entries’ Square Sum &#x3D; 0.000000.<br>-0.8055    -0.0000    0.0000    -0.0001<br>-0.0000    0.5580    -0.0001    -0.0000<br>0.0000    -0.0001    0.1849    -0.0002<br>-0.0001    -0.0000    -0.0002    24.0625<br>Eigenvalues:<br>-0.8055    0.5580    0.1849    24.0625    </p><p>分析：</p><p>1. The sum of non-diagonal entries’ square shows a downward tendency。</p><p>2. Is the output correct？</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> (* Mathicscript: 4.0.0, Mathics 4.0.0 *) </span><br><span class="line">In[1]:= A = &#123;&#123;1 - x,2,3,4&#125;,&#123;2,5 - x,6,7&#125;,&#123;3,6,8 - x,9&#125;,&#123;4,7,9,10 - x&#125;&#125; Out[1]:= &#123;&#123;1 - x, 2, 3, 4&#125;, &#123;2, 5 - x, 6, 7&#125;, &#123;3, 6, 8 - x, 9&#125;, &#123;4, 7, 9, 10 - x&#125;&#125; </span><br><span class="line">In[2]:= Solve[Det[A] == 0, x] </span><br><span class="line">Out[2]:= &#123;&#123;x -&gt; 6 + Sqrt[143 / 2 + 29 Sqrt[6]] + 5 Sqrt[6] / 2&#125;, &#123;x -&gt; 6 - 5 Sqrt[6] / 2 - Sqrt[143 / 2 - 29 Sqrt[6]]&#125;, &#123;x -&gt; 6 + Sqrt[143 / 2 - 29 Sqrt[6]] - 5 Sqrt[6] / 2&#125;, &#123;x -&gt; 6 - Sqrt[143 / 2 + 29 Sqrt[6]] + 5 Sqrt[6] / 2&#125;&#125; </span><br><span class="line">In[3]:= Solve[Det[A] == 0, x]//N </span><br><span class="line">Out[3]:= &#123;&#123;x -&gt; 24.0625&#125;, &#123;x -&gt; -0.805485&#125;, &#123;x -&gt; 0.558036&#125;, &#123;x -&gt; 0.184914&#125;&#125;</span><br></pre></td></tr></table></figure><p>So the program gives a correct output.</p><h2 id="Lab-5-Cubic-Spline-Interpolation"><a href="#Lab-5-Cubic-Spline-Interpolation" class="headerlink" title="Lab 5 - Cubic Spline Interpolation"></a>Lab 5 - Cubic Spline Interpolation</h2><h3 id="Description-3"><a href="#Description-3" class="headerlink" title="Description"></a>Description</h3><p>Given function(or a point set), do a cubic spline interpolation. Require: at least 20 interpolation points, implement 2 boundary conditions and 3 interpolation method.</p><h3 id="Code-2"><a href="#Code-2" class="headerlink" title="Code"></a>Code</h3><h4 id="Directory-Tree"><a href="#Directory-Tree" class="headerlink" title="Directory Tree"></a>Directory Tree</h4><p>.<br>├── CubicSpline.md<br>├── Figure<br>└── src<br>    ├── Arguments.txt<br>    ├── CubicSpline.py<br>    ├── FunctionSet.py<br>    ├── Lab5.cpp<br>    ├── Lab5.o<br>    └── __pycache__<br>        └── FunctionSet.cpython-38.pyc</p><h4 id="C-code"><a href="#C-code" class="headerlink" title="C code"></a>C code</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * =====================================================================================</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       Filename:  Lab5.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *    Description:  </span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *        Version:  1.0</span></span><br><span class="line"><span class="comment"> *        Created:  05/11/2022 03:42:39 PM</span></span><br><span class="line"><span class="comment"> *       Revision:  none</span></span><br><span class="line"><span class="comment"> *       Compiler:  gcc</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *         Author:  CuSO4_Deposit</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * =====================================================================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SUCCESS 0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FAILURE 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INPUTPATH <span class="string">&quot;./InputData.txt&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> Status;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">double</span>* Vector;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">double</span>** Matrix;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">double</span> Function;</span><br><span class="line"></span><br><span class="line"><span class="function">Function <span class="title">f</span><span class="params">(<span class="type">double</span> x)</span></span>&#123;</span><br><span class="line">    <span class="type">double</span> e = <span class="number">2.718281828</span>; </span><br><span class="line">    <span class="keyword">return</span> (x + <span class="built_in">sin</span>(<span class="number">2</span> * x)) / (<span class="number">1</span> + <span class="built_in">pow</span>(e, -x));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">PrintMatrix</span><span class="params">(<span class="type">int</span> n, Matrix A)</span></span>&#123;</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">     * ===  FUNCTION  ======================================================================</span></span><br><span class="line"><span class="comment">     *         Name:  PrintMatrix</span></span><br><span class="line"><span class="comment">     *  Description:  Print the Matrix A to the terminal. n is the Dimension of A. </span></span><br><span class="line"><span class="comment">     * =====================================================================================</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%.4lf\t&quot;</span>, A[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> SUCCESS;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">PrintVector</span><span class="params">(<span class="type">int</span> n, Vector v)</span></span>&#123;</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">     * ===  FUNCTION  ======================================================================</span></span><br><span class="line"><span class="comment">     *         Name:  PrintVector</span></span><br><span class="line"><span class="comment">     *  Description:  Print the Vector v to the terminal(in row form). n is the Dimension of v. </span></span><br><span class="line"><span class="comment">     * =====================================================================================</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.4lf\t&quot;</span>, v[i]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> SUCCESS;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">ThomasSolve</span><span class="params">(<span class="type">int</span> n, Matrix A, Vector x, Vector b)</span></span>&#123;</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">     * ===  FUNCTION  ======================================================================</span></span><br><span class="line"><span class="comment">     *         Name:  ThomasSolve</span></span><br><span class="line"><span class="comment">     *  Description:  Solve Equation using Thomas Algorithm. </span></span><br><span class="line"><span class="comment">     * =====================================================================================</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(j &gt;= i - <span class="number">1</span> &amp;&amp; j &lt;= i + <span class="number">1</span> )</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(A[i][j] != <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;Matrix is invalid.\n A[%d][%d] = %lf.\n&quot;</span>, i, j, A[i][j]);</span><br><span class="line">                <span class="keyword">return</span> FAILURE;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    Vector u = <span class="keyword">new</span> <span class="type">double</span>[n];</span><br><span class="line">    Vector v = <span class="keyword">new</span> <span class="type">double</span>[n];</span><br><span class="line">    Vector y = <span class="keyword">new</span> <span class="type">double</span>[n];</span><br><span class="line">    u[<span class="number">0</span>] = A[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line">    v[<span class="number">0</span>] = A[<span class="number">0</span>][<span class="number">1</span>] / u[<span class="number">0</span>];</span><br><span class="line">    y[<span class="number">0</span>] = b[<span class="number">0</span>] / u[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> k = <span class="number">1</span>; k &lt; n - <span class="number">1</span>; k++)&#123;</span><br><span class="line">        u[k] = A[k][k] - A[k][k - <span class="number">1</span>] * v[k - <span class="number">1</span>];</span><br><span class="line">        v[k] = A[k][k + <span class="number">1</span>] / u[k];</span><br><span class="line">        y[k] = (b[k] - A[k][k - <span class="number">1</span>] * y[k - <span class="number">1</span>]) / u[k];</span><br><span class="line">    &#125;</span><br><span class="line">    u[n - <span class="number">1</span>] = A[n - <span class="number">1</span>][n - <span class="number">1</span>] - A[n - <span class="number">1</span>][n - <span class="number">2</span>] * v[n - <span class="number">2</span>];</span><br><span class="line">    v[n - <span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">    y[n - <span class="number">1</span>] = (b[n - <span class="number">1</span>] - A[n - <span class="number">1</span>][n - <span class="number">2</span>] * y[n - <span class="number">2</span>]) / u[n - <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">    x[n - <span class="number">1</span>] = y[n - <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> k = n - <span class="number">2</span>; k &gt; <span class="number">-1</span>; k--)&#123;</span><br><span class="line">        x[k] = y[k] - v[k] * x[k + <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> SUCCESS;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">Sample</span><span class="params">(<span class="type">int</span> n, <span class="type">double</span> a, <span class="type">double</span> b, Vector SamplePoints, <span class="type">int</span> method)</span></span>&#123;</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">     * ===  FUNCTION  ======================================================================</span></span><br><span class="line"><span class="comment">     *         Name:  Sample</span></span><br><span class="line"><span class="comment">     *  Description:  return a vector of SamplePoints. </span></span><br><span class="line"><span class="comment">     * =====================================================================================</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">switch</span>(method)&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:&#123;</span><br><span class="line">            <span class="type">double</span> h = (b - a) / n;</span><br><span class="line">            SamplePoints[<span class="number">0</span>] = a;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt; n + <span class="number">1</span>; i++)</span><br><span class="line">                SamplePoints[i] = SamplePoints[i - <span class="number">1</span>] + h;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;SamplePoints:\n&quot;</span>);</span><br><span class="line">            <span class="built_in">PrintVector</span>(n + <span class="number">1</span>, SamplePoints);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:&#123;</span><br><span class="line">            SamplePoints[<span class="number">0</span>] = a;</span><br><span class="line">            SamplePoints[n] = b;</span><br><span class="line">            <span class="type">double</span> randomNumber;</span><br><span class="line">            <span class="type">bool</span> flag_moved;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++)&#123;</span><br><span class="line">                randomNumber = a + (b - a) * (<span class="built_in">rand</span>() / (RAND_MAX + <span class="number">1.0</span>));</span><br><span class="line">                flag_moved = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; i; j++)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(SamplePoints[j] &lt; randomNumber)</span><br><span class="line">                        <span class="keyword">continue</span>;</span><br><span class="line">                    flag_moved = <span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="type">int</span> k = i - <span class="number">1</span>; k &gt;= j; k--)&#123;</span><br><span class="line">                        SamplePoints[k + <span class="number">1</span>] = SamplePoints[k];</span><br><span class="line">                    &#125;</span><br><span class="line">                    SamplePoints[j] = randomNumber;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(flag_moved == <span class="number">0</span>)</span><br><span class="line">                    SamplePoints[i] = randomNumber;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:&#123;</span><br><span class="line">            SamplePoints[<span class="number">0</span>] = a;</span><br><span class="line">            SamplePoints[n] = b;</span><br><span class="line">            <span class="type">double</span> Mid = (a + b) / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(n % <span class="number">2</span>)   <span class="comment">// n - 1 is odd</span></span><br><span class="line">                SamplePoints[n / <span class="number">2</span>] = Mid;</span><br><span class="line">            <span class="type">double</span> randomNumber;</span><br><span class="line">            <span class="type">bool</span> flag_moved;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt; n / <span class="number">2.0</span>; i++)&#123;</span><br><span class="line">                randomNumber = a + (Mid - a) * (<span class="built_in">rand</span>() / (RAND_MAX + <span class="number">1.0</span>));</span><br><span class="line">                flag_moved = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; i; j++)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(SamplePoints[j] &lt; randomNumber)</span><br><span class="line">                        <span class="keyword">continue</span>;</span><br><span class="line">                    flag_moved = <span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="type">int</span> k = i - <span class="number">1</span>; k &gt;= j; k--)&#123;</span><br><span class="line">                        SamplePoints[k + <span class="number">1</span>] = SamplePoints[k];</span><br><span class="line">                    &#125;</span><br><span class="line">                    SamplePoints[j] = randomNumber;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(flag_moved == <span class="number">0</span>)</span><br><span class="line">                    SamplePoints[i] = randomNumber;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i = n / <span class="number">2</span> + <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">                SamplePoints[i] = <span class="number">2</span> * Mid - SamplePoints[n - i];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">return</span> FAILURE;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> SUCCESS;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">CubicSpline</span><span class="params">(Function f(<span class="type">double</span>), <span class="type">double</span> a, <span class="type">double</span> b, <span class="type">int</span> n, <span class="type">int</span> Boundary, <span class="type">int</span> SampleMethod)</span></span>&#123;</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">     * ===  FUNCTION  ======================================================================</span></span><br><span class="line"><span class="comment">     *         Name:  CubicSpline</span></span><br><span class="line"><span class="comment">     *  Description:  Use Cubic Spline Method to interpolate function f.</span></span><br><span class="line"><span class="comment">     *    Parameter:  0, ..., n is the number of interpolation points.</span></span><br><span class="line"><span class="comment">     *                  Condition = 0: Natrual Condition</span></span><br><span class="line"><span class="comment">     * =====================================================================================</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    Matrix A = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    ofstream ofs;</span><br><span class="line">    ofs.<span class="built_in">open</span>(<span class="string">&quot;Arguments.txt&quot;</span>, ios::out);</span><br><span class="line">    ofs &lt;&lt; <span class="string">&quot;[&quot;</span> &lt;&lt; n &lt;&lt; <span class="string">&quot;, &quot;</span> &lt;&lt; a &lt;&lt; <span class="string">&quot;, &quot;</span> &lt;&lt; b &lt;&lt; <span class="string">&quot;, &quot;</span> &lt;&lt; Boundary &lt;&lt; <span class="string">&quot;, &quot;</span> &lt;&lt; SampleMethod &lt;&lt; <span class="string">&quot;]\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span>(Boundary)&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:&#123;</span><br><span class="line">            A = <span class="keyword">new</span> Vector[n - <span class="number">1</span>];</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++)&#123;</span><br><span class="line">                A[i] = <span class="keyword">new</span> <span class="type">double</span>[n - <span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; n - <span class="number">1</span>; j++)</span><br><span class="line">            A[i][j] = <span class="number">0</span>;</span><br><span class="line">            Vector SamplePoints = <span class="keyword">new</span> <span class="type">double</span>[n + <span class="number">1</span>];</span><br><span class="line">            <span class="built_in">Sample</span>(n, a, b, SamplePoints, SampleMethod);</span><br><span class="line">            <span class="built_in">PrintVector</span>(n + <span class="number">1</span>, SamplePoints);</span><br><span class="line">            Vector h = <span class="keyword">new</span> <span class="type">double</span>[n];</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">            h[i] = SamplePoints[i + <span class="number">1</span>] - SamplePoints[i];</span><br><span class="line">            Vector d = <span class="keyword">new</span> <span class="type">double</span>[n - <span class="number">1</span>];</span><br><span class="line">            </span><br><span class="line">            A[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">2</span>;</span><br><span class="line">            A[<span class="number">0</span>][<span class="number">1</span>] = h[<span class="number">1</span>] / (h[<span class="number">1</span>] + h[<span class="number">0</span>]);</span><br><span class="line">            d[<span class="number">0</span>] = <span class="number">6</span> * ((<span class="built_in">f</span>(SamplePoints[<span class="number">2</span>]) - <span class="built_in">f</span>(SamplePoints[<span class="number">1</span>])) / h[<span class="number">1</span>] - (<span class="built_in">f</span>(SamplePoints[<span class="number">1</span>]) - <span class="built_in">f</span>(SamplePoints[<span class="number">0</span>])) / h[<span class="number">0</span>]) / (h[<span class="number">1</span>] + h[<span class="number">0</span>]) - <span class="number">0</span>;</span><br><span class="line">            </span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt; n - <span class="number">2</span>; i++)&#123;</span><br><span class="line">                A[i][i] = <span class="number">2</span>;</span><br><span class="line">                A[i][i + <span class="number">1</span>] = h[i + <span class="number">1</span>] / (h[i + <span class="number">1</span>] + h[i]);</span><br><span class="line">                A[i][i - <span class="number">1</span>] = <span class="number">1</span> - A[i][i + <span class="number">1</span>];</span><br><span class="line">                d[i] = <span class="number">6</span> * ((<span class="built_in">f</span>(SamplePoints[i + <span class="number">2</span>]) - <span class="built_in">f</span>(SamplePoints[i + <span class="number">1</span>])) / h[i + <span class="number">1</span>] - (<span class="built_in">f</span>(SamplePoints[i + <span class="number">1</span>]) - <span class="built_in">f</span>(SamplePoints[i + <span class="number">0</span>])) / h[i + <span class="number">0</span>]) / (h[i + <span class="number">1</span>] + h[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            A[n - <span class="number">2</span>][n - <span class="number">2</span>] = <span class="number">2</span>;</span><br><span class="line">            h[n - <span class="number">1</span>] = SamplePoints[n] - SamplePoints[n - <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">            A[n - <span class="number">2</span>][n - <span class="number">3</span>] = <span class="number">1</span> - h[n - <span class="number">1</span>] / (h[n - <span class="number">1</span>] + h[n - <span class="number">2</span>]);</span><br><span class="line">            d[n - <span class="number">2</span>] = <span class="number">6</span> * ((<span class="built_in">f</span>(SamplePoints[n]) - <span class="built_in">f</span>(SamplePoints[n - <span class="number">1</span>])) / h[n - <span class="number">1</span>] - (<span class="built_in">f</span>(SamplePoints[n - <span class="number">1</span>]) - <span class="built_in">f</span>(SamplePoints[n - <span class="number">2</span>])) / h[n - <span class="number">2</span>]) / (h[n - <span class="number">1</span>] + h[n - <span class="number">2</span>]);</span><br><span class="line">Vector M = <span class="keyword">new</span> <span class="type">double</span>[n - <span class="number">1</span>];</span><br><span class="line">            <span class="built_in">ThomasSolve</span>(n - <span class="number">1</span>, A, M, d);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;The Vector [x_0, ..., x_%d] is:\n[&quot;</span>, n);</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%.4lf, &quot;</span>, SamplePoints[i]);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%.4lf]\n&quot;</span>, SamplePoints[n]);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;The Vector [h_0, ..., h_%d] is:\n[&quot;</span>, n - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%.4lf, &quot;</span>, h[i]);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%.4lf]\n&quot;</span>, h[n - <span class="number">1</span>]);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;The Vector [M_0, ..., M_%d] is:\n[%.4lf, &quot;</span>, n, <span class="number">0.0</span>);</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%.4lf, &quot;</span>, M[i]);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%.4lf]\n&quot;</span>, <span class="number">0.0</span>);</span><br><span class="line"></span><br><span class="line">            ofs &lt;&lt; <span class="string">&quot;[&quot;</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">                ofs &lt;&lt; SamplePoints[i] &lt;&lt; <span class="string">&quot;, &quot;</span>;</span><br><span class="line">            ofs &lt;&lt; SamplePoints[n] &lt;&lt; <span class="string">&quot;]\n&quot;</span>;</span><br><span class="line">            ofs &lt;&lt; <span class="string">&quot;[&quot;</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++)</span><br><span class="line">                ofs &lt;&lt; h[i] &lt;&lt; <span class="string">&quot;, &quot;</span>;</span><br><span class="line">            ofs &lt;&lt; h[n - <span class="number">1</span>] &lt;&lt; <span class="string">&quot;]\n&quot;</span>;</span><br><span class="line">            ofs &lt;&lt; <span class="string">&quot;[0.0000, &quot;</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++)</span><br><span class="line">                ofs &lt;&lt; M[i] &lt;&lt; <span class="string">&quot;, &quot;</span>;</span><br><span class="line">            ofs &lt;&lt; <span class="string">&quot;0.0000]\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:&#123;</span><br><span class="line">            <span class="type">double</span> m0, mn;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Please input f&#x27;(x_0), f&#x27;(x_n), seperated by space:\n&quot;</span>);</span><br><span class="line">            cin &gt;&gt; m0 &gt;&gt; mn;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            A = <span class="keyword">new</span> Vector[n + <span class="number">1</span>];</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n + <span class="number">1</span>; i++)&#123;</span><br><span class="line">                A[i] = <span class="keyword">new</span> <span class="type">double</span>[n + <span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n + <span class="number">1</span>; i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; n + <span class="number">1</span>; j++)</span><br><span class="line">            A[i][j] = <span class="number">0</span>;</span><br><span class="line">            Vector SamplePoints = <span class="keyword">new</span> <span class="type">double</span>[n + <span class="number">1</span>];</span><br><span class="line">            <span class="built_in">Sample</span>(n, a, b, SamplePoints, SampleMethod);</span><br><span class="line">            Vector h = <span class="keyword">new</span> <span class="type">double</span>[n];</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">            h[i] = SamplePoints[i + <span class="number">1</span>] - SamplePoints[i];</span><br><span class="line">            Vector d = <span class="keyword">new</span> <span class="type">double</span>[n + <span class="number">1</span>];</span><br><span class="line">            </span><br><span class="line">            A[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">2</span>;</span><br><span class="line">            A[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">            d[<span class="number">0</span>] = <span class="number">6</span> * (((<span class="built_in">f</span>(SamplePoints[<span class="number">1</span>]) - <span class="built_in">f</span>(SamplePoints[<span class="number">0</span>])) / h[<span class="number">0</span>]) - m0) / h[<span class="number">0</span>];</span><br><span class="line">            </span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++)&#123;</span><br><span class="line">                A[i][i] = <span class="number">2</span>;</span><br><span class="line">                A[i][i + <span class="number">1</span>] = h[i] / (h[i] + h[i - <span class="number">1</span>]);</span><br><span class="line">                A[i][i - <span class="number">1</span>] = <span class="number">1</span> - A[i][i + <span class="number">1</span>];</span><br><span class="line">                d[i] = <span class="number">6</span> * ((<span class="built_in">f</span>(SamplePoints[i + <span class="number">1</span>]) - <span class="built_in">f</span>(SamplePoints[i])) / h[i] - (<span class="built_in">f</span>(SamplePoints[i]) - <span class="built_in">f</span>(SamplePoints[i - <span class="number">1</span>])) / h[i - <span class="number">1</span>]) / (h[i - <span class="number">1</span>] + h[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            A[n][n] = <span class="number">2</span>;</span><br><span class="line">            A[n][n - <span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">            d[n] = <span class="number">6</span> * (mn - (<span class="built_in">f</span>(SamplePoints[n]) - <span class="built_in">f</span>(SamplePoints[n - <span class="number">1</span>])) / h[n - <span class="number">1</span>]) / h[n - <span class="number">1</span>];</span><br><span class="line">Vector M = <span class="keyword">new</span> <span class="type">double</span>[n + <span class="number">1</span>];</span><br><span class="line">            <span class="built_in">ThomasSolve</span>(n + <span class="number">1</span>, A, M, d);</span><br><span class="line"></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;The Vector [x_0, ..., x_%d] is:\n[&quot;</span>, n);</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%.4lf, &quot;</span>, SamplePoints[i]);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%.4lf]\n&quot;</span>, SamplePoints[n]);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;The Vector [h_0, ..., h_%d] is:\n[&quot;</span>, n - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%.4lf, &quot;</span>, h[i]);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%.4lf]\n&quot;</span>, h[n - <span class="number">1</span>]);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;The Vector [M_0, ..., M_%d] is:\n[&quot;</span>, n);</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%.4lf, &quot;</span>, M[i]);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%.4lf]\n&quot;</span>, M[n]);</span><br><span class="line"></span><br><span class="line">            ofs &lt;&lt; <span class="string">&quot;[&quot;</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">                ofs &lt;&lt; SamplePoints[i] &lt;&lt; <span class="string">&quot;, &quot;</span>;</span><br><span class="line">            ofs &lt;&lt; SamplePoints[n] &lt;&lt; <span class="string">&quot;]\n&quot;</span>;</span><br><span class="line">            ofs &lt;&lt; <span class="string">&quot;[&quot;</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++)</span><br><span class="line">                ofs &lt;&lt; h[i] &lt;&lt; <span class="string">&quot;, &quot;</span>;</span><br><span class="line">            ofs &lt;&lt; h[n - <span class="number">1</span>] &lt;&lt; <span class="string">&quot;]\n&quot;</span>;</span><br><span class="line">            ofs &lt;&lt; <span class="string">&quot;[&quot;</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">                ofs &lt;&lt; M[i] &lt;&lt; <span class="string">&quot;, &quot;</span>;</span><br><span class="line">            ofs &lt;&lt; M[n] &lt;&lt; <span class="string">&quot;]\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> SUCCESS;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">srand</span>(<span class="built_in">time</span>(<span class="number">0</span>));</span><br><span class="line">    Matrix A = <span class="literal">NULL</span>;</span><br><span class="line">    Vector b = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="built_in">CubicSpline</span>(f, <span class="number">-2</span>, <span class="number">4</span>, <span class="number">25</span>, <span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="python-code"><a href="#python-code" class="headerlink" title="python code"></a>python code</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">ArgumentsFile = <span class="built_in">open</span>(<span class="string">&#x27;Arguments.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">Arguments = ArgumentsFile.readlines()</span><br><span class="line"></span><br><span class="line">n, a, b, Boundary, Sample = <span class="built_in">eval</span>(Arguments[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">x = np.array(<span class="built_in">eval</span>(Arguments[<span class="number">1</span>])).astype(<span class="built_in">float</span>)</span><br><span class="line">h = np.array(<span class="built_in">eval</span>(Arguments[<span class="number">2</span>])).astype(<span class="built_in">float</span>)</span><br><span class="line">M = np.array(<span class="built_in">eval</span>(Arguments[<span class="number">3</span>])).astype(<span class="built_in">float</span>)</span><br><span class="line">ArgumentsFile.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">truef</span>(<span class="params">x</span>):</span><br><span class="line">    <span class="keyword">return</span> (x + np.sin(<span class="number">2</span> * x)) / (<span class="number">1</span> + (np.e) ** (-x))</span><br><span class="line">y = truef(x)</span><br><span class="line"></span><br><span class="line">FunctionFile = <span class="built_in">open</span>(<span class="string">&#x27;FunctionSet.py&#x27;</span>, <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">FunctionFile.write(<span class="string">&quot;def func(i, x):\n&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">25</span>):</span><br><span class="line">    a0 = (-M[i + <span class="number">1</span>] * x[i] ** <span class="number">3</span> + M[i] * x[i + <span class="number">1</span>] ** <span class="number">3</span>) / (<span class="number">6</span> * h[i]) + (-M[i] * x[i + <span class="number">1</span>] + M[i + <span class="number">1</span>] * x[i]) * h[i] / <span class="number">6</span> + (x[i + <span class="number">1</span>] * y[i] - x[i] * y[i + <span class="number">1</span>]) / h[i]</span><br><span class="line">    a1 = (M[i + <span class="number">1</span>] * x[i] ** <span class="number">2</span> - M[i] * x[i + <span class="number">1</span>] ** <span class="number">2</span>) / (<span class="number">2</span> * h[i]) + (M[i] - M[i + <span class="number">1</span>]) * h[i] / <span class="number">6</span> + (y[i + <span class="number">1</span>] - y[i]) / h[i]</span><br><span class="line">    a2 = (M[i] * x[i + <span class="number">1</span>] - M[i + <span class="number">1</span>] * x[i]) / (<span class="number">2</span> * h[i])</span><br><span class="line">    a3 = (M[i + <span class="number">1</span>] - M[i]) / (<span class="number">6</span> * h[i])</span><br><span class="line">    FunctionFile.write(<span class="string">&quot;    if i == &#123;&#125;:\n&quot;</span>.<span class="built_in">format</span>(i))</span><br><span class="line">    <span class="comment">#FunctionFile.write(&quot;        return&quot;, a0, &quot;+ (&quot;, a1, &quot;) * x + (&quot;, a2, &quot;) * x ** 2 + (&quot;, a3, &quot;) * x ** 3&quot;)</span></span><br><span class="line">    FunctionFile.write(<span class="string">&quot;        return &quot;</span> + <span class="built_in">str</span>(a0) + <span class="string">&quot; + (&quot;</span> + <span class="built_in">str</span>(a1) + <span class="string">&quot;) * x + (&quot;</span> + <span class="built_in">str</span>(a2) + <span class="string">&quot;) * x ** 2 + (&quot;</span> + <span class="built_in">str</span>(a3) + <span class="string">&quot;) * x ** 3\n&quot;</span>)</span><br><span class="line">FunctionFile.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> FunctionSet <span class="keyword">import</span> func <span class="keyword">as</span> f</span><br><span class="line"></span><br><span class="line">plt.figure()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">    xi = np.linspace(x[i], x[i + <span class="number">1</span>], <span class="number">15</span>)</span><br><span class="line">    yi = f(i, xi)</span><br><span class="line">    plt.plot(xi, yi, color=<span class="string">&#x27;blue&#x27;</span>)</span><br><span class="line">plt.scatter(x, y, color=<span class="string">&#x27;red&#x27;</span>, marker=<span class="string">&#x27;x&#x27;</span>)</span><br><span class="line">xtrue = np.linspace(a ,b)</span><br><span class="line">plt.plot(xtrue, truef(xtrue), color=<span class="string">&#x27;orange&#x27;</span>, alpha=<span class="number">0.7</span>)</span><br><span class="line">name = <span class="string">&quot;Ex1Bdr&quot;</span> + <span class="built_in">str</span>(Boundary) + <span class="string">&quot;Sp&quot;</span> + <span class="built_in">str</span>(Sample)</span><br><span class="line">plt.title(name)</span><br><span class="line">plt.savefig(<span class="string">&quot;../Figure/&quot;</span> + name + <span class="string">&quot;.png&quot;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>In the python program, the expanded form of interpolation function is calculated by mathics&#x2F;mathematica:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">In[1]:= Collect[(Ma (b - x)^3 + Mb (x - a)^3) / (6 h) + ((b - x) ya + (x - a) yb) / h - (h / 6) ((b - x) Ma + (x - a) Mb), x]</span><br><span class="line">Out[1]:= Ma b ^ 3 / (6 h) - Ma b h / 6 - Mb a ^ 3 / (6 h) + Mb a h / 6 - a yb / h + b ya / h + x (-Ma b ^ 2 / (2 h) + Ma h / 6 + Mb a ^ 2 / (2 h) - Mb h / 6 - ya / h + yb / h) + x ^ 2 (Ma b / (2 h) - Mb a / (2 h)) + x ^ 3 (-Ma / (6 h) + Mb / (6 h))</span><br></pre></td></tr></table></figure><h3 id="Result-3"><a href="#Result-3" class="headerlink" title="Result"></a>Result</h3><p>$f(x) &#x3D; \dfrac{x}{x ^ 2 + x + 1}$</p><p>$f(x) &#x3D; \dfrac{x + \sin {2x}}{1 + e^{-x}}$</p><h2 id="Lab-6-FFT-amp-IFFT"><a href="#Lab-6-FFT-amp-IFFT" class="headerlink" title="Lab 6 - FFT &amp; IFFT"></a>Lab 6 - FFT &amp; IFFT</h2><h3 id="Code-3"><a href="#Code-3" class="headerlink" title="Code"></a>Code</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * =====================================================================================</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       Filename:  FFT.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *    Description:  Fast Fourier Transform Algorithm</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *        Version:  1.0</span></span><br><span class="line"><span class="comment"> *        Created:  05/29/2022 02:17:10 UTC</span></span><br><span class="line"><span class="comment"> *       Revision:  none</span></span><br><span class="line"><span class="comment"> *       Compiler:  gcc</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *         Author:  CuSO4_Deposit</span></span><br><span class="line"><span class="comment"> * =====================================================================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;complex&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SUCCESS 0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FAILURE 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PI 3.1415926535</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> E 2.718281828</span></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> complex&lt;<span class="type">double</span>&gt;<span class="built_in">I</span>(<span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> Status;</span><br><span class="line"><span class="keyword">typedef</span> vector&lt;complex&lt;<span class="type">double</span>&gt;&gt; Vector;</span><br><span class="line"><span class="keyword">typedef</span> complex&lt;<span class="type">double</span>&gt; Function; </span><br><span class="line"></span><br><span class="line"><span class="function">Function <span class="title">F</span><span class="params">(<span class="type">double</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0.7</span> * <span class="built_in">sin</span>(<span class="number">4</span> * PI * x) + <span class="built_in">sin</span>(<span class="number">10</span> * PI * x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">PrintVector</span><span class="params">(Vector v, <span class="type">int</span> mode)</span></span>&#123;</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">     * ===  FUNCTION  ======================================================================</span></span><br><span class="line"><span class="comment">     *         Name:  PrintVector</span></span><br><span class="line"><span class="comment">     *  Description:  Print the Vector v to the terminal(in row form). n is the Dimension of v. </span></span><br><span class="line"><span class="comment">     * =====================================================================================</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">int</span> n = v.<span class="built_in">size</span>();</span><br><span class="line">    <span class="keyword">switch</span>(mode)&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:     </span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">            cout&lt;&lt; v[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">            cout&lt;&lt; v[i].<span class="built_in">real</span>() &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">            cout&lt;&lt; v[i].<span class="built_in">imag</span>() &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;Invalid mode input.&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> SUCCESS;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Vector <span class="title">Sample</span><span class="params">(Function f(<span class="type">double</span>), <span class="type">int</span> Number)</span></span>&#123;</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">     * ===  FUNCTION  ======================================================================</span></span><br><span class="line"><span class="comment">     *         Name:  Sample</span></span><br><span class="line"><span class="comment">     *  Description:  Sample Number points on interval[0, 1]</span></span><br><span class="line"><span class="comment">     * =====================================================================================</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">if</span>(Number &amp; (Number - <span class="number">1</span>))&#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Number must be the power of 2.&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>); </span><br><span class="line">    &#125;</span><br><span class="line">    Vector fvector;</span><br><span class="line">    <span class="type">double</span> stepsize = <span class="number">1.0</span> / Number;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; Number; i++)&#123;</span><br><span class="line">        fvector.<span class="built_in">push_back</span>(<span class="built_in">f</span>(i * stepsize));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> fvector;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Vector <span class="title">AddError</span><span class="params">(<span class="type">double</span> size, Vector v)</span></span>&#123;</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">     * ===  FUNCTION  ======================================================================</span></span><br><span class="line"><span class="comment">     *         Name:  AddError </span></span><br><span class="line"><span class="comment">     *  Description:  Add a error of [0, size) to v. </span></span><br><span class="line"><span class="comment">     * =====================================================================================</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">int</span> n = v.<span class="built_in">size</span>();</span><br><span class="line">    cout &lt;&lt; n;</span><br><span class="line">    <span class="function">Vector <span class="title">result</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        result[i] = v[i] + size * (<span class="built_in">rand</span>() / (RAND_MAX + <span class="number">1.0</span>));</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Vector <span class="title">FFT</span><span class="params">(<span class="type">const</span> Vector&amp; f)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n = f.<span class="built_in">size</span>();</span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> f;</span><br><span class="line">    complex&lt;<span class="type">double</span>&gt;wn;</span><br><span class="line">    wn = <span class="built_in">pow</span>(E, - I * <span class="number">2.0</span> * PI / (<span class="type">double</span>)n);</span><br><span class="line">    complex&lt;<span class="type">double</span>&gt;<span class="built_in">w</span>(<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">    Vector f0, f1;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n / <span class="number">2</span>; i++)&#123;</span><br><span class="line">        f0.<span class="built_in">push_back</span>(f[<span class="number">2</span> * i]);</span><br><span class="line">        f1.<span class="built_in">push_back</span>(f[<span class="number">2</span> * i + <span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    Vector g0, g1;</span><br><span class="line">    g0 = <span class="built_in">FFT</span>(f0);</span><br><span class="line">    g1 = <span class="built_in">FFT</span>(f1);</span><br><span class="line">    <span class="function">Vector <span class="title">g</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> k = <span class="number">0</span>; k &lt; n / <span class="number">2</span>; k++)&#123;</span><br><span class="line">        g[k] = (g0[k] + w * g1[k]) / <span class="number">2.0</span>;</span><br><span class="line">        g[k + n / <span class="number">2</span>] = (g0[k] - w * g1[k]) / <span class="number">2.0</span>;</span><br><span class="line">        w = w * wn;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> g;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Vector <span class="title">IFFT</span><span class="params">(<span class="type">const</span> Vector&amp; f)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n = f.<span class="built_in">size</span>();</span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> f;</span><br><span class="line">    complex&lt;<span class="type">double</span>&gt;wn;</span><br><span class="line">    wn = <span class="built_in">pow</span>(E, I * <span class="number">2.0</span> * PI / (<span class="type">double</span>)n);</span><br><span class="line">    complex&lt;<span class="type">double</span>&gt;<span class="built_in">w</span>(<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">    Vector f0, f1;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n / <span class="number">2</span>; i++)&#123;</span><br><span class="line">        f0.<span class="built_in">push_back</span>(f[<span class="number">2</span> * i]);</span><br><span class="line">        f1.<span class="built_in">push_back</span>(f[<span class="number">2</span> * i + <span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    Vector g0, g1;</span><br><span class="line">    g0 = <span class="built_in">IFFT</span>(f0);</span><br><span class="line">    g1 = <span class="built_in">IFFT</span>(f1);</span><br><span class="line">    <span class="function">Vector <span class="title">g</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> k = <span class="number">0</span>; k &lt; n / <span class="number">2</span>; k++)&#123;</span><br><span class="line">        g[k] = (g0[k] + w * g1[k]);</span><br><span class="line">        g[k + n / <span class="number">2</span>] = (g0[k] - w * g1[k]);</span><br><span class="line">        w = w * wn;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> g;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">PlotTime</span><span class="params">(Function F(<span class="type">double</span>), <span class="type">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">     * ===  FUNCTION  ======================================================================</span></span><br><span class="line"><span class="comment">     *         Name:  PlotTime</span></span><br><span class="line"><span class="comment">     *  Description:  Output the code to plot F in python.</span></span><br><span class="line"><span class="comment">     * =====================================================================================</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    ofstream ofs;</span><br><span class="line">    ofs.<span class="built_in">open</span>(<span class="string">&quot;TimeParam.txt&quot;</span>, ios::out);</span><br><span class="line">    ofs &lt;&lt; <span class="string">&quot;[&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++)&#123;</span><br><span class="line">        ofs &lt;&lt; (<span class="type">double</span>)i / n &lt;&lt; <span class="string">&quot;, &quot;</span>; </span><br><span class="line">    &#125;</span><br><span class="line">    ofs &lt;&lt; (<span class="type">double</span>)(n - <span class="number">1</span>) / n &lt;&lt; <span class="string">&quot;]\n&quot;</span>;</span><br><span class="line">    </span><br><span class="line">    ofs &lt;&lt; <span class="string">&quot;[&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++)&#123;</span><br><span class="line">        ofs &lt;&lt; <span class="built_in">F</span>((<span class="type">double</span>)i / n).<span class="built_in">real</span>() &lt;&lt; <span class="string">&quot;, &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ofs &lt;&lt; <span class="built_in">F</span>((<span class="type">double</span>)(n - <span class="number">1</span>) / n).<span class="built_in">real</span>() &lt;&lt; <span class="string">&quot;]\n&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">PlotFrequency</span><span class="params">(Vector g, <span class="type">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">     * ===  FUNCTION  ======================================================================</span></span><br><span class="line"><span class="comment">     *         Name:  PlotFrequency</span></span><br><span class="line"><span class="comment">     *  Description:  Visualize Fourier Transformation.</span></span><br><span class="line"><span class="comment">     * =====================================================================================</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    ofstream ofs;</span><br><span class="line">    ofs.<span class="built_in">open</span>(<span class="string">&quot;FrequencyParam.txt&quot;</span>, ios::out);</span><br><span class="line">    ofs &lt;&lt; <span class="string">&quot;[&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++)&#123;</span><br><span class="line">        ofs &lt;&lt; i &lt;&lt; <span class="string">&quot;, &quot;</span>; </span><br><span class="line">    &#125;</span><br><span class="line">    ofs &lt;&lt; n - <span class="number">1</span> &lt;&lt; <span class="string">&quot;]\n&quot;</span>;</span><br><span class="line">    </span><br><span class="line">    ofs &lt;&lt; <span class="string">&quot;[&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++)&#123;</span><br><span class="line">        ofs &lt;&lt; <span class="built_in">sqrt</span>(g[i].<span class="built_in">real</span>() * g[i].<span class="built_in">real</span>() + g[i].<span class="built_in">imag</span>() * g[i].<span class="built_in">imag</span>()) &lt;&lt; <span class="string">&quot;, &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ofs &lt;&lt; <span class="built_in">sqrt</span>(g[n - <span class="number">1</span>].<span class="built_in">real</span>() * g[n - <span class="number">1</span>].<span class="built_in">real</span>() + g[n - <span class="number">1</span>].<span class="built_in">imag</span>() * g[n - <span class="number">1</span>].<span class="built_in">imag</span>()) &lt;&lt; <span class="string">&quot;]\n&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">   </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">PlotTimeI</span><span class="params">(Vector g, <span class="type">int</span> n, <span class="type">int</span> mode)</span></span>&#123;</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">     * ===  FUNCTION  ======================================================================</span></span><br><span class="line"><span class="comment">     *         Name:  PlotFrequency</span></span><br><span class="line"><span class="comment">     *  Description:  Visualize Fourier Transformation.</span></span><br><span class="line"><span class="comment">     * =====================================================================================</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    ofstream ofs;</span><br><span class="line">    <span class="keyword">if</span>(mode)</span><br><span class="line">        ofs.<span class="built_in">open</span>(<span class="string">&quot;ITimeParam1.txt&quot;</span>, ios::out);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        ofs.<span class="built_in">open</span>(<span class="string">&quot;ITimeParam0.txt&quot;</span>, ios::out);</span><br><span class="line">    ofs &lt;&lt; <span class="string">&quot;[&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++)&#123;</span><br><span class="line">        ofs &lt;&lt; i &lt;&lt; <span class="string">&quot;, &quot;</span>; </span><br><span class="line">    &#125;</span><br><span class="line">    ofs &lt;&lt; n - <span class="number">1</span> &lt;&lt; <span class="string">&quot;]\n&quot;</span>;</span><br><span class="line">    </span><br><span class="line">    ofs &lt;&lt; <span class="string">&quot;[&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++)&#123;</span><br><span class="line">        ofs &lt;&lt; g[i].<span class="built_in">real</span>() &lt;&lt; <span class="string">&quot;, &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ofs &lt;&lt; g[n - <span class="number">1</span>].<span class="built_in">real</span>() &lt;&lt; <span class="string">&quot;]\n&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">   </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">srand</span>(<span class="built_in">time</span>(<span class="number">0</span>));</span><br><span class="line">    Vector tempvector = <span class="built_in">Sample</span>(F, <span class="number">64</span>);</span><br><span class="line">    Vector fvector = <span class="built_in">AddError</span>(<span class="number">0.3</span>, tempvector);</span><br><span class="line">    Vector gvector = <span class="built_in">FFT</span>(fvector);</span><br><span class="line">    <span class="built_in">PrintVector</span>(gvector, <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">PrintVector</span>(gvector, <span class="number">2</span>);</span><br><span class="line">    <span class="built_in">PlotTime</span>(F, <span class="number">64</span>);</span><br><span class="line">    <span class="built_in">PlotFrequency</span>(gvector, <span class="number">64</span>);</span><br><span class="line">    Vector igvector = <span class="built_in">IFFT</span>(gvector);</span><br><span class="line">    <span class="built_in">PlotTimeI</span>(igvector, <span class="number">64</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> n = gvector.<span class="built_in">size</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="keyword">if</span>(i &gt; n / <span class="number">8</span> &amp;&amp; i &lt; <span class="number">3</span> * n / <span class="number">8</span>)</span><br><span class="line">            gvector[i] = (<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    igvector = <span class="built_in">IFFT</span>(gvector);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">PlotTimeI</span>(igvector, <span class="number">64</span>, <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line">import matplotlib.pyplot as plt</span><br><span class="line"></span><br><span class="line">ArgumentsFile = open(&quot;./ITimeParam1.txt&quot;, &#x27;r&#x27;)</span><br><span class="line">Arguments = ArgumentsFile.readlines()</span><br><span class="line"></span><br><span class="line">x = np.array(eval(Arguments[0])).astype(float)</span><br><span class="line">y = np.array(eval(Arguments[1])).astype(float)</span><br><span class="line"></span><br><span class="line">plt.figure()</span><br><span class="line">plt.plot(x, y)</span><br><span class="line">name = &quot;Ex2ITime1n7&quot;</span><br><span class="line">plt.title(name)</span><br><span class="line">plt.savefig(&quot;../figure/&quot; + name + &quot;.png&quot;)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h2 id="Lab7-Romberg-Integral"><a href="#Lab7-Romberg-Integral" class="headerlink" title="Lab7 - Romberg Integral"></a>Lab7 - Romberg Integral</h2><h3 id="Code-4"><a href="#Code-4" class="headerlink" title="Code"></a>Code</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * =====================================================================================</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *       Filename:  Romberg.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *    Description:  Implement Romberg Integral</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *        Version:  1.0</span></span><br><span class="line"><span class="comment"> *        Created:  06/14/2022 10:49:02 PM</span></span><br><span class="line"><span class="comment"> *       Revision:  none</span></span><br><span class="line"><span class="comment"> *       Compiler:  gcc</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *         Author:  CuSO4_Deposit</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * =====================================================================================</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SUCCESS 0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FAILURE 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PI 3.1415926535</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> E 2.718281828</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> Status;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">double</span> Function;</span><br><span class="line"></span><br><span class="line"><span class="function">Function <span class="title">f</span><span class="params">(<span class="type">double</span> x)</span></span>&#123;</span><br><span class="line">    <span class="comment">//return log(x);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sqrt</span>(<span class="number">2</span> - <span class="built_in">sin</span>(x) * <span class="built_in">sin</span>(x));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">Romberg</span><span class="params">(Function f(<span class="type">double</span> x), <span class="type">double</span> a, <span class="type">double</span> b, <span class="type">double</span>&amp; result, <span class="type">double</span> AccControler, <span class="type">int</span> MaxLoopNumber, <span class="type">int</span> verbose)</span></span>&#123;</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">     * ===  FUNCTION  ======================================================================</span></span><br><span class="line"><span class="comment">     *         Name:  Romberg</span></span><br><span class="line"><span class="comment">     *  Description:  return the Romberg integral of f on [a, b] through &lt;result&gt;,</span></span><br><span class="line"><span class="comment">     *                  exit when loop &lt;MaxLoopNumber&gt; times or error &lt; AccControler.</span></span><br><span class="line"><span class="comment">     * =====================================================================================</span></span><br><span class="line"><span class="comment">     */</span> </span><br><span class="line">    <span class="type">double</span>* RombergArray1 = <span class="keyword">new</span> <span class="type">double</span>[MaxLoopNumber + <span class="number">1</span>];</span><br><span class="line">    <span class="type">double</span>* RombergArray2 = <span class="keyword">new</span> <span class="type">double</span>[MaxLoopNumber + <span class="number">1</span>];</span><br><span class="line">    <span class="type">double</span> h = b - a;</span><br><span class="line">    RombergArray1[<span class="number">0</span>] = (<span class="built_in">f</span>(a) + <span class="built_in">f</span>(b)) * h / <span class="number">2</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(verbose)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%lf\n&quot;</span>, RombergArray1[<span class="number">0</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> k = <span class="number">1</span>; k &lt; MaxLoopNumber; k++)&#123;</span><br><span class="line">        <span class="type">double</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="type">double</span> hk = h / <span class="built_in">pow</span>(<span class="number">2</span>, k);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt; <span class="built_in">pow</span>(<span class="number">2</span>, k - <span class="number">1</span>) + <span class="number">1</span>; i++)</span><br><span class="line">            sum += <span class="built_in">f</span>(a + (<span class="number">2</span> * i - <span class="number">1</span>) * hk);</span><br><span class="line">        RombergArray2[<span class="number">0</span>] = (RombergArray1[<span class="number">0</span>] + <span class="number">2</span> * hk * sum) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt; k + <span class="number">1</span>; j++)&#123;</span><br><span class="line">            RombergArray2[j] = RombergArray2[j - <span class="number">1</span>] + (RombergArray2[j - <span class="number">1</span>] - RombergArray1[j - <span class="number">1</span>]) / (<span class="built_in">pow</span>(<span class="number">4</span>, j));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">abs</span>(RombergArray2[k] - RombergArray1[k - <span class="number">1</span>]) &lt; AccControler)&#123;</span><br><span class="line">            result = RombergArray2[k];</span><br><span class="line">            <span class="keyword">return</span> SUCCESS;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(verbose)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; k + <span class="number">1</span>; i++)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%lf\t&quot;</span>, RombergArray2[i]);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; k + <span class="number">1</span>; j++)</span><br><span class="line">            RombergArray1[j] = RombergArray2[j];</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    result = RombergArray2[MaxLoopNumber];</span><br><span class="line">    <span class="keyword">return</span> SUCCESS;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">double</span> result;</span><br><span class="line">    <span class="comment">//Romberg(f, 1, 2, result, 0.000001, 20, 1);</span></span><br><span class="line">    <span class="built_in">Romberg</span>(f, -PI / <span class="number">6.0</span>, <span class="number">3.0</span> * PI / <span class="number">4</span>, result, <span class="number">0.000001</span>, <span class="number">20</span>, <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;This article is migrated from Wordpress and may have lost the images in it. &lt;/p&gt;
&lt;h2 id=&quot;Index&quot;&gt;&lt;a href=&quot;#Index&quot; class=&quot;headerlink&quot; title</summary>
      
    
    
    
    
    <category term="C" scheme="https://blog.depoze.xyz/tags/C/"/>
    
    <category term="Math" scheme="https://blog.depoze.xyz/tags/Math/"/>
    
  </entry>
  
  <entry>
    <title>POJ site spider</title>
    <link href="https://blog.depoze.xyz/2022/03/poj-site-spider/"/>
    <id>https://blog.depoze.xyz/2022/03/poj-site-spider/</id>
    <published>2022-03-22T14:20:35.000Z</published>
    <updated>2022-03-22T14:20:35.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Design a crawler for problems of <a href="http://poj.org/">poj.org</a>, crawl 100 problem details, and save as *.json file.</p><h2 id="Preparation"><a href="#Preparation" class="headerlink" title="Preparation"></a>Preparation</h2><p>The lab can be divided into these sections:</p><ol><li>Send a request and receive a response</li><li>Parse the response and save the desired data</li><li>Repeatedly doing 1 and 2.</li></ol><h3 id="Observation-on-url-pattern"><a href="#Observation-on-url-pattern" class="headerlink" title="Observation on url pattern"></a>Observation on url pattern</h3><p>The URLs of problems on poj all follow this format:</p><p><a href="http://poj.org/problem?id=">http://poj.org/problem?id=</a><id></p><p>where <id> is an integer starting at 1000. So when we only need to send a request to this pattern, when <id> ranges from 1000 to 1099.</p><h3 id="Strategies-against-anti-crawler"><a href="#Strategies-against-anti-crawler" class="headerlink" title="Strategies against anti-crawler"></a>Strategies against anti-crawler</h3><p>As a friendly crawler, we should not put much pressure on poj’s server. This is something we should think about before we start coding. To avoid being banned, here are some simple strategies:</p><ol><li>Use fake UserAgents.</li><li>Sleep for some seconds between 2 requests.</li><li>If still get banned, we have to implement an ip-pool.</li></ol><h2 id="Coding"><a href="#Coding" class="headerlink" title="Coding"></a>Coding</h2><h3 id="Parse-response-and-save-the-data-we-want"><a href="#Parse-response-and-save-the-data-we-want" class="headerlink" title="Parse response and save the data we want"></a>Parse response and save the data we want</h3><p>We can manually obtain the HTML code of websites using Firefox’s view-source function. So we will start with the parsing.</p><p>In this section, we will import <strong>the BeautifulSoup</strong> package. <a href="http://www.crummy.com/software/BeautifulSoup/">Beautiful Soup</a> is a Python library for pulling data out of HTML and XML files. It works with your favorite parser to provide idiomatic ways of navigating, searching, and modifying the parse tree. It commonly saves programmers hours or days of work.<a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/">Beautiful Soup Documentation</a></p><p>We can determine the position of our targets by manually analyzing the HTML code.</p><p><img src="/../images/2022/TitleHere.png"></p><p>Title here</p><p><img src="/../images/2022/OtherAttr.png"></p><p>Other attributes here</p><p>We find the corresponding info are all the next siblings of our target string:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;pst&quot;</span>&gt;</span>Description<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ptx&quot;</span> <span class="attr">lang</span>=<span class="string">&quot;en-US&quot;</span>&gt;</span>Calculate a+b <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">To a tag object Tag, we can access its content like this:</span><br></pre></td></tr></table></figure><p>head_tag.contents</p># \[<title>The Dormouse's story</title>\]head\_tag.string# 'The Dormouse's story'<p><em>Tag.strings</em> and <em>Tag.stripped</em> strings are generator types that can be used when there is more than one thing inside the tag.</p><p>Also, we can navigate sideways using Tag.next_sibling.</p><p>We create a dictionary, insert our target, and navigate using their tag names.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">html2json</span>(<span class="params">html</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot; parsing html and save data as json.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    soup = BeautifulSoup(html, <span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    target = &#123;<span class="string">&quot;Title&quot;</span>, <span class="string">&quot;Time Limit:&quot;</span>, <span class="string">&quot;Memory Limit:&quot;</span>, <span class="string">&quot;Total Submissions:&quot;</span>, <span class="string">&quot;Accepted:&quot;</span>, <span class="string">&quot;Description&quot;</span>, <span class="string">&quot;Input&quot;</span>, <span class="string">&quot;Output&quot;</span>, <span class="string">&quot;Sample Input&quot;</span>, <span class="string">&quot;Sample Output&quot;</span>, <span class="string">&quot;Hint&quot;</span>, <span class="string">&quot;Source&quot;</span>&#125;</span><br><span class="line">    JsonDic = &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        DealingTag = soup.title</span><br><span class="line">        JsonDic[<span class="string">&quot;Title&quot;</span>] = DealingTag.string</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Title:&quot;</span>, soup.title.string)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;This page has no title.&quot;</span>)</span><br><span class="line">    DealingTag = soup.body.find_all(<span class="string">&#x27;p&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> tag <span class="keyword">in</span> DealingTag:</span><br><span class="line">        <span class="keyword">if</span> tag.string <span class="keyword">in</span> target:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                TempString = <span class="string">&#x27;&#x27;</span></span><br><span class="line">                <span class="keyword">for</span> string <span class="keyword">in</span> tag.next_sibling.strings:</span><br><span class="line">                    TempString = TempString + string</span><br><span class="line">                JsonDic[tag.string] = TempString</span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;This page has no&quot;</span>, tag.string)</span><br><span class="line">    DealingTag = soup.body.find_all(<span class="string">&#x27;b&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> tag <span class="keyword">in</span> DealingTag:</span><br><span class="line">        <span class="keyword">if</span> tag.string <span class="keyword">in</span> target:</span><br><span class="line">            JsonDic[tag.string[:-<span class="number">1</span>]] = tag.next_sibling</span><br></pre></td></tr></table></figure><p>Now that we have a dict containing the desired data, we can simply convert it to a json file using the package json:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="comment">#def html2json(html):</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">html2json</span>(<span class="params">html, PathToJson</span>):</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">    Jsonfile = <span class="built_in">open</span>(PathToJson, <span class="string">&#x27;a&#x27;</span>, encoding = <span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    Jsonfile.write(json.dumps(JsonDic, ensure_ascii=<span class="literal">False</span>, indent=<span class="number">4</span>, separators=(<span class="string">&#x27;,&#x27;</span>, <span class="string">&quot;:&quot;</span>)))</span><br><span class="line">    Jsonfile.write(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">    Jsonfile.close</span><br></pre></td></tr></table></figure><p>Here is the output:</p><p><img src="/../images/2022/Oneoutput.png"></p><p>Json file</p><h3 id="Send-a-request-and-receive-response"><a href="#Send-a-request-and-receive-response" class="headerlink" title="Send a request and receive response"></a>Send a request and receive response</h3><p>Next step, we should try to automatically get the HTML of any given URL. We need to import package <strong><a href="https://docs.python-requests.org/en/latest/">request</a></strong>. As mentioned, we introduce a UA-pool.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">Get_html</span>(<span class="params">url, UA_Pool</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot; Send request to the given url, return html of the request.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    myheaders = &#123;</span><br><span class="line">        <span class="string">&quot;User-Agent&quot;</span>: UA_Pool[random.randint(<span class="number">0</span>, <span class="built_in">len</span>(UA_Pool) - <span class="number">1</span>)], </span><br><span class="line">        <span class="string">&quot;Host&quot;</span>: <span class="string">&quot;poj.org&quot;</span>,</span><br><span class="line">            &#125;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;UA:&quot;</span>, myheaders[<span class="string">&quot;User-Agent&quot;</span>])</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        client = requests.session()</span><br><span class="line">        response = client.get(url, headers = myheaders)</span><br><span class="line">        html = response.text</span><br><span class="line">        <span class="keyword">return</span> html</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Request Error&quot;</span>)</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>We don’t have much to say about this section. Because the routine is fairly consistent.</p><h3 id="Calling-these-functions"><a href="#Calling-these-functions" class="headerlink" title="Calling these functions"></a>Calling these functions</h3><p>We already have <strong>Get_html</strong>, which returns the HTML for a given URL, and html2json, which finds our desired data and saves it into json file. Then all we have to do is to repeatedly call them.</p><p>We sleep for a random duration of [3s, 15s] in each loop. (This is because we only need 100 results, we don’t need to crawl as quickly.)</p><p>It’s worth noting that the UA-pool is generated by <a href="http://useragentstring.com/pages/useragentstring.php">Useragentstring.com</a>. Thanks for its help!</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">Path = <span class="string">&#x27;./resultsample.json&#x27;</span></span><br><span class="line">UA_Pool=[ <span class="comment"># from useragentstring.com</span></span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3100.0 Safari/537.36&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Windows; U; Windows NT 6.1; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Windows; U; Windows NT 6.1; rv:2.2) Gecko/20110201&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.0.3) Gecko/2008092814 (Debian-3.0.1-1)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.8.1a2) Gecko/20060512&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36 Edge/18.19582&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (X11; Ubuntu; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2919.83 Safari/537.36&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (compatible, MSIE 11, Windows NT 6.3; Trident/7.0;  rv:11.0) like Gecko&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (X11; Linux; rv:74.0) Gecko/20100101 Firefox/74.0&quot;</span>,</span><br><span class="line">        ]</span><br><span class="line"></span><br><span class="line">URLPattern = <span class="string">&quot;http://poj.org/problem?id=&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1000</span>, <span class="number">1100</span>):</span><br><span class="line">    url = URLPattern + <span class="built_in">str</span>(i)</span><br><span class="line">    <span class="built_in">print</span>(url)</span><br><span class="line">    time.sleep(random.uniform(<span class="number">3</span>, <span class="number">15</span>))</span><br><span class="line">    html = Get_html(url, UA_Pool)</span><br><span class="line">    html2json(html, Path)</span><br></pre></td></tr></table></figure><h2 id="Result-amp-Summary"><a href="#Result-amp-Summary" class="headerlink" title="Result &amp; Summary"></a>Result &amp; Summary</h2><p><img src="/../images/2022/FullScreenshot.png"></p><p>This is the terminal when running</p><p>Maybe because <a href="/2022/02/08/crawl-song-lyrics-in-netease/">I have tried the Netease Crawler before</a>(But the request part did not succeed because I don’t know its API, so I had to import a <em>Cloudmusic</em> package), this crawler did not take long(~5 hours, maybe). I didn’t try to introduce a cookies-pool this time, but might try next time.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h2&gt;&lt;p&gt;Design a crawler for problems of &lt;</summary>
      
    
    
    
    
    <category term="Python" scheme="https://blog.depoze.xyz/tags/Python/"/>
    
    <category term="BeautifulSoup" scheme="https://blog.depoze.xyz/tags/BeautifulSoup/"/>
    
    <category term="Spider" scheme="https://blog.depoze.xyz/tags/Spider/"/>
    
  </entry>
  
  <entry>
    <title>Configure Vim on Linux Mint 20.03</title>
    <link href="https://blog.depoze.xyz/2022/02/configure-vim-on-linux-mint-20-03/"/>
    <id>https://blog.depoze.xyz/2022/02/configure-vim-on-linux-mint-20-03/</id>
    <published>2022-02-12T16:35:11.000Z</published>
    <updated>2022-02-12T16:35:11.000Z</updated>
    
    <content type="html"><![CDATA[<p>This is just a simple record. About the configuring process on Windows, here is <a href="/vim-configure-process-recording/">another blog</a>.</p><h2 id="Version-Info"><a href="#Version-Info" class="headerlink" title="Version Info"></a>Version Info</h2><p>Vi IMproved 8.1 (2018 May 18)</p><p>Huge version with GTK3 GUI.</p><h2 id="vimrc"><a href="#vimrc" class="headerlink" title=".vimrc"></a>.vimrc</h2><p><a href="https://vimjc.com/vimrc.html">无插件Vim配置文件vimrc推荐与各VIM配置项解释</a></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&quot; All system-wide defaults are set in $VIMRUNTIME/debian.vim and sourced by</span></span><br><span class="line"><span class="comment">&quot; the call to :runtime you can find below.  If you wish to change any of those</span></span><br><span class="line"><span class="comment">&quot; settings, you should do it in this file (/etc/vim/vimrc), since debian.vim</span></span><br><span class="line"><span class="comment">&quot; will be overwritten everytime an upgrade of the vim packages is performed.</span></span><br><span class="line"><span class="comment">&quot; It is recommended to make changes after sourcing debian.vim since it alters</span></span><br><span class="line"><span class="comment">&quot; the value of the &#x27;compatible&#x27; option.</span></span><br><span class="line"></span><br><span class="line">runtime! debian.<span class="keyword">vim</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; Vim will load $VIMRUNTIME/defaults.vim if the user does not have a vimrc.</span></span><br><span class="line"><span class="comment">&quot; This happens after /etc/vim/vimrc(.local) are loaded, so it will override</span></span><br><span class="line"><span class="comment">&quot; any settings in these files.</span></span><br><span class="line"><span class="comment">&quot; If you don&#x27;t want that to happen, uncomment the below line to prevent</span></span><br><span class="line"><span class="comment">&quot; defaults.vim from being loaded.</span></span><br><span class="line"> <span class="keyword">let</span> <span class="variable">g:skip_defaults_vim</span> = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; Uncomment the next line to make Vim more Vi-compatible</span></span><br><span class="line"><span class="comment">&quot; <span class="doctag">NOTE:</span> debian.vim sets &#x27;nocompatible&#x27;.  Setting &#x27;compatible&#x27; changes numerous</span></span><br><span class="line"><span class="comment">&quot; options, so any other options should be set AFTER setting &#x27;compatible&#x27;.</span></span><br><span class="line"><span class="comment">&quot;set compatible</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; Vim5 and later versions support syntax highlighting. Uncommenting the next</span></span><br><span class="line"><span class="comment">&quot; line enables syntax highlighting by default.</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">has</span>(<span class="string">&quot;syntax&quot;</span>)</span><br><span class="line">  <span class="keyword">syntax</span> <span class="keyword">on</span></span><br><span class="line"><span class="keyword">endif</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; If using a dark background within the editing area and syntax highlighting</span></span><br><span class="line"><span class="comment">&quot; turn on this option as well</span></span><br><span class="line"><span class="comment">&quot;set background=dark</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; Uncomment the following to have Vim jump to the last position when</span></span><br><span class="line"><span class="comment">&quot; reopening a file</span></span><br><span class="line"><span class="string">&quot;au BufReadPost * if line(&quot;</span><span class="string">&#x27;\&quot;&quot;) &gt; 1 &amp;&amp; line(&quot;&#x27;</span>\<span class="string">&quot;&quot;</span>) &lt;= <span class="built_in">line</span>(<span class="string">&quot;$&quot;</span>)  <span class="keyword">exe</span> <span class="string">&quot;normal! g&#x27;\&quot;&quot;</span>  <span class="keyword">endif</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; Uncomment the following to have Vim load indentation rules and plugins</span></span><br><span class="line"><span class="comment">&quot; according to the detected filetype.</span></span><br><span class="line"><span class="comment">&quot;filetype plugin indent on</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; The following are commented out as they cause vim to behave a lot</span></span><br><span class="line"><span class="comment">&quot; differently from regular Vi. They are highly recommended though.</span></span><br><span class="line"><span class="string">&quot;set showcmd&quot;</span> Show (partial) <span class="keyword">command</span> in status <span class="built_in">line</span>.</span><br><span class="line"><span class="string">&quot;set showmatch&quot;</span> Show matching brackets.</span><br><span class="line"><span class="string">&quot;set ignorecase&quot;</span> Do case insensitive matching</span><br><span class="line"><span class="string">&quot;set smartcase&quot;</span> Do smart case matching</span><br><span class="line"><span class="string">&quot;set incsearch&quot;</span> Incremental <span class="built_in">search</span></span><br><span class="line"><span class="string">&quot;set autowrite&quot;</span> Automatically save before commands like :<span class="keyword">next</span> <span class="built_in">and</span> :<span class="keyword">make</span></span><br><span class="line"><span class="string">&quot;set hidden&quot;</span> Hide <span class="keyword">buffers</span> when they are abandoned</span><br><span class="line"><span class="string">&quot;set mouse=a&quot;</span> Enable mouse usage (<span class="keyword">all</span> modes)</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; Source a global configuration file if available</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">filereadable</span>(<span class="string">&quot;/etc/vim/vimrc.local&quot;</span>)</span><br><span class="line">  <span class="keyword">source</span> /etc/<span class="keyword">vim</span>/vimrc.local</span><br><span class="line"><span class="keyword">endif</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span> nocompatible</span><br><span class="line"><span class="keyword">set</span> autoread<span class="comment">&quot;reload files when changed on disk (via Git)</span></span><br><span class="line"><span class="keyword">set</span> shortmess=atI<span class="string">&quot;use &quot;</span>:h shortmess <span class="keyword">to</span> <span class="keyword">view</span> <span class="keyword">help</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span> magic</span><br><span class="line"><span class="keyword">set</span> title</span><br><span class="line"><span class="keyword">set</span> nobackup</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span> noerrorbells</span><br><span class="line"><span class="keyword">set</span> visualbell t_vb=</span><br><span class="line"><span class="keyword">set</span> t_vb=</span><br><span class="line"><span class="keyword">set</span> timeoutlen=<span class="number">1000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot;Encodings</span></span><br><span class="line"><span class="keyword">set</span> encoding=utf-<span class="number">8</span></span><br><span class="line"><span class="keyword">set</span> fileencodings=usc-bom,utf-<span class="number">8</span>,cp936,gb18030,big5,euc-jp,euc-kr,latin1</span><br><span class="line"><span class="keyword">set</span> fileformats=unix,dos,mac</span><br><span class="line"><span class="keyword">set</span> termencoding=utf-<span class="number">8</span></span><br><span class="line"><span class="keyword">set</span> formatoptions+=<span class="keyword">m</span></span><br><span class="line"><span class="keyword">set</span> formatoptions+=B</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot;View</span></span><br><span class="line"><span class="keyword">set</span> ruler</span><br><span class="line"><span class="keyword">set</span> <span class="keyword">number</span></span><br><span class="line"><span class="keyword">set</span> showcmd</span><br><span class="line"><span class="keyword">set</span> showmode</span><br><span class="line"><span class="keyword">set</span> showmatch</span><br><span class="line"><span class="keyword">set</span> matchtime=<span class="number">2</span></span><br><span class="line"><span class="keyword">set</span> guifont=Ubuntu\ Mono\ Regular\ <span class="number">15</span> <span class="comment">&quot; IMPORTANT: :h15 can&#x27;t be recognized</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot;Searching</span></span><br><span class="line"><span class="keyword">set</span> hlsearch<span class="comment">&quot;highlight searches</span></span><br><span class="line"><span class="keyword">set</span> incsearch<span class="comment">&quot;incremerntal searching</span></span><br><span class="line"><span class="keyword">set</span> ignorecase</span><br><span class="line"><span class="keyword">set</span> smartcase<span class="comment">&quot; no ignore case when Uppercase char present</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot;Tab</span></span><br><span class="line"><span class="keyword">set</span> expandtab<span class="comment">&quot; expand all tabs to spaces\</span></span><br><span class="line"><span class="keyword">set</span> smarttab</span><br><span class="line"><span class="keyword">set</span> shiftround</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot;Indent</span></span><br><span class="line"><span class="keyword">set</span> autoindent smartindent shiftround</span><br><span class="line"><span class="keyword">set</span> <span class="built_in">shiftwidth</span>=<span class="number">4</span></span><br><span class="line"><span class="keyword">set</span> tabstop=<span class="number">4</span></span><br><span class="line"><span class="keyword">set</span> softtabstop=<span class="number">4</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot;Cursor</span></span><br><span class="line"><span class="keyword">set</span> cursorcolumn</span><br><span class="line"><span class="keyword">set</span> cursorline</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; Theme</span></span><br><span class="line"><span class="keyword">syntax</span> enable</span><br><span class="line"><span class="keyword">set</span> background=dark</span><br><span class="line"><span class="keyword">colorscheme</span> solarized</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot;KeyMapping</span></span><br><span class="line"><span class="keyword">nnoremap</span> <span class="keyword">k</span> gk</span><br><span class="line"><span class="keyword">nnoremap</span> gk <span class="keyword">k</span></span><br><span class="line"><span class="keyword">nnoremap</span> <span class="keyword">j</span> gj</span><br><span class="line"><span class="keyword">nnoremap</span> gj <span class="keyword">j</span></span><br></pre></td></tr></table></figure><h2 id="YouCompleteMe"><a href="#YouCompleteMe" class="headerlink" title="YouCompleteMe"></a>YouCompleteMe</h2><h3 id="Cmake"><a href="#Cmake" class="headerlink" title="Cmake"></a>Cmake</h3><p>$ pip install –user cmake</p><p>Looking in indexes: <a href="https://pypi.tuna.tsinghua.edu.cn/simple/">https://pypi.tuna.tsinghua.edu.cn/simple/</a><br>Collecting cmake<br>  Downloading <a href="https://pypi.tuna.tsinghua.edu.cn/packages/43/f7/cf42906411c364dbf60087a2d977b09ec5d0b87d3ba6be485fc031480f59/cmake-3.22.2-py2.py3-none-manylinux/_2/_17/_x86/_64.manylinux2014/_x86/_64.whl">https://pypi.tuna.tsinghua.edu.cn/packages/43/f7/cf42906411c364dbf60087a2d977b09ec5d0b87d3ba6be485fc031480f59/cmake-3.22.2-py2.py3-none-manylinux\_2\_17\_x86\_64.manylinux2014\_x86\_64.whl</a> (22.7 MB)<br>     ████████████████████████████████ 22.7 MB 4.6 MB&#x2F;s<br>Installing collected packages: cmake<br>Successfully installed cmake-3.22.2</p><h3 id="Quick-start"><a href="#Quick-start" class="headerlink" title="Quick start"></a>Quick start</h3><p>$ sudo apt install build-essential cmake vim-nox python3-dev</p><h3 id="Error-message"><a href="#Error-message" class="headerlink" title="Error message"></a>Error message</h3><p>FAILED</p><p>ERROR: the build failed.</p><p>NOTE: it is *highly* unlikely that this is a bug but rather that this is a problem with the configuration of your system or a missing dependency. Please carefully read CONTRIBUTING.md and if you’re sure that it is a bug, please raise an issue on the issue tracker, including the entire output of this script (with –verbose) and the invocation line used to run it.</p><p>The installation failed; please see above for the actual error. In order to get more information, please re-run the command, adding the –verbose flag. If you think this is a bug and you raise an issue, you MUST include the *full verbose* output.</p><p>For example, run:&#x2F;usr&#x2F;bin&#x2F;python3 &#x2F;home&#x2F;cuso4d&#x2F;.vim&#x2F;plugged&#x2F;YouCompleteMe&#x2F;third_party&#x2F;ycmd&#x2F;build.py –all –verbose</p><p>Add “–verbose”, it will show detailed info when building.</p><h3 id="If-you-want-C-support…"><a href="#If-you-want-C-support…" class="headerlink" title="If you want C# support…"></a>If you want C# support…</h3><p>If you chose “install all support of YCM”, or you want a C# support, caution:</p><p><strong>The source that built.py provided is a 404 page…</strong></p><p>Here is the traceback:</p><p>Installing Omnisharp v1.37.11<br>Downloading Omnisharp from <a href="https://github.com/OmniSharp/omnisharp-roslyn/releases/download/v1.37.11/omnisharp.http-linux-x64.tar.gz...Traceback">https://github.com/OmniSharp/omnisharp-roslyn/releases/download/v1.37.11/omnisharp.http-linux-x64.tar.gz...Traceback</a> (most recent call last):<br>  File “&#x2F;home&#x2F;cuso4d&#x2F;.vim&#x2F;plugged&#x2F;YouCompleteMe&#x2F;third_party&#x2F;ycmd&#x2F;build.py”, line 1256, in <module><br>    Main()<br>  File “&#x2F;home&#x2F;cuso4d&#x2F;.vim&#x2F;plugged&#x2F;YouCompleteMe&#x2F;third_party&#x2F;ycmd&#x2F;build.py”, line 1229, in Main<br>    EnableCsCompleter( args )<br>  File “&#x2F;home&#x2F;cuso4d&#x2F;.vim&#x2F;plugged&#x2F;YouCompleteMe&#x2F;third_party&#x2F;ycmd&#x2F;build.py”, line 736, in EnableCsCompleter<br>    package_path &#x3D; DownloadCsCompleter( WriteStdout, download_data )<br>  File “&#x2F;home&#x2F;cuso4d&#x2F;.vim&#x2F;plugged&#x2F;YouCompleteMe&#x2F;third_party&#x2F;ycmd&#x2F;build.py”, line 786, in DownloadCsCompleter<br>    DownloadFileTo( download_url, package_path )<br>  File “&#x2F;home&#x2F;cuso4d&#x2F;.vim&#x2F;plugged&#x2F;YouCompleteMe&#x2F;third_party&#x2F;ycmd&#x2F;build.py”, line 149, in DownloadFileTo<br>    with urllib.request.urlopen( download_url ) as response:<br>  File “&#x2F;usr&#x2F;lib&#x2F;python3.8&#x2F;urllib&#x2F;request.py”, line 222, in urlopen<br>    return opener.open(url, data, timeout)<br>  File “&#x2F;usr&#x2F;lib&#x2F;python3.8&#x2F;urllib&#x2F;request.py”, line 525, in open<br>    response &#x3D; self._open(req, data)<br>  File “&#x2F;usr&#x2F;lib&#x2F;python3.8&#x2F;urllib&#x2F;request.py”, line 542, in _open<br>    result &#x3D; self._call_chain(self.handle_open, protocol, protocol +<br>  File “&#x2F;usr&#x2F;lib&#x2F;python3.8&#x2F;urllib&#x2F;request.py”, line 502, in _call_chain<br>    result &#x3D; func(*args)<br>  File “&#x2F;usr&#x2F;lib&#x2F;python3.8&#x2F;urllib&#x2F;request.py”, line 1397, in https_open<br>    return self.do_open(http.client.HTTPSConnection, req,<br>  File “&#x2F;usr&#x2F;lib&#x2F;python3.8&#x2F;urllib&#x2F;request.py”, line 1358, in do_open<br>    r &#x3D; h.getresponse()<br>  File “&#x2F;usr&#x2F;lib&#x2F;python3.8&#x2F;http&#x2F;client.py”, line 1348, in getresponse<br>    response.begin()<br>  File “&#x2F;usr&#x2F;lib&#x2F;python3.8&#x2F;http&#x2F;client.py”, line 316, in begin<br>    version, status, reason &#x3D; self._read_status()<br>  File “&#x2F;usr&#x2F;lib&#x2F;python3.8&#x2F;http&#x2F;client.py”, line 285, in _read_status<br>    raise RemoteDisconnected(“Remote end closed connection without”<br>http.client.RemoteDisconnected: Remote end closed connection without response</p><p>I don’t need a C# support. If you do, maybe you can download the file manually, or modify the build.py file.</p><h3 id="C-family-support"><a href="#C-family-support" class="headerlink" title="C-family support"></a>C-family support</h3><p>python3 install.py –clangd-completer</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;This is just a simple record. About the configuring process on Windows, here is &lt;a href=&quot;/vim-configure-process-recording/&quot;&gt;another blog&lt;</summary>
      
    
    
    
    
    <category term="Linux" scheme="https://blog.depoze.xyz/tags/Linux/"/>
    
    <category term="vim" scheme="https://blog.depoze.xyz/tags/vim/"/>
    
  </entry>
  
</feed>
